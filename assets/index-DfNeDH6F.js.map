{"version":3,"mappings":"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","names":["cn","inputs","twMerge","clsx","formatCurrency","value","numericValue","cleanedValue","formatDate","date","formatNumber","number","ToastProvider","ToastPrimitives.Provider","ToastViewport","React.forwardRef","className","props","ref","jsx","ToastPrimitives.Viewport","toastVariants","cva","Toast","variant","ToastPrimitives.Root","ToastAction","ToastPrimitives.Action","ToastClose","ToastPrimitives.Close","Cross2Icon","ToastTitle","ToastPrimitives.Title","ToastDescription","ToastPrimitives.Description","TOAST_LIMIT","TOAST_REMOVE_DELAY","count","genId","toastTimeouts","addToRemoveQueue","toastId","timeout","dispatch","reducer","state","action","toast","t","listeners","memoryState","listener","id","update","dismiss","open","useToast","setState","React.useState","React.useEffect","index","Toaster","toasts","title","description","jsxs","supabaseUrl","supabaseKey","supabase","createClient","AuthContext","createContext","fetchProfile","userId","data","error","AuthProvider","children","user","setUser","useState","session","setSession","profile","setProfile","isLoading","setIsLoading","refreshSession","_a","_b","signOut","useEffect","unsubscribe","event","fn","contextValue","React","useAuth","useContext","Loading","ProgressBar","isAnimating","progress","setProgress","timer1","timer2","timer3","timer4","buttonVariants","Button","size","asChild","Comp","Slot","ScrollArea","ScrollAreaPrimitive.Root","ScrollAreaPrimitive.Viewport","ScrollBar","ScrollAreaPrimitive.Corner","orientation","ScrollAreaPrimitive.ScrollAreaScrollbar","ScrollAreaPrimitive.ScrollAreaThumb","MobileNav","isOpen","onClose","AnimatePresence","Fragment","motion","e","X","NavigationMenu","NavigationMenuPrimitive.Root","NavigationMenuViewport","NavigationMenuList","NavigationMenuPrimitive.List","NavigationMenuItem","NavigationMenuPrimitive.Item","navigationMenuTriggerStyle","NavigationMenuTrigger","NavigationMenuPrimitive.Trigger","ChevronDown","NavigationMenuContent","NavigationMenuPrimitive.Content","NavigationMenuLink","NavigationMenuPrimitive.Link","NavigationMenuPrimitive.Viewport","NavigationMenuIndicator","NavigationMenuPrimitive.Indicator","Avatar","AvatarPrimitive.Root","AvatarImage","AvatarPrimitive.Image","AvatarFallback","AvatarPrimitive.Fallback","DropdownMenu","DropdownMenuPrimitive.Root","DropdownMenuTrigger","DropdownMenuPrimitive.Trigger","DropdownMenuSubTrigger","inset","DropdownMenuPrimitive.SubTrigger","ChevronRightIcon","DropdownMenuSubContent","DropdownMenuPrimitive.SubContent","DropdownMenuContent","sideOffset","DropdownMenuPrimitive.Portal","DropdownMenuPrimitive.Content","DropdownMenuItem","DropdownMenuPrimitive.Item","DropdownMenuCheckboxItem","checked","DropdownMenuPrimitive.CheckboxItem","DropdownMenuPrimitive.ItemIndicator","CheckIcon","DropdownMenuRadioItem","DropdownMenuPrimitive.RadioItem","DotFilledIcon","DropdownMenuLabel","DropdownMenuPrimitive.Label","DropdownMenuSeparator","DropdownMenuPrimitive.Separator","Dialog","DialogPrimitive.Root","DialogTrigger","DialogPrimitive.Trigger","DialogPortal","DialogPrimitive.Portal","DialogOverlay","DialogPrimitive.Overlay","DialogContent","DialogPrimitive.Content","DialogPrimitive.Close","DialogHeader","DialogFooter","DialogTitle","DialogPrimitive.Title","DialogDescription","DialogPrimitive.Description","Input","type","labelVariants","Label","LabelPrimitive.Root","LoginModal","onSuccess","email","setEmail","password","setPassword","handleLogin","MobileNavLinks","Header","isAuthenticated","onSignIn","onSignUp","userProfile","onSignOut","showMobileMenu","setShowMobileMenu","isScrolled","setIsScrolled","loginModalOpen","setLoginModalOpen","navigate","useNavigate","auth","actualIsAuthenticated","actualUserProfile","actualSignOut","handleScroll","handleLoginClick","handleSignOut","handleMobileNavLinkClick","requiresAuth","href","ListItem","Crown","n","LayoutDashboard","Settings","MessageCircle","FileText","LogOut","LogIn","UserPlus","Menu","item","subItem","subIndex","SplitText","text","delay","animationFrom","animationTo","easing","threshold","rootMargin","textAlign","onLetterAnimationComplete","words","word","letters","inView","setInView","useRef","animatedCount","observer","entry","springs","useSprings","_","i","next","wordIndex","letter","letterIndex","acc","w","animated","VERT","FRAG","Aurora","colorStops","amplitude","blend","propsRef","ctnDom","ctn","renderer","Renderer","gl","program","resize","width","height","geometry","Triangle","colorStopsArray","hex","c","Color","Program","mesh","Mesh","animateId","time","speed","stops","HeroSection","onSearch","subtitle","showSearch","showStats","image","searchTerm","setSearchTerm","handleSubmit","handleAnimationComplete","Search","Card","CardHeader","CardTitle","CardDescription","CardContent","CardFooter","badgeVariants","Badge","PropertyCard","address","price","squareFootage","bedrooms","bathrooms","isPremium","propertyType","createdAt","author","original_price","roi_percentage","investment_term","deal_type","isSubscriber","isDeal","images","onClick","onMessageAuthor","currentUser","isSaved","setIsSaved","handleSaveToggle","handleShare","handleMessageAuthor","imageUrl","Heart","Share","supabaseAnonKey","testSupabaseConnection","sessionData","sessionError","versionData","versionError","tablesData","tablesError","cacheExists","cacheData","cacheError","err","SUBSCRIPTION_TIERS","createCheckoutSession","priceId","response","sessionId","stripe","loadStripe","AuthModal","defaultMode","mode","setMode","isSubmitting","setIsSubmitting","showConfirmation","setShowConfirmation","signIn","signUp","signInWithGoogle","formData","setFormData","pendingPriceId","prev","Tabs","TabsPrimitive.Root","TabsList","TabsPrimitive.List","TabsTrigger","TabsPrimitive.Trigger","TabsContent","TabsPrimitive.Content","SubscriptionModal","handleSubscribe","tier","profanityList","filterProfanity","filteredText","regex","sendMessage","receiverId","content","dealId","userError","getConversations","userData","fetchConversationsForUser","conversationsMap","message","otherUser","conversationId","conversation","getMessages","otherUserId","unreadMessages","updateError","m","subscribeToMessages","callback","payload","searchUsers","query","formattedTerm","LoadingSpinner","sizeClasses","MessagesModal","messages","setMessages","newMessage","setNewMessage","receiver","setReceiver","messagesEndRef","loadMessages","scrollToBottom","msg","receiverData","handleSendMessage","Send","RandomFact","fact","setFact","Lightbulb","Footer","alertVariants","Alert","AlertTitle","AlertDescription","LegalDisclaimer","Info","getFeaturedProperties","page","perPage","start","properties","p","searchProperties","getSavedProperties","getDeals","deals","d","useDeals","limit","useInfiniteQuery","pageParam","lastPage","allPages","Marquee","direction","pauseOnHover","reverse","fade","vertical","LiquidChrome","baseColor","frequencyX","frequencyY","interactive","containerRef","container","vertexShader","fragmentShader","resUniform","handleMouseMove","rect","x","y","mouseUniform","handleTouchMove","touch","animationId","PropertyModal","property","postcode","tenure","validSaleHistory","sale","a","b","priceGrowthPercentage","mostRecentPrice","oldestPrice","mortgage","downPaymentPercent","interestRate","termYears","loanAmount","monthlyRate","numPayments","monthlyPayment","Bed","Bath","Square","Building","MapPin","PoundSterling","Compass","ArrowDownRight","ArrowUpRight","Calendar","maxPrice","s","position","reviews","firstRow","secondRow","thirdRow","fourthRow","ReviewCard","img","name","username","body","Home","isInitialLoad","setIsInitialLoad","searchResults","setSearchResults","isSearching","setIsSearching","isAuthModalOpen","setIsAuthModalOpen","isSubscriptionModalOpen","setIsSubscriptionModalOpen","authMode","setAuthMode","isMessagesModalOpen","setIsMessagesModalOpen","selectedReceiverId","setPage","hasMore","setHasMore","PROPERTIES_PER_PAGE","isFetchingMore","setIsFetchingMore","selectedProperty","setSelectedProperty","isPropertyModalOpen","setIsPropertyModalOpen","observerTarget","loadingRef","dealsData","isLoadingDeals","loadFeaturedProperties","pageNum","isLoadingMore","entries","handleSearch","term","mappedResults","showLoading","showProperties","deal","review","Layout","useBitcoinPrice","btcPrice","setBtcPrice","loading","setLoading","fetchPrice","priceText","interval","gbpAmount","BitcoinPrice","amount","convertGBPtoBTC","btcAmount","Bitcoin","updateUserProfile","updates","adminProfiles","adminCheckError","existingUsers","existingError","updateData","getAllUsers","profiles","profilesError","importProperties","Textarea","AuthContextChecker","hasAuthContext","setHasAuthContext","isChecking","setIsChecking","checkAuthContext","RefreshCw","PropertyImporterContent","setIsOpen","location","setLocation","isImporting","setIsImporting","selectedProperties","setSelectedProperties","currentPage","setCurrentPage","totalPages","setTotalPages","totalResults","setTotalResults","fileData","setFileData","jsonData","setJsonData","importStatus","setImportStatus","statusMessage","setStatusMessage","handleImport","propertiesToImport","handleFileChange","handleJsonChange","Upload","CheckCircle2","AlertCircle","PropertyImporter","Dashboard","savedProperties","setSavedProperties","addedProperties","setAddedProperties","users","setUsers","portfolioStats","setPortfolioStats","setError","loadUsers","handleUserUpdate","updatedProfile","updatedUsers","loadProperties","saved","added","totalProperties","totalValue","sum","prop","averagePrice","totalProfit","monthlyIncome","Building2","TrendingUp","Users","Star","SubscriptionPlans","onSubscribe","currentTier","key","feature","Check","PricingPage","OnboardingModal","step","setStep","handleComplete","steps","widget","SubscriptionSuccess","searchParams","useSearchParams","showOnboarding","setShowOnboarding","SubscriptionCancel","timer","MAX_FILE_SIZE","ALLOWED_FILE_TYPES","AvatarUpload","currentAvatarUrl","onUpload","userInitials","isUploading","setIsUploading","fileInputRef","handleFileSelect","file","AccountSettings","handleAvatarUpload","fileExt","fileName","filePath","uploadError","publicUrl","verifyError","handleUpdateProfile","passwordError","NotFound","Link","MOCK_NEWS","MOCK_MARKET_INSIGHTS","MOCK_RISK_ASSESSMENT","MOCK_PERSONALIZED_OPPORTUNITIES","ensureMarketInsightsTable","checkError","createError","fetchPropertyNews","article","generateMarketInsights","prompt","apiKey","url","generatedText","part","getLatestMarketInsights","getRiskAssessment","getPersonalizedOpportunities","getPredictiveAnalytics","region","MarketInsights","showHero","news","setNews","insights","setInsights","riskAssessment","setRiskAssessment","personalizedOpportunities","setPersonalizedOpportunities","newsData","latestInsights","newInsights","riskData","opportunitiesData","predictiveData","priceData","regionalData","ResponsiveContainer","LineChart","CartesianGrid","XAxis","YAxis","Tooltip","Line","visualizationTypes","PriceTrendChart","baseHeight","variance","RegionalComparisonChart","PropertyTypesChart","GrowthForecastChart","RentalYieldChart","MarketActivityChart","month","isCurrentMonth","DataVisualization","currentVisualization","setCurrentVisualization","renderVisualizationContent","PieChart","PageTransition","MarketInsightsPage","activeTab","setActiveTab","getChatResponse","getMockChatResponse","_e","_d","_c","getMockPredictiveAnalytics","apiUrl","jsonMatch","getInvestmentHotspots","getMockHotspots","popularQuestions","formatMessage","formattedText","line","MarketTrends","trends","articles","heatmapData","UKMap","regionData","growth","marketInsights","setMarketInsights","isLoadingInsights","setIsLoadingInsights","refreshingInsights","setRefreshingInsights","fetchMarketInsights","setPredictiveData","hotspots","setHotspots","isLoadingAnalytics","setIsLoadingAnalytics","refreshingPredictions","setRefreshingPredictions","refreshingHotspots","setRefreshingHotspots","isLoadingHotspots","setIsLoadingHotspots","fetchPredictiveAnalytics","transformedData","fetchHotspots","safeHotspots","hotspot","handleRefreshInsights","handleRefreshPredictions","handleRefreshHotspots","bitcoinPrice","setBitcoinPrice","bitcoinLoading","setBitcoinLoading","fetchBitcoinPrice","refreshInterval","AreaChart","Area","prediction","factor","idx","ArrowRight","trend","MarketTrendsPage","MarketTrendsContent","ArticlePage","readTime","Clock","paragraph","reportData","ResearchReports","reports","setReports","handleViewReport","report","formatDistance","Tag","Eye","Skeleton","PropertyCardSkeleton","DealCard","showMessageButton","isMessageModalOpen","setIsMessageModalOpen","handleMessageClick","Select","SelectPrimitive.Root","SelectValue","SelectPrimitive.Value","SelectTrigger","SelectPrimitive.Trigger","SelectPrimitive.Icon","SelectScrollUpButton","SelectPrimitive.ScrollUpButton","ChevronUp","SelectScrollDownButton","SelectPrimitive.ScrollDownButton","SelectContent","SelectPrimitive.Portal","SelectPrimitive.Content","SelectPrimitive.Viewport","SelectLabel","SelectPrimitive.Label","SelectItem","SelectPrimitive.Item","SelectPrimitive.ItemIndicator","SelectPrimitive.ItemText","SelectSeparator","SelectPrimitive.Separator","ResearchRequests","requestType","setRequestType","requestDetails","setRequestDetails","requestPriority","setRequestPriority","submittedRequests","setSubmittedRequests","newRequest","canSubmitHighPriority","requestsRemaining","getStatusIcon","status","AlertTriangle","dateString","request","FileQuestion","Download","ResearchPage","ResearchPageContent","setDeals","mounted","loadDeals","BlogPage","__","blogPosts","post","HelpSupportPage","supportCategories","Book","HelpCircle","contactMethods","Mail","Phone","category","method","GEMINI_API_KEY","GEMINI_API_URL","ChatBot","aiMessages","setAiMessages","supportMessages","setSupportMessages","directMessages","setDirectMessages","input","setInput","contacts","setContacts","selectedContact","setSelectedContact","scrollRef","loadContacts","handleOpenMessages","contact","uniqueContacts","handleSend","aiResponse","supportConversationId","userMsgError","autoResponse","supportError","subscription","question","AuthCallback","aiFeatures","Brain","BarChart3","MessageSquare","Shield","managementServices","PropertyManagementPage","service","Slider","SliderPrimitive.Root","SliderPrimitive.Track","SliderPrimitive.Range","SliderPrimitive.Thumb","genAI","initializeAI","GoogleGenerativeAI","__vitePreload","sanitizeJsonString","str","end","getInvestmentAnalysis","budget","model","parsedData","getMarketPredictions","getInvestmentStrategy","investorProfile","InvestmentOpportunitiesPage","setPropertyType","setBudget","analysis","setAnalysis","predictions","setPredictions","strategy","setStrategy","handleAnalyze","analysisData","predictionsData","strategyData","Loader2","risk","AboutUsPage","DealModal","DealsPage","DealsPageContent","selectedDeal","setSelectedDeal","Messages","authUser","conversations","setConversations","selectedConversation","setSelectedConversation","isMessagesLoading","setIsMessagesLoading","isNewChatOpen","setIsNewChatOpen","isMobileView","setIsMobileView","mobileShowMessages","setMobileShowMessages","useSWR","handleResize","loadConversations","authListener","activeUser","msgs","results","searchUsersApi","handleBackToConversations","Plus","formatDistanceToNow","ArrowLeft","isUser","showAvatar","APIFY_API_TOKEN","APIFY_ACTOR_ID","CACHE_TTL_HOURS","isCacheValid","ttlHours","cacheTime","currentTime","ttlMillis","ensureScraperCacheTableExists","countData","countError","testKey","insertError","testApifyToken","getCachedOrFresh","fetchFn","cachedResult","freshData","runApifyActor","isDev","startResponse","errorText","runId","isFinished","attempt","maxAttempts","resolve","statusResponse","statusData","datasetResponse","convertApifyPropertyToRightmoveProperty","apifyProperty","agentName","agentPhone","agentLogoUrl","typeMatches","floorArea","features","postcodeMatch","searchRightmoveProperties","filters","minPrice","minBeds","maxBeds","cleanLocation","cacheKey","tokenTest","searchUrl","apifyInput","apifyResults","total","getPropertyDetails","propertyId","result","exists","analyzePropertyInvestment","constructPropertyAnalysisPrompt","analysisText","parseGeminiResponse","generateMockAnalysis","responseText","jsonStr","validateNumber","defaultValue","numValue","rec","safePrice","propertyHash","char","rand","min","max","isHighEnd","isMidRange","isLowEnd","baseYield","strategies","monthlyRent","estimatedCashFlow","estimatedAnnualProfit","strategyRecommendations","score","reasoning","postcodePrefix","postcodeValue","areaGrowthPotential","areaInvestmentRating","areaDescription","baseRenovationCost","sizeMultiplier","estimatedRenovationCost","_f","_g","_h","_i","EnvVarDisplay","stringValue","isBoolean","displayValue","EnvironmentDebug","isExpanded","setIsExpanded","apiKeyTestResult","setApiKeyTestResult","isTestingApi","setIsTestingApi","apiStatus","setApiStatus","apifyTestResult","setApifyTestResult","isTestingApify","setIsTestingApify","apifyRightmoveTestResult","setApifyRightmoveTestResult","isTestingApifyRightmove","setIsTestingApifyRightmove","testLocation","setTestLocation","showCorsHelp","setShowCorsHelp","apifyStatus","setApifyStatus","geminiStatus","setGeminiStatus","isTestingGemini","setIsTestingGemini","allEnvVars","__vite_import_meta_env__","mockDataEnv","mockDataString","mockDataBoolean","scraperApiKey","apifyToken","testApifyAPIToken","testApifyRightmoveScraper","testInput","animationStyles","saleHistoryData","areaInsights","investmentAnalysis","stableProperty","setStableProperty","memoizedProperty","formattedPrice","getMetric","getCashFlow","calculateTotalPriceGrowth","firstSale","lastSale","calculateAnnualGrowth","firstDate","yearsDiff","totalGrowthRate","calculatePricePerSqft","pricePerSqft","annualGrowthRate","totalPriceGrowth","MemoizedPropertyCard","onSelect","analyzingProperties","propertyAnalysis","isAnalyzing","Listings","setProperties","selectedPropertySaleHistory","setSelectedPropertySaleHistory","selectedPropertyAreaInsights","setSelectedPropertyAreaInsights","selectedPropertyAnalysis","setSelectedPropertyAnalysis","setMinPrice","setMaxPrice","setMinBeds","setMaxBeds","viewMode","setViewMode","isMockData","setIsMockData","initializing","setInitializing","isTableReady","setIsTableReady","dbDiagnostics","setDbDiagnostics","runningDiagnostics","setRunningDiagnostics","scraperError","setScraperError","directPropertyId","setDirectPropertyId","isDirectPropertyLoading","setIsDirectPropertyLoading","apiKeyInvalid","setApiKeyInvalid","showDebugPanel","setShowDebugPanel","searchDetails","setSearchDetails","setPropertyAnalysis","setAnalyzingProperties","searchError","setSearchError","mockSaleHistory","baseDate","numSales","currentDate","currentPrice","yearsToAdd","increase","mockAreaInsights","searchLocation","searchStartTime","startTime","searchInfo","searchDurationMs","validCount","zeroPriceCount","missingAddressCount","searchDuration","minimumLoadingTime","handleHeroSearch","initializeScraper","success","runDatabaseDiagnostics","connectionTest","directTableTest","insertTest","tableExists","getPropertyAnalysis","handlePropertySelect","saleHistory","analyzePropertiesInBatches","batchSize","delayMs","currentBatch","totalBatches","processNextBatch","startIdx","endIdx","batch","handleDirectPropertySearch","errorMessage","MortgageCalculator","propertyValue","setPropertyValue","deposit","setDeposit","setInterestRate","mortgageTerm","setMortgageTerm","setMonthlyPayment","totalRepayment","setTotalRepayment","totalInterest","setTotalInterest","calculateMortgage","monthlyInterestRate","numberOfPayments","monthly","totalPaid","totalInterestPaid","ltv","CalculatorIcon","Percent","Checkbox","CheckboxPrimitive.Root","CheckboxPrimitive.Indicator","StampDutyCalculator","isFirstTimeBuyer","setIsFirstTimeBuyer","isAdditionalProperty","setIsAdditionalProperty","isNonUKResident","setIsNonUKResident","stampDuty","setStampDuty","breakdown","setBreakdown","calculateStampDuty","bands","totalTax","breakdownItems","additionalRate","nonUKResidentRate","remainingValue","band","bandWidth","amountInBand","bandRate","bandTax","bandLabel","YieldCalculator","setMonthlyRent","annualExpenses","setAnnualExpenses","grossYield","setGrossYield","netYield","setNetYield","calculateYield","annualRent","grossYieldValue","netYieldValue","BadgePercent","ROICalculator","purchasePrice","setPurchasePrice","renovationCost","setRenovationCost","otherCosts","setOtherCosts","holdingPeriod","setHoldingPeriod","annualAppreciation","setAnnualAppreciation","financingMethod","setFinancingMethod","mortgageDeposit","setMortgageDeposit","setResults","calculateROI","totalInvestment","annualMortgagePayments","annualCashFlow","cashOnCashReturn","estimatedSalePrice","outstandingMortgage","balance","interestPayment","principalPayment","totalCashFlow","equityGain","totalROI","annualizedROI","AffordabilityCalculator","annualIncome","setAnnualIncome","additionalIncome","setAdditionalIncome","monthlyDebts","setMonthlyDebts","loanToIncomeMultiplier","setLoanToIncomeMultiplier","calculateAffordability","totalIncome","maxMortgage","maxPropertyPrice","affordabilityRatio","stressTestRate","stressX","stressTestedPayment","ShieldCheck","Calculators","ReportDetailPage","slug","useParams","setReport","relatedReports","setRelatedReports","foundReport","r","related","canAccessContent","User","Share2","Bookmark","PenSquare","relatedReport","formSchema","z","WaitlistPage","isSubmitted","setIsSubmitted","showDevAuth","setShowDevAuth","loginEmail","setLoginEmail","loginPassword","setLoginPassword","isLoggingIn","setIsLoggingIn","register","errors","useForm","zodResolver","onSubmit","handleEmailLogin","target","ChevronRight","Zap","FeatureItem","color","useReportRequests","fetchReportRequests","profileData","profileError","reportsWithProfiles","createReportRequest","downloadReport","reportId","reportError","link","getAllReportRequests","profilesData","profilesMap","map","updateReportStatus","notes","uploadReportFile","Table","TableHeader","TableBody","TableFooter","TableRow","TableHead","TableCell","TableCaption","AlertDialog","AlertDialogPrimitive.Root","AlertDialogTrigger","AlertDialogPrimitive.Trigger","AlertDialogPortal","AlertDialogPrimitive.Portal","AlertDialogOverlay","AlertDialogPrimitive.Overlay","AlertDialogContent","AlertDialogPrimitive.Content","AlertDialogHeader","AlertDialogFooter","AlertDialogTitle","AlertDialogPrimitive.Title","AlertDialogDescription","AlertDialogPrimitive.Description","AlertDialogAction","AlertDialogPrimitive.Action","AlertDialogCancel","AlertDialogPrimitive.Cancel","Form","FormProvider","FormFieldContext","React.createContext","FormField","Controller","useFormField","fieldContext","React.useContext","itemContext","FormItemContext","getFieldState","formState","useFormContext","fieldState","FormItem","React.useId","FormLabel","formItemId","FormControl","formDescriptionId","formMessageId","FormDescription","FormMessage","reportRequestSchema","ResearchAndReports","isRequestDialogOpen","setIsRequestDialogOpen","form","handleDownloadReport","getStatusBadge","PlusCircle","field","AdminReports","selectedReport","setSelectedReport","statusFilter","setStatusFilter","updateDialogOpen","setUpdateDialogOpen","uploadDialogOpen","setUploadDialogOpen","selectedFile","setSelectedFile","setNotes","newStatus","setNewStatus","isAdmin","allReports","handleStatusChange","handleFileUpload","filteredReports","Filter","SCRAPER_API_KEY","SCRAPER_API_URL","testScraperAPIKey","scraperApiUrl","validateScraperAPIKey","isValid","checkPropertyActiveStatus","rightmoveUrl","html","isInactive","purgeExpiredCache","checkActiveListings","cachedProperties","inactiveCount","cachedProperty","cleanupExpiredCache","deletedCount","runBackgroundJobs","setupBackgroundJobs","ArticlePageWrapper","isAuthChecking","PrivateRoute","useLocation","authConfirmed","setAuthConfirmed","hasLocalAuth","authTimestamp","isRecentAuth","AppContent","refreshProfile","isDevelopment","setIsDevelopment","isMounted","handleStart","handleStop","Routes","Route","Navigate","App","Suspense","TempoDevtools","posthog","queryClient","QueryClient","ReactDOM","QueryClientProvider","BrowserRouter"],"ignoreList":[],"sources":["../../src/lib/utils.ts","../../src/components/ui/toast.tsx","../../src/components/ui/use-toast.ts","../../src/components/ui/toaster.tsx","../../src/lib/supabaseClient.ts","../../src/lib/auth.ts","../../src/components/ui/loading.tsx","../../src/components/ui/progress-bar.tsx","../../src/components/ui/button.tsx","../../src/components/ui/scroll-area.tsx","../../src/components/MobileNav.jsx","../../src/components/ui/navigation-menu.tsx","../../src/components/ui/avatar.tsx","../../src/components/ui/dropdown-menu.tsx","../../src/components/ui/dialog.tsx","../../src/components/ui/input.tsx","../../src/components/ui/label.tsx","../../src/components/auth/LoginModal.tsx","../../src/components/Header.tsx","../../src/components/ui/SplitText.tsx","../../src/components/ui/Aurora.tsx","../../src/components/HeroSection.tsx","../../src/components/ui/card.tsx","../../src/components/ui/badge.tsx","../../src/components/PropertyCard.tsx","../../src/lib/supabase.ts","../../src/lib/stripe.ts","../../src/components/AuthModal.tsx","../../src/components/ui/tabs.tsx","../../src/components/SubscriptionModal.tsx","../../src/lib/messages.ts","../../src/components/ui/loading-spinner.tsx","../../src/components/MessagesModal.tsx","../../src/components/RandomFact.tsx","../../src/components/Footer.tsx","../../src/components/ui/alert.tsx","../../src/components/LegalDisclaimer.tsx","../../src/lib/properties.ts","../../src/components/ui/Marquee.tsx","../../src/components/LiquidChrome.tsx","../../src/components/PropertyModal.tsx","../../src/components/home.tsx","../../src/components/Layout.tsx","../../src/lib/hooks/useBitcoinPrice.ts","../../src/components/BitcoinPrice.tsx","../../src/lib/users.ts","../../src/lib/propertyScraperService.ts","../../src/components/ui/textarea.tsx","../../src/lib/AuthContextChecker.tsx","../../src/components/PropertyImporter.tsx","../../src/components/Dashboard.tsx","../../src/components/SubscriptionPlans.tsx","../../src/components/PricingPage.tsx","../../src/components/OnboardingModal.jsx","../../src/components/SubscriptionSuccess.tsx","../../src/components/SubscriptionCancel.tsx","../../src/components/AvatarUpload.tsx","../../src/components/AccountSettings.tsx","../../src/components/NotFound.tsx","../../src/lib/market-insights.ts","../../src/components/MarketInsights.tsx","../../src/components/DataVisualization.tsx","../../src/components/ui/page-transition.tsx","../../src/components/MarketInsightsPage.tsx","../../src/lib/chat.ts","../../src/components/MarketTrends.tsx","../../src/components/MarketTrendsPage.tsx","../../src/components/ArticlePage.tsx","../../src/components/ResearchReports.tsx","../../src/lib/deals.ts","../../src/components/ui/skeleton.tsx","../../src/components/DealCard.tsx","../../src/components/ui/select.tsx","../../src/components/ResearchRequests.tsx","../../src/components/ResearchPage.tsx","../../src/components/BlogPage.tsx","../../src/components/HelpSupportPage.tsx","../../src/components/ChatBot.tsx","../../src/components/AuthCallback.tsx","../../src/components/PropertyManagementPage.tsx","../../src/components/ui/slider.tsx","../../src/lib/ai-utils.ts","../../src/components/InvestmentOpportunitiesPage.tsx","../../src/components/AboutUsPage.tsx","../../src/components/DealModal.tsx","../../src/components/DealsPage.tsx","../../src/pages/Messages.tsx","../../src/lib/apifyRightmoveScraper.ts","../../src/lib/geminiService.ts","../../src/components/EnvironmentDebug.tsx","../../src/pages/Listings.tsx","../../src/components/calculators/MortgageCalculator.tsx","../../src/components/ui/checkbox.tsx","../../src/components/calculators/StampDutyCalculator.tsx","../../src/components/calculators/YieldCalculator.tsx","../../src/components/calculators/ROICalculator.tsx","../../src/components/calculators/AffordabilityCalculator.tsx","../../src/pages/Calculators.tsx","../../src/components/ReportDetailPage.tsx","../../src/components/WaitlistPage.tsx","../../src/hooks/useReportRequests.ts","../../src/components/ui/table.tsx","../../src/components/ui/alert-dialog.tsx","../../src/components/ui/form.tsx","../../src/pages/ResearchAndReports.tsx","../../src/pages/AdminReports.tsx","../../src/lib/rightmoveScraper.ts","../../src/lib/backgroundJobs.ts","../../src/App.tsx","../../src/main.tsx"],"sourcesContent":["import { type ClassValue, clsx } from 'clsx';\nimport { twMerge } from 'tailwind-merge';\n\n/**\n * Merge class names with tailwind classes\n */\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs));\n}\n\n/**\n * Format a number as currency in GBP\n */\nexport const formatCurrency = (value: number | string | undefined | null): string => {\n  // Handle undefined, null or NaN values\n  if (value === undefined || value === null || (typeof value === 'number' && isNaN(value))) {\n    console.warn('Received invalid value for currency formatting:', value);\n    return '£0'; // Return a default value\n  }\n  \n  // Convert string values to numbers if needed\n  let numericValue: number;\n  \n  if (typeof value === 'string') {\n    // Remove any currency symbols, commas, and spaces\n    const cleanedValue = value.replace(/[£$€,\\s]/g, '');\n    numericValue = parseFloat(cleanedValue);\n    \n    // Check if parsing was successful\n    if (isNaN(numericValue)) {\n      console.warn(`Failed to parse currency string: \"${value}\" → \"${cleanedValue}\" → NaN`);\n      return '£0';\n    }\n  } else {\n    numericValue = value;\n  }\n  \n  // Format the number using the GB locale and GBP currency\n  return new Intl.NumberFormat('en-GB', {\n    style: 'currency',\n    currency: 'GBP',\n    maximumFractionDigits: 0,\n  }).format(numericValue);\n};\n\n// Add any other utility functions you need\nexport function formatDate(date: string | Date): string {\n  return new Intl.DateTimeFormat('en-GB', {\n    day: 'numeric',\n    month: 'long',\n    year: 'numeric',\n  }).format(new Date(date));\n}\n\nexport function formatNumber(number: number): string {\n  return new Intl.NumberFormat('en-GB').format(number);\n}\n","import * as React from \"react\"\nimport { Cross2Icon } from \"@radix-ui/react-icons\"\nimport * as ToastPrimitives from \"@radix-ui/react-toast\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ToastProvider = ToastPrimitives.Provider\n\nconst ToastViewport = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Viewport>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Viewport>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Viewport\n    ref={ref}\n    className={cn(\n      \"fixed top-0 z-[100] flex max-h-screen w-full flex-col-reverse p-4 sm:bottom-0 sm:right-0 sm:top-auto sm:flex-col md:max-w-[420px]\",\n      className\n    )}\n    {...props}\n  />\n))\nToastViewport.displayName = ToastPrimitives.Viewport.displayName\n\nconst toastVariants = cva(\n  \"group pointer-events-auto relative flex w-full items-center justify-between space-x-2 overflow-hidden rounded-md border p-4 pr-6 shadow-lg transition-all data-[swipe=cancel]:translate-x-0 data-[swipe=end]:translate-x-[var(--radix-toast-swipe-end-x)] data-[swipe=move]:translate-x-[var(--radix-toast-swipe-move-x)] data-[swipe=move]:transition-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[swipe=end]:animate-out data-[state=closed]:fade-out-80 data-[state=closed]:slide-out-to-right-full data-[state=open]:slide-in-from-top-full data-[state=open]:sm:slide-in-from-bottom-full\",\n  {\n    variants: {\n      variant: {\n        default: \"border bg-background text-foreground\",\n        destructive:\n          \"destructive group border-destructive bg-destructive text-destructive-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Toast = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Root> &\n    VariantProps<typeof toastVariants>\n>(({ className, variant, ...props }, ref) => {\n  return (\n    <ToastPrimitives.Root\n      ref={ref}\n      className={cn(toastVariants({ variant }), className)}\n      {...props}\n    />\n  )\n})\nToast.displayName = ToastPrimitives.Root.displayName\n\nconst ToastAction = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Action>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Action>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Action\n    ref={ref}\n    className={cn(\n      \"inline-flex h-8 shrink-0 items-center justify-center rounded-md border bg-transparent px-3 text-sm font-medium transition-colors hover:bg-secondary focus:outline-none focus:ring-1 focus:ring-ring disabled:pointer-events-none disabled:opacity-50 group-[.destructive]:border-muted/40 group-[.destructive]:hover:border-destructive/30 group-[.destructive]:hover:bg-destructive group-[.destructive]:hover:text-destructive-foreground group-[.destructive]:focus:ring-destructive\",\n      className\n    )}\n    {...props}\n  />\n))\nToastAction.displayName = ToastPrimitives.Action.displayName\n\nconst ToastClose = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Close>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Close>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Close\n    ref={ref}\n    className={cn(\n      \"absolute right-1 top-1 rounded-md p-1 text-foreground/50 opacity-0 transition-opacity hover:text-foreground focus:opacity-100 focus:outline-none focus:ring-1 group-hover:opacity-100 group-[.destructive]:text-red-300 group-[.destructive]:hover:text-red-50 group-[.destructive]:focus:ring-red-400 group-[.destructive]:focus:ring-offset-red-600\",\n      className\n    )}\n    toast-close=\"\"\n    {...props}\n  >\n    <Cross2Icon className=\"h-4 w-4\" />\n  </ToastPrimitives.Close>\n))\nToastClose.displayName = ToastPrimitives.Close.displayName\n\nconst ToastTitle = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Title>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Title>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Title\n    ref={ref}\n    className={cn(\"text-sm font-semibold [&+div]:text-xs\", className)}\n    {...props}\n  />\n))\nToastTitle.displayName = ToastPrimitives.Title.displayName\n\nconst ToastDescription = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Description>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Description>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Description\n    ref={ref}\n    className={cn(\"text-sm opacity-90\", className)}\n    {...props}\n  />\n))\nToastDescription.displayName = ToastPrimitives.Description.displayName\n\ntype ToastProps = React.ComponentPropsWithoutRef<typeof Toast>\n\ntype ToastActionElement = React.ReactElement<typeof ToastAction>\n\nexport {\n  type ToastProps,\n  type ToastActionElement,\n  ToastProvider,\n  ToastViewport,\n  Toast,\n  ToastTitle,\n  ToastDescription,\n  ToastClose,\n  ToastAction,\n}\n","// Inspired by react-hot-toast library\nimport * as React from \"react\"\n\nimport type {\n  ToastActionElement,\n  ToastProps,\n} from \"@/components/ui/toast\"\n\nconst TOAST_LIMIT = 1\nconst TOAST_REMOVE_DELAY = 1000000\n\ntype ToasterToast = ToastProps & {\n  id: string\n  title?: React.ReactNode\n  description?: React.ReactNode\n  action?: ToastActionElement\n}\n\nconst actionTypes = {\n  ADD_TOAST: \"ADD_TOAST\",\n  UPDATE_TOAST: \"UPDATE_TOAST\",\n  DISMISS_TOAST: \"DISMISS_TOAST\",\n  REMOVE_TOAST: \"REMOVE_TOAST\",\n} as const\n\nlet count = 0\n\nfunction genId() {\n  count = (count + 1) % Number.MAX_SAFE_INTEGER\n  return count.toString()\n}\n\ntype ActionType = typeof actionTypes\n\ntype Action =\n  | {\n      type: ActionType[\"ADD_TOAST\"]\n      toast: ToasterToast\n    }\n  | {\n      type: ActionType[\"UPDATE_TOAST\"]\n      toast: Partial<ToasterToast>\n    }\n  | {\n      type: ActionType[\"DISMISS_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n  | {\n      type: ActionType[\"REMOVE_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n\ninterface State {\n  toasts: ToasterToast[]\n}\n\nconst toastTimeouts = new Map<string, ReturnType<typeof setTimeout>>()\n\nconst addToRemoveQueue = (toastId: string) => {\n  if (toastTimeouts.has(toastId)) {\n    return\n  }\n\n  const timeout = setTimeout(() => {\n    toastTimeouts.delete(toastId)\n    dispatch({\n      type: \"REMOVE_TOAST\",\n      toastId: toastId,\n    })\n  }, TOAST_REMOVE_DELAY)\n\n  toastTimeouts.set(toastId, timeout)\n}\n\nexport const reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case \"ADD_TOAST\":\n      return {\n        ...state,\n        toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT),\n      }\n\n    case \"UPDATE_TOAST\":\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === action.toast.id ? { ...t, ...action.toast } : t\n        ),\n      }\n\n    case \"DISMISS_TOAST\": {\n      const { toastId } = action\n\n      // ! Side effects ! - This could be extracted into a dismissToast() action,\n      // but I'll keep it here for simplicity\n      if (toastId) {\n        addToRemoveQueue(toastId)\n      } else {\n        state.toasts.forEach((toast) => {\n          addToRemoveQueue(toast.id)\n        })\n      }\n\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === toastId || toastId === undefined\n            ? {\n                ...t,\n                open: false,\n              }\n            : t\n        ),\n      }\n    }\n    case \"REMOVE_TOAST\":\n      if (action.toastId === undefined) {\n        return {\n          ...state,\n          toasts: [],\n        }\n      }\n      return {\n        ...state,\n        toasts: state.toasts.filter((t) => t.id !== action.toastId),\n      }\n  }\n}\n\nconst listeners: Array<(state: State) => void> = []\n\nlet memoryState: State = { toasts: [] }\n\nfunction dispatch(action: Action) {\n  memoryState = reducer(memoryState, action)\n  listeners.forEach((listener) => {\n    listener(memoryState)\n  })\n}\n\ntype Toast = Omit<ToasterToast, \"id\">\n\nfunction toast({ ...props }: Toast) {\n  const id = genId()\n\n  const update = (props: ToasterToast) =>\n    dispatch({\n      type: \"UPDATE_TOAST\",\n      toast: { ...props, id },\n    })\n  const dismiss = () => dispatch({ type: \"DISMISS_TOAST\", toastId: id })\n\n  dispatch({\n    type: \"ADD_TOAST\",\n    toast: {\n      ...props,\n      id,\n      open: true,\n      onOpenChange: (open) => {\n        if (!open) dismiss()\n      },\n    },\n  })\n\n  return {\n    id: id,\n    dismiss,\n    update,\n  }\n}\n\nfunction useToast() {\n  const [state, setState] = React.useState<State>(memoryState)\n\n  React.useEffect(() => {\n    listeners.push(setState)\n    return () => {\n      const index = listeners.indexOf(setState)\n      if (index > -1) {\n        listeners.splice(index, 1)\n      }\n    }\n  }, [state])\n\n  return {\n    ...state,\n    toast,\n    dismiss: (toastId?: string) => dispatch({ type: \"DISMISS_TOAST\", toastId }),\n  }\n}\n\nexport { useToast, toast }\n","import {\n  Toast,\n  ToastClose,\n  ToastDescription,\n  ToastProvider,\n  ToastTitle,\n  ToastViewport,\n} from \"@/components/ui/toast\"\nimport { useToast } from \"@/components/ui/use-toast\"\n\nexport function Toaster() {\n  const { toasts } = useToast()\n\n  return (\n    <ToastProvider>\n      {toasts.map(function ({ id, title, description, action, ...props }) {\n        return (\n          <Toast key={id} {...props}>\n            <div className=\"grid gap-1\">\n              {title && <ToastTitle>{title}</ToastTitle>}\n              {description && (\n                <ToastDescription>{description}</ToastDescription>\n              )}\n            </div>\n            {action}\n            <ToastClose />\n          </Toast>\n        )\n      })}\n      <ToastViewport />\n    </ToastProvider>\n  )\n}\n","import { createClient } from '@supabase/supabase-js';\n\n// Get the Supabase URL and key from environment variables\nconst supabaseUrl = import.meta.env.VITE_SUPABASE_URL;\nconst supabaseKey = import.meta.env.VITE_SUPABASE_ANON_KEY;\n\n// Validate that the environment variables are set\nif (!supabaseUrl || !supabaseKey) {\n  console.error('Supabase URL or key is missing from environment variables');\n}\n\n// Create the Supabase client\nexport const supabase = createClient(supabaseUrl, supabaseKey);\n\n// Export a function to check if a user is currently authenticated\nexport const isAuthenticated = async () => {\n  const { data } = await supabase.auth.getSession();\n  return !!data.session;\n};\n\n// Debug function to log the current user\nexport const debugCurrentUser = async () => {\n  try {\n    const { data } = await supabase.auth.getSession();\n    console.log('Current session:', data.session);\n    console.log('Current user:', data.session?.user);\n    return data.session?.user;\n  } catch (error) {\n    console.error('Error getting session:', error);\n    return null;\n  }\n}; ","import React, { useState, useEffect, createContext, useContext, ReactNode } from 'react';\nimport { supabase } from './supabaseClient';\nimport { User, Session } from '@supabase/supabase-js';\n\n// Define the types for our user profile\nexport type UserProfile = {\n  id: string;\n  full_name?: string | null;\n  email?: string | null;\n  created_at?: string;\n  role?: \"user\" | \"admin\" | \"moderator\" | null;\n  stripe_customer_id?: string | null;\n  subscription_status?: string | null;\n  subscription_tier?: \"free\" | \"basic\" | \"pro\" | \"premium\" | null;\n  updated_at?: string;\n  avatar_url?: string | null;\n};\n\n// Type for our auth context\ninterface AuthContextType {\n  user: User | null;\n  session: Session | null;\n  profile: UserProfile | null;\n  isLoading: boolean;\n  signOut: () => Promise<void>;\n  refreshSession: () => Promise<void>;\n}\n\n// Create the context with a default value\nconst AuthContext = createContext<AuthContextType>({\n  user: null,\n  session: null,\n  profile: null,\n  isLoading: true,\n  signOut: async () => {},\n  refreshSession: async () => {}\n});\n\n// Helper function to fetch user profile\nconst fetchProfile = async (userId: string): Promise<UserProfile | null> => {\n  try {\n    const { data, error } = await supabase\n      .from('profiles')\n      .select('*')\n      .eq('id', userId)\n      .single();\n\n    if (error) {\n      console.error('Error fetching profile:', error);\n      return null;\n    }\n\n    console.log('Fetched profile data:', data);\n    return data as UserProfile;\n  } catch (error) {\n    console.error('Error in fetchProfile:', error);\n    return null;\n  }\n};\n\n// Provider component\nexport const AuthProvider = ({ children }: { children: ReactNode }) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [session, setSession] = useState<Session | null>(null);\n  const [profile, setProfile] = useState<UserProfile | null>(null);\n  const [isLoading, setIsLoading] = useState(true);\n\n  // Function to refresh the session and user data\n  const refreshSession = async () => {\n    try {\n      setIsLoading(true);\n      console.log('Refreshing session...');\n      \n      const { data, error } = await supabase.auth.getSession();\n      \n      if (error) {\n        throw error;\n      }\n      \n      console.log('Session data:', data);\n      setSession(data.session);\n      setUser(data.session?.user || null);\n      \n      if (data.session?.user) {\n        const profile = await fetchProfile(data.session.user.id);\n        setProfile(profile);\n      } else {\n        setProfile(null);\n      }\n    } catch (error) {\n      console.error('Error refreshing session:', error);\n      setUser(null);\n      setProfile(null);\n      setSession(null);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Sign out function\n  const signOut = async () => {\n    try {\n      setIsLoading(true);\n      const { error } = await supabase.auth.signOut();\n      if (error) {\n        throw error;\n      }\n      setUser(null);\n      setProfile(null);\n      setSession(null);\n    } catch (error) {\n      console.error('Error signing out:', error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Initialize and set up auth listener\n  useEffect(() => {\n    // First, get the current session\n    const initializeAuth = async () => {\n      setIsLoading(true);\n      console.log('Initializing auth...');\n      \n      try {\n        const { data, error } = await supabase.auth.getSession();\n        \n        if (error) {\n          throw error;\n        }\n        \n        console.log('Initial session data:', data);\n        setSession(data.session);\n        setUser(data.session?.user || null);\n        \n        if (data.session?.user) {\n          const profile = await fetchProfile(data.session.user.id);\n          setProfile(profile);\n        }\n      } catch (error) {\n        console.error('Error initializing auth:', error);\n      } finally {\n        setIsLoading(false);\n      }\n      \n      // Set up the auth state change listener\n      const { data } = supabase.auth.onAuthStateChange(async (event, session) => {\n        console.log('Auth state changed:', event, session);\n        setSession(session);\n        setUser(session?.user || null);\n        \n        if (session?.user) {\n          const profile = await fetchProfile(session.user.id);\n          setProfile(profile);\n        } else {\n          setProfile(null);\n        }\n      });\n      \n      // Return the unsubscribe function\n      return () => {\n        data.subscription.unsubscribe();\n      };\n    };\n\n    const unsubscribe = initializeAuth();\n    \n    // Cleanup\n    return () => {\n      unsubscribe.then(fn => fn && fn());\n    };\n  }, []);\n\n  // Create the context value\n  const contextValue = {\n    user,\n    session,\n    profile,\n    isLoading,\n    signOut,\n    refreshSession\n  };\n\n  return React.createElement(AuthContext.Provider, { value: contextValue }, children);\n};\n\n// Custom hook to use the auth context\nexport function useAuth() {\n  return useContext(AuthContext);\n} ","import * as React from \"react\"\nimport { cn } from \"@/lib/utils\" // Double-check this line!\n\nexport function Loading({ className }: { className?: string }) {\n  return (\n    <div className={cn(\"flex items-center justify-center\", className)}>\n      <div className=\"h-4 w-4 animate-spin rounded-full border-2 border-primary border-t-transparent\" />\n    </div>\n  )\n}\n","import React, { useEffect, useState } from 'react';\n// import NProgress from \"nprogress\"; // Remove this line\n// import \"nprogress/nprogress.css\"; // Also remove this line\n\n// NProgress.configure({ // Remove this block\n//   showSpinner: false,\n//   trickleSpeed: 200,\n//   minimum: 0.08,\n// });\n\ninterface ProgressBarProps {\n  isAnimating: boolean;\n}\n\nexport function ProgressBar({ isAnimating }: ProgressBarProps) {\n  const [progress, setProgress] = useState(0);\n\n  useEffect(() => {\n    if (!isAnimating) {\n      setProgress(0);\n      return;\n    }\n\n    // Start progress animation\n    setProgress(10);\n    \n    const timer1 = setTimeout(() => setProgress(30), 100);\n    const timer2 = setTimeout(() => setProgress(60), 500);\n    const timer3 = setTimeout(() => setProgress(80), 800);\n    const timer4 = setTimeout(() => setProgress(100), 1000);\n    \n    return () => {\n      clearTimeout(timer1);\n      clearTimeout(timer2);\n      clearTimeout(timer3);\n      clearTimeout(timer4);\n    };\n  }, [isAnimating]);\n\n  if (!isAnimating && progress === 0) return null;\n\n  return (\n    <div className=\"fixed top-0 left-0 right-0 z-50\">\n      <div \n        className=\"h-1 bg-primary transition-all duration-300 ease-in-out\"\n        style={{ \n          width: `${progress}%`,\n          opacity: progress === 100 ? 0 : 1\n        }}\n      />\n    </div>\n  );\n}\n","import * as React from \"react\";\nimport { Slot } from \"@radix-ui/react-slot\";\nimport { cva, type VariantProps } from \"class-variance-authority\";\n\nimport { cn } from \"@/lib/utils\";\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  },\n);\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean;\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\";\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    );\n  },\n);\nButton.displayName = \"Button\";\n\nexport { Button, buttonVariants };\n","import * as React from \"react\"\nimport * as ScrollAreaPrimitive from \"@radix-ui/react-scroll-area\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ScrollArea = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <ScrollAreaPrimitive.Root\n    ref={ref}\n    className={cn(\"relative overflow-hidden\", className)}\n    {...props}\n  >\n    <ScrollAreaPrimitive.Viewport className=\"h-full w-full rounded-[inherit]\">\n      {children}\n    </ScrollAreaPrimitive.Viewport>\n    <ScrollBar />\n    <ScrollAreaPrimitive.Corner />\n  </ScrollAreaPrimitive.Root>\n))\nScrollArea.displayName = ScrollAreaPrimitive.Root.displayName\n\nconst ScrollBar = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>\n>(({ className, orientation = \"vertical\", ...props }, ref) => (\n  <ScrollAreaPrimitive.ScrollAreaScrollbar\n    ref={ref}\n    orientation={orientation}\n    className={cn(\n      \"flex touch-none select-none transition-colors\",\n      orientation === \"vertical\" &&\n        \"h-full w-2.5 border-l border-l-transparent p-[1px]\",\n      orientation === \"horizontal\" &&\n        \"h-2.5 flex-col border-t border-t-transparent p-[1px]\",\n      className\n    )}\n    {...props}\n  >\n    <ScrollAreaPrimitive.ScrollAreaThumb className=\"relative flex-1 rounded-full bg-border\" />\n  </ScrollAreaPrimitive.ScrollAreaScrollbar>\n))\nScrollBar.displayName = ScrollAreaPrimitive.ScrollAreaScrollbar.displayName\n\nexport { ScrollArea, ScrollBar }\n","import React from \"react\";\nimport { motion, AnimatePresence } from \"framer-motion\";\nimport { X } from \"lucide-react\";\nimport { Button } from \"./ui/button\";\nimport { cn } from \"../lib/utils\";\nimport { ScrollArea } from \"./ui/scroll-area\";\n\nexport function MobileNav({ isOpen, onClose, children }) {\n  return (\n    <AnimatePresence>\n      {isOpen && (\n        <>\n          <motion.div\n            initial={{ opacity: 0 }}\n            animate={{ opacity: 1 }}\n            exit={{ opacity: 0 }}\n            transition={{ duration: 0.2 }}\n            className=\"fixed inset-0 z-50 bg-black/40 backdrop-blur-sm lg:hidden\"\n            onClick={onClose}\n            style={{ width: '100vw' }}\n          />\n          <motion.div\n            initial={{ x: \"100%\" }}\n            animate={{ x: 0 }}\n            exit={{ x: \"100%\" }}\n            transition={{ type: \"spring\", damping: 20, stiffness: 300 }}\n            className={cn(\n              \"fixed inset-y-0 right-0 z-50 w-full max-w-xs bg-white shadow-2xl lg:hidden\",\n              \"flex flex-col\"\n            )}\n          >\n            <div className=\"flex h-16 items-center justify-between border-b px-6\">\n              <a href=\"/\" className=\"hover:opacity-80 transition-opacity\">\n                <img\n                  src=\"https://i.postimg.cc/GpdY6N74/my-1920-x-1080-px-1.png\"\n                  alt=\"MyVGE\"\n                  className=\"h-8\"\n                />\n              </a>\n              <Button\n                variant=\"ghost\"\n                size=\"icon\"\n                className=\"h-10 w-10 rounded-full hover:bg-muted\"\n                onClick={(e) => {\n                  e.stopPropagation();\n                  onClose();\n                }}\n              >\n                <X className=\"h-5 w-5\" />\n              </Button>\n            </div>\n            <ScrollArea className=\"flex-1\">\n              <div className=\"flex flex-col p-6 pb-16\">\n                <div className=\"flex-1\">{children}</div>\n                <div className=\"mt-auto pt-6\">\n                  <p className=\"text-sm text-muted-foreground text-center\">\n                    © {new Date().getFullYear()} MyVGE. All rights reserved.\n                  </p>\n                </div>\n              </div>\n            </ScrollArea>\n          </motion.div>\n        </>\n      )}\n    </AnimatePresence>\n  );\n}\n","import * as React from \"react\";\nimport * as NavigationMenuPrimitive from \"@radix-ui/react-navigation-menu\";\nimport { cva } from \"class-variance-authority\";\nimport { ChevronDown } from \"lucide-react\";\n\nimport { cn } from \"@/lib/utils\";\n\nconst NavigationMenu = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative z-10 flex max-w-max flex-1 items-center justify-center\",\n      className,\n    )}\n    {...props}\n  >\n    {children}\n    <NavigationMenuViewport />\n  </NavigationMenuPrimitive.Root>\n));\nNavigationMenu.displayName = NavigationMenuPrimitive.Root.displayName;\n\nconst NavigationMenuList = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.List\n    ref={ref}\n    className={cn(\n      \"group flex flex-1 list-none items-center justify-center space-x-1\",\n      className,\n    )}\n    {...props}\n  />\n));\nNavigationMenuList.displayName = NavigationMenuPrimitive.List.displayName;\n\nconst NavigationMenuItem = NavigationMenuPrimitive.Item;\n\nconst navigationMenuTriggerStyle = cva(\n  \"group inline-flex h-10 w-max items-center justify-center rounded-md bg-background px-4 py-2 text-sm font-medium transition-colors hover:bg-accent hover:text-accent-foreground focus:bg-accent focus:text-accent-foreground focus:outline-none disabled:pointer-events-none disabled:opacity-50 data-[active]:bg-accent/50 data-[state=open]:bg-accent/50\",\n);\n\nconst NavigationMenuTrigger = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Trigger\n    ref={ref}\n    className={cn(navigationMenuTriggerStyle(), \"group\", className)}\n    {...props}\n  >\n    {children}{\" \"}\n    <ChevronDown\n      className=\"relative top-[1px] ml-1 h-3 w-3 transition duration-200 group-data-[state=open]:rotate-180\"\n      aria-hidden=\"true\"\n    />\n  </NavigationMenuPrimitive.Trigger>\n));\nNavigationMenuTrigger.displayName = NavigationMenuPrimitive.Trigger.displayName;\n\nconst NavigationMenuContent = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"left-0 top-0 w-full data-[motion^=from-]:animate-in data-[motion^=to-]:animate-out data-[motion^=from-]:fade-in data-[motion^=to-]:fade-out data-[motion=from-end]:slide-in-from-right-52 data-[motion=from-start]:slide-in-from-left-52 data-[motion=to-end]:slide-out-to-right-52 data-[motion=to-start]:slide-out-to-left-52 md:absolute md:w-auto \",\n      className,\n    )}\n    {...props}\n  />\n));\nNavigationMenuContent.displayName = NavigationMenuPrimitive.Content.displayName;\n\nconst NavigationMenuLink = NavigationMenuPrimitive.Link;\n\nconst NavigationMenuViewport = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Viewport>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Viewport>\n>(({ className, ...props }, ref) => (\n  <div className={cn(\"absolute left-0 top-full flex justify-center\")}>\n    <NavigationMenuPrimitive.Viewport\n      className={cn(\n        \"origin-top-center relative mt-1.5 h-[var(--radix-navigation-menu-viewport-height)] w-full overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-90 md:w-[var(--radix-navigation-menu-viewport-width)]\",\n        className,\n      )}\n      ref={ref}\n      {...props}\n    />\n  </div>\n));\nNavigationMenuViewport.displayName =\n  NavigationMenuPrimitive.Viewport.displayName;\n\nconst NavigationMenuIndicator = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Indicator>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Indicator>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Indicator\n    ref={ref}\n    className={cn(\n      \"top-full z-[1] flex h-1.5 items-end justify-center overflow-hidden data-[state=visible]:animate-in data-[state=hidden]:animate-out data-[state=hidden]:fade-out data-[state=visible]:fade-in\",\n      className,\n    )}\n    {...props}\n  >\n    <div className=\"relative top-[60%] h-2 w-2 rotate-45 rounded-tl-sm bg-border shadow-md\" />\n  </NavigationMenuPrimitive.Indicator>\n));\nNavigationMenuIndicator.displayName =\n  NavigationMenuPrimitive.Indicator.displayName;\n\nexport {\n  navigationMenuTriggerStyle,\n  NavigationMenu,\n  NavigationMenuList,\n  NavigationMenuItem,\n  NavigationMenuContent,\n  NavigationMenuTrigger,\n  NavigationMenuLink,\n  NavigationMenuIndicator,\n  NavigationMenuViewport,\n};\n","import * as React from \"react\"\nimport * as AvatarPrimitive from \"@radix-ui/react-avatar\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Avatar = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex h-10 w-10 shrink-0 overflow-hidden rounded-full\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatar.displayName = AvatarPrimitive.Root.displayName\n\nconst AvatarImage = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Image>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Image>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Image\n    ref={ref}\n    className={cn(\"aspect-square h-full w-full\", className)}\n    {...props}\n  />\n))\nAvatarImage.displayName = AvatarPrimitive.Image.displayName\n\nconst AvatarFallback = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Fallback>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Fallback>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Fallback\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full items-center justify-center rounded-full bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatarFallback.displayName = AvatarPrimitive.Fallback.displayName\n\nexport { Avatar, AvatarImage, AvatarFallback }\n","import * as React from \"react\"\nimport * as DropdownMenuPrimitive from \"@radix-ui/react-dropdown-menu\"\nimport {\n  CheckIcon,\n  ChevronRightIcon,\n  DotFilledIcon,\n} from \"@radix-ui/react-icons\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst DropdownMenu = DropdownMenuPrimitive.Root\n\nconst DropdownMenuTrigger = DropdownMenuPrimitive.Trigger\n\nconst DropdownMenuGroup = DropdownMenuPrimitive.Group\n\nconst DropdownMenuPortal = DropdownMenuPrimitive.Portal\n\nconst DropdownMenuSub = DropdownMenuPrimitive.Sub\n\nconst DropdownMenuRadioGroup = DropdownMenuPrimitive.RadioGroup\n\nconst DropdownMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent data-[state=open]:bg-accent\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRightIcon className=\"ml-auto h-4 w-4\" />\n  </DropdownMenuPrimitive.SubTrigger>\n))\nDropdownMenuSubTrigger.displayName =\n  DropdownMenuPrimitive.SubTrigger.displayName\n\nconst DropdownMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuSubContent.displayName =\n  DropdownMenuPrimitive.SubContent.displayName\n\nconst DropdownMenuContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <DropdownMenuPrimitive.Portal>\n    <DropdownMenuPrimitive.Content\n      ref={ref}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md\",\n        \"data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        className\n      )}\n      {...props}\n    />\n  </DropdownMenuPrimitive.Portal>\n))\nDropdownMenuContent.displayName = DropdownMenuPrimitive.Content.displayName\n\nconst DropdownMenuItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuItem.displayName = DropdownMenuPrimitive.Item.displayName\n\nconst DropdownMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <DropdownMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <CheckIcon className=\"h-4 w-4\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.CheckboxItem>\n))\nDropdownMenuCheckboxItem.displayName =\n  DropdownMenuPrimitive.CheckboxItem.displayName\n\nconst DropdownMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <DotFilledIcon className=\"h-4 w-4 fill-current\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.RadioItem>\n))\nDropdownMenuRadioItem.displayName = DropdownMenuPrimitive.RadioItem.displayName\n\nconst DropdownMenuLabel = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuLabel.displayName = DropdownMenuPrimitive.Label.displayName\n\nconst DropdownMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nDropdownMenuSeparator.displayName = DropdownMenuPrimitive.Separator.displayName\n\nconst DropdownMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\"ml-auto text-xs tracking-widest opacity-60\", className)}\n      {...props}\n    />\n  )\n}\nDropdownMenuShortcut.displayName = \"DropdownMenuShortcut\"\n\nexport {\n  DropdownMenu,\n  DropdownMenuTrigger,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuCheckboxItem,\n  DropdownMenuRadioItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuShortcut,\n  DropdownMenuGroup,\n  DropdownMenuPortal,\n  DropdownMenuSub,\n  DropdownMenuSubContent,\n  DropdownMenuSubTrigger,\n  DropdownMenuRadioGroup,\n}\n","import * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { Cross2Icon } from \"@radix-ui/react-icons\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Dialog = DialogPrimitive.Root\n\nconst DialogTrigger = DialogPrimitive.Trigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogClose = DialogPrimitive.Close\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n        <Cross2Icon className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogTrigger,\n  DialogClose,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n}\n","import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nexport interface InputProps\n  extends React.InputHTMLAttributes<HTMLInputElement> {}\n\nconst Input = React.forwardRef<HTMLInputElement, InputProps>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-9 w-full rounded-md border border-input bg-transparent px-3 py-1 text-sm shadow-sm transition-colors file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:cursor-not-allowed disabled:opacity-50\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n","import * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n","import React, { useState } from 'react';\nimport { Dialog, DialogContent, DialogDescription, DialogHeader, DialogTitle, DialogFooter } from '../ui/dialog';\nimport { Button } from '../ui/button';\nimport { Input } from '../ui/input';\nimport { Label } from '../ui/label';\nimport { useToast } from '../ui/use-toast';\nimport { supabase } from '../../lib/supabaseClient';\n\ninterface LoginModalProps {\n  isOpen: boolean;\n  onClose: () => void;\n  onSuccess?: () => void;\n}\n\nexport function LoginModal({ isOpen, onClose, onSuccess }: LoginModalProps) {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const { toast } = useToast();\n\n  const handleLogin = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setIsLoading(true);\n\n    try {\n      console.log(\"Attempting login with:\", email);\n      \n      // Sign in with Supabase\n      const { data, error } = await supabase.auth.signInWithPassword({\n        email,\n        password\n      });\n      \n      if (error) {\n        console.error(\"Supabase auth error:\", error);\n        throw error;\n      }\n      \n      console.log(\"Login successful:\", data);\n\n      toast({\n        title: \"Success\",\n        description: \"You have successfully logged in.\",\n      });\n\n      // Close modal\n      onClose();\n      \n      // This is crucial: complete page reload to ensure auth state is fresh\n      setTimeout(() => {\n        if (onSuccess) {\n          onSuccess();\n        }\n        \n        // Force a complete page reload to refresh all auth states\n        window.location.href = window.location.pathname;\n      }, 300);\n      \n    } catch (error: any) {\n      console.error('Login error:', error);\n      toast({\n        variant: \"destructive\",\n        title: \"Login failed\",\n        description: error.message || \"Please check your credentials and try again.\",\n      });\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <Dialog open={isOpen} onOpenChange={onClose}>\n      <DialogContent className=\"sm:max-w-[425px]\">\n        <DialogHeader>\n          <DialogTitle>Login</DialogTitle>\n          <DialogDescription>\n            Enter your credentials to access your account.\n          </DialogDescription>\n        </DialogHeader>\n        <form onSubmit={handleLogin}>\n          <div className=\"grid gap-4 py-4\">\n            <div className=\"grid gap-2\">\n              <Label htmlFor=\"email\">Email</Label>\n              <Input\n                id=\"email\"\n                type=\"email\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n                placeholder=\"your.email@example.com\"\n                autoComplete=\"email\"\n                required\n              />\n            </div>\n            <div className=\"grid gap-2\">\n              <Label htmlFor=\"password\">Password</Label>\n              <Input\n                id=\"password\"\n                type=\"password\"\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n                autoComplete=\"current-password\"\n                required\n              />\n            </div>\n          </div>\n          <DialogFooter>\n            <Button type=\"submit\" disabled={isLoading}>\n              {isLoading ? 'Logging in...' : 'Login'}\n            </Button>\n          </DialogFooter>\n        </form>\n      </DialogContent>\n    </Dialog>\n  );\n} ","import React from \"react\";\nimport { Button } from \"./ui/button\";\nimport { LogIn, Menu, MessageCircle, FileText } from \"lucide-react\";\nimport { MobileNav } from \"./MobileNav\";\nimport {\n  NavigationMenu,\n  NavigationMenuContent,\n  NavigationMenuItem,\n  NavigationMenuLink,\n  NavigationMenuList,\n  NavigationMenuTrigger,\n} from \"./ui/navigation-menu\";\nimport { cn } from \"../lib/utils\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useAuth } from \"../lib/auth\";\nimport {\n  UserPlus,\n  LogOut,\n  Settings,\n  LayoutDashboard,\n  Crown,\n} from \"lucide-react\";\nimport { Avatar, AvatarFallback, AvatarImage } from \"../components/ui/avatar\";\nimport {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuSeparator,\n  DropdownMenuTrigger,\n} from \"./ui/dropdown-menu\";\nimport { LoginModal } from './auth/LoginModal';\n\ninterface HeaderProps {\n  isAuthenticated?: boolean;\n  onSignIn?: () => void;\n  onSignUp?: () => void;\n  onSignOut?: () => Promise<void>;\n  userProfile?: {\n    full_name?: string | null;\n    email?: string | null;\n    created_at?: string;\n    id?: string;\n    role?: \"user\" | \"admin\" | \"moderator\" | null;\n    stripe_customer_id?: string | null;\n    subscription_status?: string | null;\n    subscription_tier?: \"free\" | \"basic\" | \"pro\" | \"premium\" | null;\n    updated_at?: string;\n  };\n}\n\nconst MobileNavLinks = [\n  {\n    title: \"Investment Deals\",\n    href: \"/deals\",\n    icon: \"💼\",\n    requiresAuth: true\n  },\n  {\n    title: \"Listings\",\n    href: \"/listings\",\n    icon: \"🏠\",\n    requiresAuth: false\n  },\n  {\n    title: \"Market\",\n    items: [\n      { title: \"Market Trends\", href: \"/trends\", description: \"Stay updated with the latest real estate market trends\", requiresAuth: true },\n      { title: \"Market Insights\", href: \"/insights\", description: \"Deep dive into property market analytics\", requiresAuth: true },\n      { title: \"Research & Reports\", href: \"/research\", description: \"Access expert analysis and reports\", requiresAuth: false }\n    ],\n    icon: \"📊\"\n  },\n  {\n    title: \"Services\",\n    items: [\n      { title: \"Property Management\", href: \"/property-management\", description: \"Let us take care of your property\", requiresAuth: true },\n      { title: \"Investment Opportunities\", href: \"/investment-opportunities\", description: \"Discover tailored investment strategies\", requiresAuth: true },\n      { title: \"Calculators\", href: \"/calculators\", description: \"Calculate your property investment\", requiresAuth: false }\n    ],\n    icon: \"🏠\"\n  },\n  {\n    title: \"Messages\",\n    href: \"/messages\",\n    icon: \"💬\",\n    requiresAuth: true\n  },\n  {\n    title: \"Pricing\",\n    href: \"/pricing\",\n    icon: \"💎\",\n    requiresAuth: false\n  },\n  {\n    title: \"Support\",\n    href: \"/help\",\n    icon: \"❓\",\n    requiresAuth: false\n  },\n  {\n    title: \"About Us\",\n    href: \"/about-us\",\n    icon: \"ℹ️\",\n    requiresAuth: false\n  }\n];\n\nexport default function Header({\n  isAuthenticated = false,\n  onSignIn,\n  onSignUp,\n  userProfile = {},\n  onSignOut\n}: HeaderProps) {\n  const [showMobileMenu, setShowMobileMenu] = React.useState(false);\n  const [isScrolled, setIsScrolled] = React.useState(false);\n  const [loginModalOpen, setLoginModalOpen] = React.useState(false);\n  const navigate = useNavigate();\n  const auth = useAuth();\n  \n  // Prioritize props but fallback to global auth context if not provided\n  const actualIsAuthenticated = isAuthenticated || !!auth.user;\n  const actualUserProfile = userProfile && Object.keys(userProfile).length > 0 ? userProfile : auth.profile;\n  const actualSignOut = onSignOut || auth.signOut;\n\n  // Add scroll listener\n  React.useEffect(() => {\n    const handleScroll = () => {\n      setIsScrolled(window.scrollY > 20);\n    };\n    window.addEventListener('scroll', handleScroll);\n    return () => window.removeEventListener('scroll', handleScroll);\n  }, []);\n\n  // Handle login click\n  const handleLoginClick = (e: React.MouseEvent) => {\n    e.preventDefault();\n    setLoginModalOpen(true);\n  };\n\n  // Handle sign out with proper page refresh\n  const handleSignOut = async () => {\n    console.log(\"Sign out button clicked\");\n    try {\n      await actualSignOut();\n      // Force page reload to ensure auth state is completely reset\n      window.location.href = \"/\";\n    } catch (error) {\n      console.error(\"Error signing out:\", error);\n    }\n  };\n\n  // Handle click on mobile nav link\n  const handleMobileNavLinkClick = (e: React.MouseEvent<HTMLAnchorElement>, requiresAuth: boolean, href: string) => {\n    // If link requires auth and user is not authenticated, prevent default and show login modal\n    if (requiresAuth && !actualIsAuthenticated) {\n      e.preventDefault();\n      setLoginModalOpen(true);\n      setShowMobileMenu(false); // Close mobile menu when opening login modal\n    } else {\n      // If user is authenticated or link doesn't require auth, just navigate normally\n      setShowMobileMenu(false);\n    }\n  };\n\n  const ListItem = React.forwardRef<\n    React.ElementRef<\"a\">,\n    React.ComponentPropsWithoutRef<\"a\"> & {\n      title: string;\n    }\n  >(({ className, title, children, ...props }, ref) => {\n    return (\n      <li>\n        <NavigationMenuLink asChild>\n          <a\n            ref={ref}\n            className={cn(\n              \"block select-none space-y-1 rounded-md p-3 leading-none no-underline outline-none transition-colors hover:bg-accent hover:text-accent-foreground focus:bg-accent focus:text-accent-foreground\",\n              className ?? \"\"\n            )}\n            {...props}\n          >\n            <div className=\"text-sm font-medium leading-none\">{title}</div>\n            <p className=\"line-clamp-2 text-sm leading-snug text-muted-foreground\">\n              {children}\n            </p>\n          </a>\n        </NavigationMenuLink>\n      </li>\n    );\n  });\n  ListItem.displayName = \"ListItem\";\n\n  return (\n    <>\n      <header \n        className={cn(\n          \"fixed top-0 left-0 right-0 z-50 transition-all duration-300\",\n          isScrolled ? \"py-2\" : \"py-4\"\n        )}\n      >\n        <div className=\"px-4 mx-auto max-w-7xl\">\n          <div className={cn(\n            \"rounded-full bg-white border transition-all duration-300\",\n            isScrolled \n              ? \"shadow-md border-gray-200/50 backdrop-blur-md bg-white/90\" \n              : \"shadow-sm border-transparent\"\n          )}>\n            <div className=\"h-16 px-6 flex items-center justify-between\">\n              {/* Logo */}\n              <div className=\"flex items-center gap-8\">\n                <a href=\"/\" className=\"hover:opacity-80 transition-opacity\">\n                  <img\n                    src=\"https://i.postimg.cc/GpdY6N74/my-1920-x-1080-px-1.png\"\n                    alt=\"MyVGE\"\n                    className=\"h-8\"\n                  />\n                </a>\n\n                {/* Desktop Navigation */}\n                <NavigationMenu className=\"hidden lg:flex\">\n                  <NavigationMenuList className=\"gap-2\">\n                    <NavigationMenuItem>\n                      <NavigationMenuTrigger \n                        className={cn(\n                          \"text-sm font-medium rounded-full px-4\",\n                          \"bg-transparent hover:bg-gray-100 transition-colors\",\n                          \"data-[state=open]:bg-gray-100\"\n                        )}\n                      >\n                      Market\n                    </NavigationMenuTrigger>\n                    <NavigationMenuContent>\n                        <ul className=\"w-[400px] gap-3 p-4 rounded-2xl\">\n                          {actualIsAuthenticated ? (\n                            <>\n                        <ListItem href=\"/trends\" title=\"Market Trends\">\n                          Stay updated with the latest real estate market trends.\n                        </ListItem>\n                        <ListItem href=\"/insights\" title=\"Market Insights\">\n                          Deep dive into property market analytics and forecasts.\n                        </ListItem>\n                            </>\n                          ) : (\n                            <>\n                              <ListItem \n                                href=\"#\" \n                                onClick={handleLoginClick} \n                                title=\"Market Trends\"\n                              >\n                                Sign in to access market trends.\n                              </ListItem>\n                              <ListItem \n                                href=\"#\" \n                                onClick={handleLoginClick} \n                                title=\"Market Insights\"\n                              >\n                                Sign in to access market insights.\n                              </ListItem>\n                            </>\n                          )}\n                        <ListItem href=\"/research\" title=\"Research & Reports\">\n                          Access expert analysis and reports.\n                        </ListItem>\n                      </ul>\n                    </NavigationMenuContent>\n                  </NavigationMenuItem>\n\n                  <NavigationMenuItem>\n                    <NavigationMenuLink\n                        className={cn(\n                          \"text-sm font-medium rounded-full px-4 py-2\",\n                          \"hover:bg-gray-100 transition-colors\"\n                        )}\n                      href=\"/deals\"\n                    >\n                      Deals\n                    </NavigationMenuLink>\n                  </NavigationMenuItem>\n\n                  <NavigationMenuItem>\n                      <NavigationMenuLink\n                        className={cn(\n                          \"text-sm font-medium rounded-full px-4 py-2\",\n                          \"hover:bg-gray-100 transition-colors\"\n                        )}\n                        href=\"/listings\"\n                      >\n                        Listings\n                      </NavigationMenuLink>\n                    </NavigationMenuItem>\n\n                    <NavigationMenuItem>\n                      <NavigationMenuTrigger \n                        className={cn(\n                          \"text-sm font-medium rounded-full px-4\",\n                          \"bg-transparent hover:bg-gray-100 transition-colors\",\n                          \"data-[state=open]:bg-gray-100\"\n                        )}\n                      >\n                      Services\n                    </NavigationMenuTrigger>\n                    <NavigationMenuContent>\n                        <ul className=\"w-[400px] gap-3 p-4 rounded-2xl\">\n                        <ListItem href=\"/property-management\" title=\"Property Management\">\n                          Let us take care of your property.\n                        </ListItem>\n                        <ListItem href=\"/investment-opportunities\" title=\"Investment Opportunities\">\n                          Discover tailored investment strategies.\n                        </ListItem>\n                        <ListItem href=\"/calculators\" title=\"Calculators\">\n                          Calculate different aspects of your property investment.\n                        </ListItem>\n                      </ul>\n                    </NavigationMenuContent>\n                  </NavigationMenuItem>\n\n                  <NavigationMenuItem>\n                    <NavigationMenuLink\n                        className={cn(\n                          \"text-sm font-medium rounded-full px-4 py-2\",\n                          \"hover:bg-gray-100 transition-colors\"\n                        )}\n                      href=\"/pricing\"\n                    >\n                      Pricing\n                    </NavigationMenuLink>\n                  </NavigationMenuItem>\n                </NavigationMenuList>\n              </NavigationMenu>\n              </div>\n\n              {/* Right Side Actions */}\n              <div className=\"flex items-center gap-2\">\n                {/* Help & Support + About Us - Only show on desktop and when there's enough space */}\n                <nav className=\"hidden lg:flex items-center gap-2\">\n                  <a \n                    href=\"/help\"\n                    className={cn(\n                      \"text-sm font-medium rounded-full px-4 py-2\",\n                      \"hover:bg-gray-100 transition-colors\"\n                    )}\n                  >\n                    Support\n                  </a>\n                  <a \n                    href=\"/about-us\"\n                    className={cn(\n                      \"text-sm font-medium rounded-full px-4 py-2\",\n                      \"hover:bg-gray-100 transition-colors\"\n                    )}\n                  >\n                    About Us\n                  </a>\n                </nav>\n\n                {/* Upgrade Button - Only show on tablet and larger screens */}\n                <Button\n                  variant=\"ghost\"\n                  className=\"hidden md:flex bg-gradient-to-r from-emerald-400 to-cyan-400 text-white hover:from-emerald-500 hover:to-cyan-500 rounded-full border border-emerald-500/20 shadow-lg hover:shadow-emerald-500/20 transition-all duration-300\"\n                  onClick={() => navigate(\"/pricing\")}\n                >\n                  <Crown className=\"mr-2 h-4 w-4\" />\n                  Upgrade\n                </Button>\n\n                {/* Auth Buttons or User Menu */}\n                <div className=\"flex items-center\">\n                  {!actualIsAuthenticated ? (\n                    <div className=\"hidden md:flex items-center gap-2\">\n                      <Button \n                        variant=\"ghost\" \n                        onClick={handleLoginClick} \n                        className=\"rounded-full hover:bg-gray-100\"\n                      >\n                        <LogIn className=\"mr-2 h-4 w-4\" />\n                        Sign In\n                      </Button>\n                      <Button \n                        onClick={() => onSignUp?.()} \n                        className=\"rounded-full bg-black text-white hover:bg-gray-800\"\n                      >\n                        <UserPlus className=\"mr-2 h-4 w-4\" />\n                        Sign Up\n                      </Button>\n                    </div>\n                  ) : (\n                    <DropdownMenu>\n                      <DropdownMenuTrigger asChild>\n                        <Button\n                          variant=\"ghost\"\n                          className=\"relative h-10 w-10 rounded-full\"\n                        >\n                          <Avatar className=\"h-10 w-10\">\n                            <AvatarImage\n                              src={`https://ui-avatars.com/api/?name=${encodeURIComponent(actualUserProfile?.full_name || \"\")}&background=random`}\n                              alt={actualUserProfile?.full_name || \"User avatar\"}\n                            />\n                            <AvatarFallback className=\"bg-primary/10\">\n                              {actualUserProfile?.full_name\n                                ?.split(\" \")\n                                .filter(Boolean)\n                                .map((n) => n[0])\n                                .slice(0, 2)\n                                .join(\"\")\n                                .toUpperCase() || \"U\"}\n                            </AvatarFallback>\n                          </Avatar>\n                        </Button>\n                      </DropdownMenuTrigger>\n                      <DropdownMenuContent \n                        className=\"w-56 mt-2 bg-white border border-gray-200 rounded-2xl shadow-lg\" \n                        align=\"end\" \n                        forceMount\n                      >\n                        <DropdownMenuItem className=\"flex-col items-start\">\n                          <div className=\"font-medium\">\n                            {actualUserProfile?.full_name}\n                          </div>\n                          <div className=\"text-sm text-muted-foreground\">\n                            {actualUserProfile?.email}\n                          </div>\n                        </DropdownMenuItem>\n                        <DropdownMenuItem onClick={() => navigate(\"/dashboard\")}>\n                          <LayoutDashboard className=\"mr-2 h-4 w-4\" />\n                          <span>Dashboard</span>\n                        </DropdownMenuItem>\n                        <DropdownMenuItem onClick={() => navigate(\"/account\")}>\n                          <Settings className=\"mr-2 h-4 w-4\" />\n                          <span>Account Settings</span>\n                        </DropdownMenuItem>\n                        <DropdownMenuItem onClick={() => navigate(\"/messages\")}>\n                          <MessageCircle className=\"mr-2 h-4 w-4\" />\n                          <span>Messages</span>\n                        </DropdownMenuItem>\n                        <DropdownMenuItem onClick={() => navigate(\"/research-reports\")}>\n                          <FileText className=\"mr-2 h-4 w-4\" />\n                          <span>Research & Reports</span>\n                        </DropdownMenuItem>\n                        {(userProfile?.role === 'admin') && (\n                          <DropdownMenuItem onClick={() => navigate(\"/admin/reports\")}>\n                            <FileText className=\"mr-2 h-4 w-4\" />\n                            <span>Admin Reports</span>\n                          </DropdownMenuItem>\n                        )}\n                        <DropdownMenuSeparator />\n                        <DropdownMenuItem \n                          className=\"text-red-500 focus:text-red-500\" \n                          onClick={handleSignOut}\n                        >\n                          <LogOut className=\"mr-2 h-4 w-4\" />\n                          <span>Log Out</span>\n                        </DropdownMenuItem>\n                      </DropdownMenuContent>\n                    </DropdownMenu>\n                  )}\n                  \n                  {/* Mobile Menu Button - Move closer to avatar */}\n                  <Button\n                    variant=\"ghost\"\n                    className=\"lg:hidden p-2 ml-2\"\n                    onClick={() => setShowMobileMenu(true)}\n                  >\n                    <Menu className=\"h-6 w-6\" />\n                  </Button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </header>\n\n      {/* Mobile Navigation */}\n      <MobileNav\n        isOpen={showMobileMenu}\n        onClose={() => setShowMobileMenu(false)}\n      >\n        <nav className=\"space-y-6\">\n          {actualIsAuthenticated && (\n            <div className=\"space-y-4 mb-6\">\n              <div className=\"flex items-center space-x-3 px-2\">\n                <Avatar className=\"h-10 w-10\">\n                  <AvatarImage\n                    src={`https://ui-avatars.com/api/?name=${encodeURIComponent(actualUserProfile?.full_name || \"\")}&background=random`}\n                    alt={actualUserProfile?.full_name || \"User avatar\"}\n                  />\n                  <AvatarFallback className=\"bg-primary/10\">\n                    {actualUserProfile?.full_name\n                      ?.split(\" \")\n                      .filter(Boolean)\n                      .map((n) => n[0])\n                      .slice(0, 2)\n                      .join(\"\")\n                      .toUpperCase() || \"U\"}\n                  </AvatarFallback>\n                </Avatar>\n                <div className=\"flex-1 overflow-hidden\">\n                  <p className=\"text-sm font-medium leading-none truncate\">\n                    {actualUserProfile?.full_name}\n                  </p>\n                  <p className=\"text-sm text-muted-foreground truncate\">\n                    {actualUserProfile?.email}\n                  </p>\n                </div>\n              </div>\n              <div className=\"grid grid-cols-2 gap-2\">\n                <Button\n                  variant=\"outline\"\n                  className=\"justify-center rounded-full\"\n                  onClick={() => {\n                    navigate('/dashboard');\n                    setShowMobileMenu(false);\n                  }}\n                >\n                  <LayoutDashboard className=\"mr-2 h-4 w-4\" />\n                  Dashboard\n                </Button>\n                <Button\n                  variant=\"outline\"\n                  className=\"justify-center rounded-full\"\n                  onClick={() => {\n                    navigate('/account');\n                    setShowMobileMenu(false);\n                  }}\n                >\n                  <Settings className=\"mr-2 h-4 w-4\" />\n                  Account\n                </Button>\n              </div>\n              <div className=\"border-b border-border\" />\n            </div>\n          )}\n\n          {MobileNavLinks.map((item, index) => (\n            <div key={index} className=\"space-y-3\">\n              {item.href ? (\n                <a\n                  href={item.href}\n                  className={cn(\n                    \"flex items-center space-x-3 text-lg font-medium transition-colors\",\n                    (!item.requiresAuth || actualIsAuthenticated) \n                      ? \"hover:text-primary\" \n                      : \"text-muted-foreground hover:text-primary/70\"\n                  )}\n                  onClick={(e) => handleMobileNavLinkClick(e, item.requiresAuth, item.href)}\n                >\n                  <span className=\"text-xl\">{item.icon}</span>\n                  <span>{item.title}</span>\n                  {item.requiresAuth && !actualIsAuthenticated && (\n                    <span className=\"ml-2 text-xs text-muted-foreground\">(Sign in required)</span>\n                  )}\n                </a>\n              ) : (\n                <>\n                  <div className=\"flex items-center space-x-3 text-lg font-medium\">\n                    <span className=\"text-xl\">{item.icon}</span>\n                    <span>{item.title}</span>\n                  </div>\n                  <div className=\"space-y-3 pl-9\">\n                    {item.items?.map((subItem, subIndex) => (\n                      <a\n                        key={subIndex}\n                        href={subItem.href}\n                        className={cn(\n                          \"block text-base transition-colors\",\n                          (!subItem.requiresAuth || actualIsAuthenticated) \n                            ? \"text-muted-foreground hover:text-primary\" \n                            : \"text-muted-foreground/70 hover:text-primary/70\"\n                        )}\n                        onClick={(e) => handleMobileNavLinkClick(e, subItem.requiresAuth, subItem.href)}\n                      >\n                        {subItem.title}\n                        {subItem.requiresAuth && !actualIsAuthenticated && (\n                          <span className=\"ml-2 text-xs text-muted-foreground\">(Sign in required)</span>\n                        )}\n                      </a>\n                    ))}\n                  </div>\n                </>\n              )}\n            </div>\n          ))}\n\n          {!actualIsAuthenticated ? (\n            <div className=\"space-y-4 pt-6\">\n              <Button\n                variant=\"outline\"\n                className=\"w-full justify-center rounded-full\"\n                onClick={handleLoginClick}\n              >\n                <LogIn className=\"mr-2 h-4 w-4\" />\n                Sign In\n              </Button>\n              <Button\n                className=\"w-full justify-center rounded-full bg-gradient-to-r from-emerald-400 to-cyan-400 text-white hover:from-emerald-500 hover:to-cyan-500\"\n                onClick={() => {\n                  onSignUp?.();\n                  setShowMobileMenu(false);\n                }}\n              >\n                <UserPlus className=\"mr-2 h-4 w-4\" />\n                Sign Up\n              </Button>\n            </div>\n          ) : (\n            <div className=\"pt-6\">\n              <Button\n                variant=\"outline\"\n                className=\"w-full justify-center rounded-full text-red-500 hover:text-red-600 hover:bg-red-50\"\n                onClick={handleSignOut}\n              >\n                <LogOut className=\"mr-2 h-4 w-4\" />\n                Log Out\n              </Button>\n            </div>\n          )}\n        </nav>\n      </MobileNav>\n\n      <LoginModal \n        isOpen={loginModalOpen}\n        onClose={() => setLoginModalOpen(false)}\n        onSuccess={() => {\n          setLoginModalOpen(false);\n          // Force a reload for the header to recognize the auth state\n          window.location.reload();\n        }}\n      />\n    </>\n  );\n}\n","import { useSprings, animated, SpringConfig } from '@react-spring/web';\nimport { useEffect, useRef, useState } from 'react';\n\ninterface SplitTextProps {\n    text?: string;\n    className?: string;\n    delay?: number;\n    animationFrom?: { opacity: number; transform: string };\n    animationTo?: { opacity: number; transform: string };\n    easing?: SpringConfig['easing'];\n    threshold?: number;\n    rootMargin?: string;\n    textAlign?: 'left' | 'right' | 'center' | 'justify' | 'start' | 'end';\n    onLetterAnimationComplete?: () => void;\n}\n\nconst SplitText: React.FC<SplitTextProps> = ({\n    text = '',\n    className = '',\n    delay = 100,\n    animationFrom = { opacity: 0, transform: 'translate3d(0,40px,0)' },\n    animationTo = { opacity: 1, transform: 'translate3d(0,0,0)' },\n    easing = (t: number) => t,\n    threshold = 0.1,\n    rootMargin = '-100px',\n    textAlign = 'center',\n    onLetterAnimationComplete,\n}) => {\n    const words = text.split(' ').map(word => word.split(''));\n    const letters = words.flat();\n    const [inView, setInView] = useState(false);\n    const ref = useRef<HTMLParagraphElement>(null);\n    const animatedCount = useRef(0);\n\n    useEffect(() => {\n        const observer = new IntersectionObserver(\n            ([entry]) => {\n                if (entry.isIntersecting) {\n                    setInView(true);\n                    if (ref.current) {\n                        observer.unobserve(ref.current);\n                    }\n                }\n            },\n            { threshold, rootMargin }\n        );\n\n        if (ref.current) {\n            observer.observe(ref.current);\n        }\n\n        return () => observer.disconnect();\n    }, [threshold, rootMargin]);\n\n    const springs = useSprings(\n        letters.length,\n        letters.map((_, i) => ({\n            from: animationFrom,\n            to: inView\n                ? async (next: (props: any) => Promise<void>) => {\n                    await next(animationTo);\n                    animatedCount.current += 1;\n                    if (animatedCount.current === letters.length && onLetterAnimationComplete) {\n                        onLetterAnimationComplete();\n                    }\n                }\n                : animationFrom,\n            delay: i * delay,\n            config: { easing },\n        }))\n    );\n\n    return (\n        <p\n            ref={ref}\n            className={`split-parent overflow-hidden inline ${className}`}\n            style={{ textAlign, whiteSpace: 'normal', wordWrap: 'break-word' }}\n        >\n            {words.map((word, wordIndex) => (\n                <span key={wordIndex} style={{ display: 'inline-block', whiteSpace: 'nowrap' }}>\n                    {word.map((letter, letterIndex) => {\n                        const index = words\n                            .slice(0, wordIndex)\n                            .reduce((acc, w) => acc + w.length, 0) + letterIndex;\n\n                        return (\n                            <animated.span\n                                key={index}\n                                style={springs[index] as unknown as React.CSSProperties}\n                                className=\"inline-block transform transition-opacity will-change-transform\"\n                            >\n                                {letter}\n                            </animated.span>\n                        );\n                    })}\n                    <span style={{ display: 'inline-block', width: '0.3em' }}>&nbsp;</span>\n                </span>\n            ))}\n        </p>\n    );\n};\n\nexport default SplitText; ","import { useEffect, useRef } from \"react\";\nimport { Renderer, Program, Mesh, Color, Triangle } from \"ogl\";\n\nconst VERT = `#version 300 es\nin vec2 position;\nvoid main() {\n  gl_Position = vec4(position, 0.0, 1.0);\n}\n`;\n\nconst FRAG = `#version 300 es\nprecision highp float;\n\nuniform float uTime;\nuniform float uAmplitude;\nuniform vec3 uColorStops[3];\nuniform vec2 uResolution;\nuniform float uBlend;\n\nout vec4 fragColor;\n\nvec3 permute(vec3 x) {\n  return mod(((x * 34.0) + 1.0) * x, 289.0);\n}\n\nfloat snoise(vec2 v){\n  const vec4 C = vec4(\n      0.211324865405187, 0.366025403784439,\n      -0.577350269189626, 0.024390243902439\n  );\n  vec2 i  = floor(v + dot(v, C.yy));\n  vec2 x0 = v - i + dot(i, C.xx);\n  vec2 i1 = (x0.x > x0.y) ? vec2(1.0, 0.0) : vec2(0.0, 1.0);\n  vec4 x12 = x0.xyxy + C.xxzz;\n  x12.xy -= i1;\n  i = mod(i, 289.0);\n\n  vec3 p = permute(\n      permute(i.y + vec3(0.0, i1.y, 1.0))\n    + i.x + vec3(0.0, i1.x, 1.0)\n  );\n\n  vec3 m = max(\n      0.5 - vec3(\n          dot(x0, x0),\n          dot(x12.xy, x12.xy),\n          dot(x12.zw, x12.zw)\n      ), \n      0.0\n  );\n  m = m * m;\n  m = m * m;\n\n  vec3 x = 2.0 * fract(p * C.www) - 1.0;\n  vec3 h = abs(x) - 0.5;\n  vec3 ox = floor(x + 0.5);\n  vec3 a0 = x - ox;\n  m *= 1.79284291400159 - 0.85373472095314 * (a0*a0 + h*h);\n\n  vec3 g;\n  g.x  = a0.x  * x0.x  + h.x  * x0.y;\n  g.yz = a0.yz * x12.xz + h.yz * x12.yw;\n  return 130.0 * dot(m, g);\n}\n\nstruct ColorStop {\n  vec3 color;\n  float position;\n};\n\n#define COLOR_RAMP(colors, factor, finalColor) {              \\\n  int index = 0;                                            \\\n  for (int i = 0; i < 2; i++) {                               \\\n     ColorStop currentColor = colors[i];                    \\\n     bool isInBetween = currentColor.position <= factor;    \\\n     index = int(mix(float(index), float(i), float(isInBetween))); \\\n  }                                                         \\\n  ColorStop currentColor = colors[index];                   \\\n  ColorStop nextColor = colors[index + 1];                  \\\n  float range = nextColor.position - currentColor.position; \\\n  float lerpFactor = (factor - currentColor.position) / range; \\\n  finalColor = mix(currentColor.color, nextColor.color, lerpFactor); \\\n}\n\nvoid main() {\n  vec2 uv = gl_FragCoord.xy / uResolution;\n  \n  ColorStop colors[3];\n  colors[0] = ColorStop(uColorStops[0], 0.0);\n  colors[1] = ColorStop(uColorStops[1], 0.5);\n  colors[2] = ColorStop(uColorStops[2], 1.0);\n  \n  vec3 rampColor;\n  COLOR_RAMP(colors, uv.x, rampColor);\n  \n  float height = snoise(vec2(uv.x * 2.0 + uTime * 0.1, uTime * 0.25)) * 0.5 * uAmplitude;\n  height = exp(height);\n  height = (uv.y * 2.0 - height + 0.2);\n  float intensity = 0.6 * height;\n  \n  float midPoint = 0.20;\n  float auroraAlpha = smoothstep(midPoint - uBlend * 0.5, midPoint + uBlend * 0.5, intensity);\n  \n  vec3 auroraColor = intensity * rampColor;\n  \n  fragColor = vec4(auroraColor * auroraAlpha, auroraAlpha);\n}\n`;\n\ninterface AuroraProps {\n  colorStops?: string[];\n  amplitude?: number;\n  blend?: number;\n  time?: number;\n  speed?: number;\n}\n\nconst Aurora = (props: AuroraProps) => {\n  const {\n    colorStops = [\"#00d8ff\", \"#7cff67\", \"#00d8ff\"],\n    amplitude = 1.0,\n    blend = 0.5,\n  } = props;\n  const propsRef = useRef<AuroraProps>(props);\n  propsRef.current = props;\n\n  const ctnDom = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    const ctn = ctnDom.current;\n    if (!ctn) return;\n\n    const renderer = new Renderer({\n      alpha: true,\n      premultipliedAlpha: true,\n      antialias: true,\n    });\n    const gl = renderer.gl;\n    gl.clearColor(0, 0, 0, 0);\n    gl.enable(gl.BLEND);\n    gl.blendFunc(gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n    gl.canvas.style.backgroundColor = \"transparent\";\n\n    let program: Program | undefined;\n\n    function resize() {\n      if (!ctn) return;\n      const width = ctn.offsetWidth;\n      const height = ctn.offsetHeight;\n      renderer.setSize(width, height);\n      if (program) {\n        program.uniforms.uResolution.value = [width, height];\n      }\n    }\n    window.addEventListener(\"resize\", resize);\n\n    const geometry = new Triangle(gl);\n    if (geometry.attributes.uv) {\n      delete (geometry.attributes as any).uv;\n    }\n\n    const colorStopsArray = colorStops.map((hex) => {\n      const c = new Color(hex);\n      return [c.r, c.g, c.b];\n    });\n\n    program = new Program(gl, {\n      vertex: VERT,\n      fragment: FRAG,\n      uniforms: {\n        uTime: { value: 0 },\n        uAmplitude: { value: amplitude },\n        uColorStops: { value: colorStopsArray },\n        uResolution: { value: [ctn.offsetWidth, ctn.offsetHeight] },\n        uBlend: { value: blend },\n      },\n    });\n\n    const mesh = new Mesh(gl, { geometry, program });\n    ctn.appendChild(gl.canvas);\n\n    let animateId = 0;\n    const update = (t: number) => {\n      animateId = requestAnimationFrame(update);\n      const { time = t * 0.01, speed = 1.0 } = propsRef.current;\n      if (program) {\n        program.uniforms.uTime.value = time * speed * 0.1;\n        program.uniforms.uAmplitude.value = propsRef.current.amplitude ?? 1.0;\n        program.uniforms.uBlend.value = propsRef.current.blend ?? blend;\n        const stops = propsRef.current.colorStops ?? colorStops;\n        program.uniforms.uColorStops.value = stops.map((hex: string) => {\n          const c = new Color(hex);\n          return [c.r, c.g, c.b];\n        });\n        renderer.render({ scene: mesh });\n      }\n    };\n    animateId = requestAnimationFrame(update);\n\n    resize();\n\n    return () => {\n      cancelAnimationFrame(animateId);\n      window.removeEventListener(\"resize\", resize);\n      if (ctn && gl.canvas.parentNode === ctn) {\n        ctn.removeChild(gl.canvas);\n      }\n      gl.getExtension(\"WEBGL_lose_context\")?.loseContext();\n    };\n  }, [amplitude]);\n\n  return <div ref={ctnDom} className=\"w-full h-full\" />;\n};\n\nexport default Aurora; ","import React from \"react\";\nimport { Input } from \"./ui/input\";\nimport { Button } from \"./ui/button\";\nimport { Search } from \"lucide-react\";\nimport SplitText from \"./ui/SplitText\";\nimport Aurora from \"./ui/Aurora\";\n\ninterface HeroSectionProps {\n  onSearch?: (term: string) => void;\n  title?: string;\n  subtitle?: string;\n  showSearch?: boolean;\n  showStats?: boolean;\n  height?: string;\n  image?: string;\n}\n\nconst HeroSection: React.FC<HeroSectionProps> = ({\n  onSearch = () => {},\n  title = \"Find Your Next Investment Property\",\n  subtitle = \"Search through our curated selection of properties\",\n  showSearch = true,\n  showStats = true,\n  height = \"h-[500px]\",\n  image\n}: HeroSectionProps) => {\n  const [searchTerm, setSearchTerm] = React.useState(\"\");\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    onSearch(searchTerm);\n  };\n\n  const handleAnimationComplete = () => {\n    console.log('Hero text animation completed!');\n  };\n\n  return (\n    <div className={`relative w-full ${height} bg-gray-900 overflow-hidden`}>\n      {/* Aurora Background */}\n      <div className=\"absolute inset-0\">\n        <Aurora\n          colorStops={[\"#004F39\", \"#FEFACA\", \"#151513\"]}\n          blend={0.6}\n          amplitude={1.2}\n          speed={0.3}\n        />\n        <div className=\"absolute inset-0 bg-black/30 backdrop-blur-[2px]\" />\n      </div>\n\n      {/* Content */}\n      <div className=\"relative h-full max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 flex flex-col items-center justify-center text-center py-16 pt-24 animate-fade-in-up\">\n        <SplitText\n          text={title}\n          className=\"text-4xl md:text-5xl lg:text-6xl font-bold text-white mb-4\"\n          delay={50}\n          animationFrom={{ opacity: 0, transform: 'translate3d(0,50px,0)' }}\n          animationTo={{ opacity: 1, transform: 'translate3d(0,0,0)' }}\n          easing={(t: number) => 1 - Math.pow(1 - t, 3)} // easeOutCubic function\n          threshold={0.2}\n          rootMargin=\"-50px\"\n          onLetterAnimationComplete={handleAnimationComplete}\n        />\n        <p className=\"text-lg sm:text-xl text-gray-200 mb-6 sm:mb-8 max-w-3xl mx-auto\">\n          {subtitle}\n        </p>\n\n        {/* Search Form */}\n        {showSearch && (\n          <form\n            onSubmit={handleSubmit}\n            className=\"w-full max-w-2xl animate-fade-in-up\"\n          >\n            <div className=\"relative\">\n              <Input\n                type=\"text\"\n                placeholder=\"Enter an address, neighbourhood, city, or postcode\"\n                value={searchTerm}\n                onChange={(e) => setSearchTerm(e.target.value)}\n                className=\"w-full h-12 sm:h-14 pl-5 pr-14 text-base sm:text-lg bg-white/90 backdrop-blur-sm text-black border-2 border-transparent focus:border-primary\"\n              />\n              <Button\n                type=\"submit\"\n                size=\"sm\"\n                variant=\"ghost\"\n                className=\"absolute right-2 top-1/2 -translate-y-1/2 hover:bg-transparent\"\n              >\n                <Search className=\"w-6 h-6 text-gray-500 hover:text-primary transition-colors\" />\n              </Button>\n            </div>\n          </form>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport { HeroSection };\nexport default HeroSection;\n","import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-xl border bg-card text-card-foreground shadow\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h3\n    ref={ref}\n    className={cn(\"font-semibold leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <p\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n","import * as React from \"react\";\nimport { cva, type VariantProps } from \"class-variance-authority\";\n\nimport { cn } from \"@/lib/utils\";\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n        success: \"bg-green-500/10 text-green-500 hover:bg-green-500/20\",\n        warning: \"bg-yellow-500/10 text-yellow-500 hover:bg-yellow-500/20\",\n        premium: \"bg-gradient-to-r from-amber-500 to-amber-600 text-white hover:from-amber-600 hover:to-amber-700\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  },\n);\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  );\n}\n\nexport { Badge, badgeVariants };\n","import React from \"react\";\nimport { Card, CardContent, CardHeader } from \"./ui/card\";\nimport { Badge } from \"./ui/badge\";\nimport { formatCurrency, formatDate, formatNumber } from \"../lib/utils\";\nimport { Button } from \"./ui/button\";\nimport { Heart, MessageCircle, Share } from \"lucide-react\";\nimport { UserProfile, User } from \"../lib/auth\";\n\nconst PROPERTY_FALLBACK_IMAGES = [\n  \"https://images.unsplash.com/photo-1518780664697-55e3ad937233?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=600\",\n  \"https://images.unsplash.com/photo-1560518883-ce09059eeffa?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=600\",\n  \"https://images.unsplash.com/photo-1512917774080-9991f1c4c750?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=600\",\n  \"https://images.unsplash.com/photo-1570129477492-45c003edd2be?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=600\",\n];\n\nconst DEAL_FALLBACK_IMAGES = [\n  \"https://images.unsplash.com/photo-1464938050520-ef2270bb8ce8?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=600\",\n  \"https://images.unsplash.com/photo-1497366811353-6870744d04b2?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=600\",\n  \"https://images.unsplash.com/photo-1497366754035-f200968a6e72?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=600\",\n  \"https://images.unsplash.com/photo-1497366216548-37526070297c?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=600\",\n  \"https://images.unsplash.com/photo-1497366858526-0766cadbe8fa?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=600\",\n];\n\ninterface PropertyCardProps {\n  id?: string;\n  address: string;\n  price: number;\n  squareFootage?: number;\n  bedrooms?: number;\n  bathrooms?: number;\n  isPremium?: boolean;\n  description?: string;\n  propertyType?: string;\n  createdAt: string;\n  updatedAt?: string;\n  author?: {\n    id: string;\n    name: string;\n    avatar?: string;\n  };\n  original_price?: number;\n  potential_profit?: number;\n  roi_percentage?: number;\n  deal_price?: number;\n  deal_type?: string;\n  property?: any;\n  status?: string;\n  type?: \"listing\" | \"deal\";\n  isSubscriber?: boolean;\n  investment_term?: string;\n  onClick?: () => void;\n  onMessageAuthor?: (authorId: string) => void;\n  isDeal?: boolean;\n  images?: string[];\n  currentUser?: User | null;\n  userProfile?: UserProfile | null;\n}\n\nexport function PropertyCard({\n  id,\n  address,\n  price,\n  squareFootage,\n  bedrooms,\n  bathrooms,\n  isPremium = false,\n  propertyType = \"residential\",\n  description,\n  createdAt,\n  author,\n  original_price,\n  roi_percentage,\n  investment_term,\n  deal_type,\n  isSubscriber = false,\n  type = \"listing\",\n  isDeal = false,\n  images = [],\n  onClick,\n  onMessageAuthor,\n  currentUser,\n  userProfile\n}: PropertyCardProps) {\n  const isAuthenticated = !!currentUser;\n  \n  const [isSaved, setIsSaved] = React.useState(false);\n\n  const handleSaveToggle = (e: React.MouseEvent) => {\n    e.stopPropagation();\n    setIsSaved(!isSaved);\n  };\n\n  const handleShare = (e: React.MouseEvent) => {\n    e.stopPropagation();\n    console.log(\"Share property:\", id);\n  };\n\n  const handleMessageAuthor = (e: React.MouseEvent) => {\n    e.stopPropagation();\n    if (author && onMessageAuthor) {\n      onMessageAuthor(author.id);\n    }\n  };\n\n  const imageUrl = images && images.length > 0 \n    ? images[0] \n    : `https://source.unsplash.com/random/800x600?property,house&sig=${id}`;\n\n  return (\n    <Card \n      className=\"overflow-hidden hover:shadow-md transition-shadow cursor-pointer\"\n      onClick={onClick}\n    >\n      <div className=\"relative aspect-[4/3] overflow-hidden bg-muted\">\n        <img\n          src={imageUrl}\n          alt={address}\n          className=\"object-cover w-full h-full\"\n          loading=\"lazy\"\n        />\n        {isPremium && (\n          <div className=\"absolute top-2 left-2\">\n            <Badge variant=\"secondary\" className=\"bg-primary text-primary-foreground hover:bg-primary/90\">\n              Featured\n            </Badge>\n          </div>\n        )}\n        {isDeal && (\n          <div className=\"absolute top-2 left-2\">\n            <Badge variant=\"secondary\" className=\"bg-emerald-500 text-white hover:bg-emerald-600\">\n              Investment Deal\n            </Badge>\n          </div>\n        )}\n        {roi_percentage && (\n          <div className=\"absolute top-2 right-2\">\n            <Badge className=\"bg-emerald-500 text-white\">\n              {roi_percentage}% ROI\n            </Badge>\n          </div>\n        )}\n      </div>\n\n      <CardHeader className=\"p-4 pb-0\">\n        <div className=\"flex justify-between items-start mb-2\">\n          <h3 className=\"text-lg font-semibold\">{formatCurrency(price)}</h3>\n          {original_price && (\n            <div className=\"text-sm text-muted-foreground line-through\">\n              {formatCurrency(original_price)}\n            </div>\n          )}\n        </div>\n        <p className=\"text-sm text-muted-foreground mb-2\">{address}</p>\n      </CardHeader>\n\n      <CardContent className=\"p-4 pt-2\">\n        {(bedrooms || bathrooms || squareFootage) && (\n          <div className=\"flex justify-between mb-3 text-sm\">\n            {bedrooms !== undefined && (\n              <div>\n                <span className=\"font-medium\">{bedrooms}</span>{\" \"}\n                <span className=\"text-muted-foreground\">\n                  {bedrooms === 1 ? \"Bed\" : \"Beds\"}\n                </span>\n              </div>\n            )}\n            {bathrooms !== undefined && (\n              <div>\n                <span className=\"font-medium\">{bathrooms}</span>{\" \"}\n                <span className=\"text-muted-foreground\">\n                  {bathrooms === 1 ? \"Bath\" : \"Baths\"}\n                </span>\n              </div>\n            )}\n            {squareFootage !== undefined && (\n              <div>\n                <span className=\"font-medium\">{formatNumber(squareFootage)}</span>{\" \"}\n                <span className=\"text-muted-foreground\">sq ft</span>\n              </div>\n            )}\n          </div>\n        )}\n\n        {investment_term && (\n          <div className=\"mb-3\">\n            <span className=\"text-sm text-muted-foreground\">Investment Term: </span>\n            <span className=\"text-sm font-medium\">{investment_term}</span>\n          </div>\n        )}\n\n        {deal_type && (\n          <div className=\"mb-3\">\n            <span className=\"text-sm text-muted-foreground\">Deal Type: </span>\n            <span className=\"text-sm font-medium\">{deal_type}</span>\n          </div>\n        )}\n\n        {description && (\n          <p className=\"text-sm text-muted-foreground mb-4 line-clamp-2\">\n            {description}\n          </p>\n        )}\n\n        <div className=\"flex justify-between items-center mt-2\">\n          <div className=\"text-xs text-muted-foreground\">\n            {formatDate(createdAt)}\n          </div>\n          <div className=\"flex space-x-1\">\n            {isAuthenticated && (\n              <>\n                <Button\n                  variant=\"ghost\"\n                  size=\"icon\"\n                  className=\"h-8 w-8\"\n                  onClick={handleSaveToggle}\n                >\n                  <Heart\n                    className={`h-4 w-4 ${\n                      isSaved ? \"fill-red-500 text-red-500\" : \"\"\n                    }`}\n                  />\n                </Button>\n                {author && (\n                  <Button\n                    variant=\"ghost\"\n                    size=\"icon\"\n                    className=\"h-8 w-8\"\n                    onClick={handleMessageAuthor}\n                  >\n                    <MessageCircle className=\"h-4 w-4\" />\n                  </Button>\n                )}\n              </>\n            )}\n            <Button\n              variant=\"ghost\"\n              size=\"icon\"\n              className=\"h-8 w-8\"\n              onClick={handleShare}\n            >\n              <Share className=\"h-4 w-4\" />\n            </Button>\n          </div>\n        </div>\n      </CardContent>\n    </Card>\n  );\n}\n","import { createClient } from \"@supabase/supabase-js\";\n\nconst supabaseUrl = import.meta.env.VITE_SUPABASE_URL;\nconst supabaseAnonKey = import.meta.env.VITE_SUPABASE_ANON_KEY;\n\nconsole.log(\"Supabase URL status:\", supabaseUrl ? \"✅ URL defined\" : \"❌ URL missing\");\nconsole.log(\"Supabase Key status:\", supabaseAnonKey ? \"✅ Key defined\" : \"❌ Key missing\");\n\nif (!supabaseUrl || !supabaseAnonKey) {\n  console.error(\"Missing Supabase environment variables!\");\n  console.error(\"Please check your .env.local file and ensure it contains:\");\n  console.error(\"VITE_SUPABASE_URL=https://your-project.supabase.co\");\n  console.error(\"VITE_SUPABASE_ANON_KEY=your-anon-key\");\n  throw new Error(\"Missing Supabase environment variables\");\n}\n\n// Create and configure the Supabase client\nexport const supabase = createClient(supabaseUrl, supabaseAnonKey, {\n  auth: {\n    persistSession: true,\n    storage: window.localStorage,\n    storageKey: 'supabase.auth.token',\n    autoRefreshToken: true,\n    detectSessionInUrl: true,\n    flowType: 'pkce'\n  },\n  global: {\n    // Add headers for better debugging\n    headers: {\n      'x-client-info': 'vge-property-app'\n    }\n  },\n  db: {\n    schema: 'public'\n  }\n});\n\n// Log successful client creation\nconsole.log(\"Supabase client initialized\");\n\n// Function to test Supabase connection and permissions\nexport const testSupabaseConnection = async (): Promise<{ success: boolean; message: string; details?: any }> => {\n  try {\n    console.log(\"Testing Supabase connection...\");\n    \n    // Test 1: Check if we can get the user session\n    const { data: sessionData, error: sessionError } = await supabase.auth.getSession();\n    \n    if (sessionError) {\n      console.error(\"Session error:\", sessionError);\n      return { \n        success: false, \n        message: \"Failed to get user session\", \n        details: sessionError \n      };\n    }\n    \n    const isAuthenticated = !!sessionData.session;\n    console.log(\"Authentication status:\", isAuthenticated ? \"Authenticated\" : \"Not authenticated\");\n    \n    // Test 2: Try to get the Supabase version (should work without auth)\n    const { data: versionData, error: versionError } = await supabase.rpc('version');\n    \n    if (versionError) {\n      console.warn(\"Version check failed:\", versionError);\n    } else {\n      console.log(\"Supabase version:\", versionData);\n    }\n    \n    // Test 3: Get list of tables in public schema\n    const { data: tablesData, error: tablesError } = await supabase.from('information_schema.tables')\n      .select('table_name')\n      .eq('table_schema', 'public')\n      .limit(10);\n      \n    if (tablesError) {\n      console.warn(\"Failed to get table list:\", tablesError);\n    } else {\n      console.log(\"Available tables:\", tablesData);\n    }\n    \n    // Test 4: Try a simple select from scraper_cache\n    let cacheExists = false;\n    try {\n      const { data: cacheData, error: cacheError } = await supabase\n        .from('scraper_cache')\n        .select('count(*)')\n        .limit(1)\n        .single();\n        \n      if (!cacheError) {\n        console.log(\"scraper_cache table exists!\");\n        cacheExists = true;\n      } else if (cacheError.code === '42P01') {\n        console.log(\"scraper_cache table does not exist\");\n      } else {\n        console.warn(\"Error checking scraper_cache:\", cacheError);\n      }\n    } catch (err) {\n      console.error(\"Exception checking scraper_cache:\", err);\n    }\n    \n    return { \n      success: true, \n      message: \"Supabase connection diagnostic completed\", \n      details: { \n        isAuthenticated,\n        sessionExists: !!sessionData.session,\n        user: sessionData.session?.user?.email || \"Not authenticated\",\n        cacheTableExists: cacheExists\n      } \n    };\n  } catch (error) {\n    console.error(\"Unexpected error testing Supabase connection:\", error);\n    return { \n      success: false, \n      message: \"Unexpected error testing Supabase connection\", \n      details: error \n    };\n  }\n};\n","import { supabase } from \"./supabase\";\nimport { loadStripe } from \"@stripe/stripe-js\";\n\nexport const SUBSCRIPTION_TIERS = {\n  BASIC: {\n    name: \"Basic\",\n    price: \"£9.99\",\n    priceId: \"price_1QnikACOhalwhG2QDocCWbQj\",\n    features: [\n      \"Basic property search\",\n      \"Save up to 5 properties\",\n      \"Basic market trends\",\n      \"Email support\",\n    ],\n  },\n  PRO: {\n    name: \"Pro\",\n    price: \"£19.99\",\n    priceId: \"price_1QnikPCOhalwhG2QVYfxwG5D\",\n    features: [\n      \"Advanced property search\",\n      \"Save unlimited properties\",\n      \"Detailed market analysis\",\n      \"Premium property insights\",\n      \"Priority support\",\n    ],\n  },\n  PREMIUM: {\n    name: \"Premium\",\n    price: \"£49.99\",\n    priceId: \"price_1QnikjCOhalwhG2QUgRtMAco\",\n    features: [\n      \"All Pro features\",\n      \"AI-powered market predictions\",\n      \"Portfolio analytics\",\n      \"Investment ROI calculator\",\n      \"Dedicated account manager\",\n      \"24/7 phone support\",\n    ],\n  },\n};\n\nexport async function createCheckoutSession(priceId: string, userId: string) {\n  try {\n    const response = await fetch(\n      \"https://clever-chaplygin6-vbfae.dev.tempolabs.ai/.netlify/functions/create-checkout-session\",\n      {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          priceId,\n          userId,\n        }),\n      },\n    );\n\n    const { sessionId } = await response.json();\n    const stripe = await loadStripe(import.meta.env.VITE_STRIPE_PUBLIC_KEY);\n\n    if (stripe) {\n      await stripe.redirectToCheckout({ sessionId });\n    }\n  } catch (error) {\n    console.error(\"Error creating checkout session:\", error);\n    throw error;\n  }\n}\n\nexport async function updateSubscription(userId: string, tier: string) {\n  const { error } = await supabase\n    .from(\"profiles\")\n    .update({\n      subscription_tier: tier,\n      subscription_status: \"active\",\n      updated_at: new Date().toISOString(),\n    })\n    .eq(\"id\", userId);\n\n  if (error) throw error;\n}\n","import React from \"react\";\nimport {\n  Dialog,\n  DialogContent,\n  DialogDescription,\n  DialogHeader,\n  DialogTitle,\n} from \"./ui/dialog\";\nimport { Button } from \"./ui/button\";\nimport { Input } from \"./ui/input\";\nimport { Label } from \"./ui/label\";\nimport { useToast } from \"./ui/use-toast\";\nimport { useAuth } from \"../lib/auth\";\nimport { createCheckoutSession } from \"../lib/stripe\";\n\ntype AuthMode = \"signin\" | \"signup\";\n\ninterface AuthModalProps {\n  isOpen: boolean;\n  onClose: () => void;\n  defaultMode?: AuthMode;\n}\n\nexport function AuthModal({\n  isOpen,\n  onClose,\n  defaultMode = \"signin\",\n}: AuthModalProps) {\n  const [mode, setMode] = React.useState<AuthMode>(defaultMode);\n  React.useEffect(() => {\n    setMode(defaultMode);\n  }, [defaultMode]);\n  const [isSubmitting, setIsSubmitting] = React.useState(false);\n  const [showConfirmation, setShowConfirmation] = React.useState(false);\n  const { signIn, signUp, signInWithGoogle } = useAuth();\n  const { toast } = useToast();\n\n  const [formData, setFormData] = React.useState({\n    email: \"\",\n    password: \"\",\n    firstName: \"\",\n    lastName: \"\",\n  });\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setIsSubmitting(true);\n\n    try {\n      if (mode === \"signin\") {\n        const user = await signIn(formData.email, formData.password);\n        if (user) {\n          toast({\n            title: \"Welcome back!\",\n            description: \"You have successfully signed in.\",\n          });\n          setTimeout(() => onClose(), 500);\n        }\n      } else {\n        const user = await signUp(\n          formData.email,\n          formData.password,\n          formData.firstName,\n          formData.lastName,\n        );\n\n        // Check if there's a pending subscription\n        const pendingPriceId = localStorage.getItem(\n          \"pending_subscription_price_id\",\n        );\n        if (pendingPriceId && user && 'id' in user) {\n          localStorage.removeItem(\"pending_subscription_price_id\");\n          await createCheckoutSession(pendingPriceId, user.id);\n        } else {\n          setShowConfirmation(true);\n          toast({\n            title: \"Welcome to MyVGE Alpha!\",\n            description:\n              \"Thank you for joining us during our alpha testing phase.\",\n          });\n        }\n      }\n    } catch (error: any) {\n      toast({\n        title: \"Error\",\n        description: error.message || \"An error occurred\",\n        variant: \"destructive\",\n      });\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  if (showConfirmation) {\n    return (\n      <Dialog open={isOpen} onOpenChange={onClose}>\n        <DialogContent className=\"sm:max-w-[425px]\">\n          <DialogHeader>\n            <DialogTitle>Welcome to MyVGE Alpha!</DialogTitle>\n            <DialogDescription className=\"space-y-2\">\n              <p className=\"text-lg font-medium text-primary\">\n                Thank you for joining MyVGE during our alpha testing phase!\n              </p>\n              <p>\n                We've sent a confirmation email to your inbox. Please click the\n                verification link to activate your account and start exploring\n                MyVGE.\n              </p>\n              <p className=\"text-sm text-muted-foreground\">\n                Note: You must confirm your email before signing in. Please\n                check your spam folder if you don't see the email.\n              </p>\n              <div className=\"mt-4 p-4 bg-primary/10 rounded-lg\">\n                <p className=\"text-sm font-medium\">\n                  As an alpha tester, your feedback is invaluable to us. We're\n                  excited to have you on board and look forward to your insights\n                  as we continue to improve the platform.\n                </p>\n              </div>\n            </DialogDescription>\n          </DialogHeader>\n          <div className=\"flex flex-col space-y-4 pt-4\">\n            <Button\n              onClick={() => {\n                setShowConfirmation(false);\n                onClose();\n              }}\n            >\n              Close\n            </Button>\n          </div>\n        </DialogContent>\n      </Dialog>\n    );\n  }\n\n  return (\n    <Dialog open={isOpen} onOpenChange={onClose}>\n      <DialogContent className=\"sm:max-w-[425px]\">\n        <DialogHeader>\n          <DialogTitle>\n            {mode === \"signin\" ? \"Sign In\" : \"Create Account\"}\n          </DialogTitle>\n          <DialogDescription>\n            {mode === \"signin\"\n              ? \"Welcome back! Please sign in to continue.\"\n              : \"Join MyVGE and start exploring properties.\"}\n          </DialogDescription>\n        </DialogHeader>\n\n        <form onSubmit={handleSubmit} className=\"space-y-4 pt-4\">\n          {mode === \"signup\" && (\n            <div className=\"grid grid-cols-2 gap-4\">\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"firstName\">First Name</Label>\n                <Input\n                  id=\"firstName\"\n                  value={formData.firstName}\n                  onChange={(e) =>\n                    setFormData((prev) => ({\n                      ...prev,\n                      firstName: e.target.value,\n                    }))\n                  }\n                  required\n                />\n              </div>\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"lastName\">Last Name</Label>\n                <Input\n                  id=\"lastName\"\n                  value={formData.lastName}\n                  onChange={(e) =>\n                    setFormData((prev) => ({\n                      ...prev,\n                      lastName: e.target.value,\n                    }))\n                  }\n                  required\n                />\n              </div>\n            </div>\n          )}\n\n          <div className=\"space-y-2\">\n            <Label htmlFor=\"email\">Email</Label>\n            <Input\n              id=\"email\"\n              type=\"email\"\n              value={formData.email}\n              onChange={(e) =>\n                setFormData((prev) => ({ ...prev, email: e.target.value }))\n              }\n              required\n            />\n          </div>\n\n          <div className=\"space-y-2\">\n            <Label htmlFor=\"password\">Password</Label>\n            <Input\n              id=\"password\"\n              type=\"password\"\n              value={formData.password}\n              onChange={(e) =>\n                setFormData((prev) => ({ ...prev, password: e.target.value }))\n              }\n              required\n            />\n          </div>\n\n          <div className=\"flex flex-col space-y-4 pt-4\">\n            <Button type=\"submit\" disabled={isSubmitting}>\n              {isSubmitting\n                ? \"Loading...\"\n                : mode === \"signin\"\n                  ? \"Sign In\"\n                  : \"Create Account\"}\n            </Button>\n\n            <Button type=\"button\" variant=\"link\" onClick={() => signInWithGoogle()} disabled={isSubmitting}>\n              Sign In with Google\n            </Button>\n\n            <Button\n              type=\"button\"\n              variant=\"link\"\n              onClick={() => setMode(mode === \"signin\" ? \"signup\" : \"signin\")}\n            >\n              {mode === \"signin\"\n                ? \"Don't have an account? Sign up\"\n                : \"Already have an account? Sign in\"}\n            </Button>\n          </div>\n        </form>\n      </DialogContent>\n    </Dialog>\n  );\n}\n","import * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Tabs = TabsPrimitive.Root\n\nconst TabsList = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.List\n    ref={ref}\n    className={cn(\n      \"inline-flex h-9 items-center justify-center rounded-lg bg-muted p-1 text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsList.displayName = TabsPrimitive.List.displayName\n\nconst TabsTrigger = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"inline-flex items-center justify-center whitespace-nowrap rounded-md px-3 py-1 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName\n\nconst TabsContent = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsContent.displayName = TabsPrimitive.Content.displayName\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n","import React from \"react\";\nimport {\n  Dialog,\n  DialogContent,\n  DialogHeader,\n  DialogTitle,\n  DialogFooter,\n} from \"./ui/dialog\";\nimport { Button } from \"./ui/button\";\nimport { Tabs, TabsList, TabsTrigger, TabsContent } from \"./ui/tabs\";\nimport { CheckIcon } from \"lucide-react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { UserProfile } from \"../lib/auth\";\nimport { User } from \"@supabase/supabase-js\";\n\ninterface SubscriptionModalProps {\n  isOpen: boolean;\n  onClose: () => void;\n  currentUser?: User | null;\n  userProfile?: UserProfile | null;\n}\n\nexport function SubscriptionModal({ isOpen, onClose, currentUser, userProfile }: SubscriptionModalProps) {\n  const navigate = useNavigate();\n\n  const handleSubscribe = (tier: string) => {\n    console.log(`Subscribing to ${tier} tier`);\n    navigate(`/checkout?tier=${tier}`);\n      onClose();\n  };\n\n  return (\n    <Dialog open={isOpen} onOpenChange={onClose}>\n      <DialogContent className=\"sm:max-w-[600px] max-h-[90vh] overflow-y-auto\">\n        <DialogHeader>\n          <DialogTitle className=\"text-2xl\">\n            Upgrade Your Experience\n          </DialogTitle>\n        </DialogHeader>\n\n        <Tabs defaultValue=\"monthly\" className=\"mt-4\">\n          <TabsList className=\"grid w-full grid-cols-2 mb-6\">\n            <TabsTrigger value=\"monthly\">Monthly</TabsTrigger>\n            <TabsTrigger value=\"yearly\">\n              Yearly <span className=\"ml-2 text-emerald-500\">Save 20%</span>\n            </TabsTrigger>\n          </TabsList>\n\n          <TabsContent value=\"monthly\">\n            <div className=\"grid gap-6 sm:grid-cols-2 mt-4\">\n              <div className=\"border rounded-lg p-6 space-y-4 relative overflow-hidden\">\n                <div className=\"space-y-2\">\n                  <h3 className=\"text-xl font-semibold\">Basic</h3>\n                  <p className=\"text-muted-foreground text-sm\">\n                    Essential property insights for casual investors.\n                  </p>\n                  <div className=\"flex items-baseline gap-1\">\n                    <span className=\"text-3xl font-bold\">£9.99</span>\n                    <span className=\"text-muted-foreground\">/month</span>\n                  </div>\n                </div>\n\n                <div className=\"space-y-2\">\n                  <div className=\"flex items-start gap-2\">\n                    <CheckIcon className=\"h-5 w-5 text-emerald-500 flex-shrink-0\" />\n                    <span className=\"text-sm\">Basic property data</span>\n                  </div>\n                  <div className=\"flex items-start gap-2\">\n                    <CheckIcon className=\"h-5 w-5 text-emerald-500 flex-shrink-0\" />\n                    <span className=\"text-sm\">5 saved properties</span>\n                  </div>\n                  <div className=\"flex items-start gap-2\">\n                    <CheckIcon className=\"h-5 w-5 text-emerald-500 flex-shrink-0\" />\n                    <span className=\"text-sm\">Limited market insights</span>\n                  </div>\n                </div>\n\n                <Button\n                  className=\"w-full\"\n                  onClick={() => handleSubscribe(\"basic\")}\n                >\n                  {userProfile?.subscription_tier === \"basic\" ? \"Current Plan\" : \"Subscribe\"}\n                </Button>\n              </div>\n\n              <div className=\"border rounded-lg p-6 space-y-4 relative overflow-hidden bg-gradient-to-b from-blue-50 to-white dark:from-blue-950 dark:to-background\">\n                <div className=\"absolute top-0 right-0 bg-blue-500 text-white px-3 py-1 text-xs font-medium rounded-bl-lg\">\n                  POPULAR\n                </div>\n                <div className=\"space-y-2\">\n                  <h3 className=\"text-xl font-semibold\">Pro</h3>\n                  <p className=\"text-muted-foreground text-sm\">\n                    Advanced tools for serious property investors.\n                  </p>\n                  <div className=\"flex items-baseline gap-1\">\n                    <span className=\"text-3xl font-bold\">£29.99</span>\n                    <span className=\"text-muted-foreground\">/month</span>\n                  </div>\n                </div>\n\n                <div className=\"space-y-2\">\n                  <div className=\"flex items-start gap-2\">\n                    <CheckIcon className=\"h-5 w-5 text-emerald-500 flex-shrink-0\" />\n                    <span className=\"text-sm\">\n                      <span className=\"font-medium\">Everything in Basic</span>\n                    </span>\n                  </div>\n                  <div className=\"flex items-start gap-2\">\n                    <CheckIcon className=\"h-5 w-5 text-emerald-500 flex-shrink-0\" />\n                    <span className=\"text-sm\">Detailed investment metrics</span>\n                  </div>\n                  <div className=\"flex items-start gap-2\">\n                    <CheckIcon className=\"h-5 w-5 text-emerald-500 flex-shrink-0\" />\n                    <span className=\"text-sm\">50 saved properties</span>\n                  </div>\n                  <div className=\"flex items-start gap-2\">\n                    <CheckIcon className=\"h-5 w-5 text-emerald-500 flex-shrink-0\" />\n                    <span className=\"text-sm\">Full market insights access</span>\n                  </div>\n                  <div className=\"flex items-start gap-2\">\n                    <CheckIcon className=\"h-5 w-5 text-emerald-500 flex-shrink-0\" />\n                    <span className=\"text-sm\">Priority customer support</span>\n                  </div>\n                </div>\n\n                <Button\n                  className=\"w-full bg-blue-600 hover:bg-blue-700\"\n                  onClick={() => handleSubscribe(\"pro\")}\n                >\n                  {userProfile?.subscription_tier === \"pro\" ? \"Current Plan\" : \"Subscribe\"}\n                </Button>\n              </div>\n            </div>\n          </TabsContent>\n\n          <TabsContent value=\"yearly\">\n            <div className=\"grid gap-6 sm:grid-cols-2 mt-4\">\n              <div className=\"border rounded-lg p-6 space-y-4 relative overflow-hidden\">\n                <div className=\"absolute -top-1 -right-1 bg-blue-100 text-blue-800 dark:bg-blue-900 dark:text-blue-100 px-3 py-1 text-xs font-medium transform rotate-12\">\n                  SAVE 20%\n                </div>\n                <div className=\"space-y-2\">\n                  <h3 className=\"text-xl font-semibold\">Basic Annual</h3>\n                  <p className=\"text-muted-foreground text-sm\">\n                    Essential property insights for casual investors.\n                  </p>\n                  <div className=\"flex items-baseline gap-1\">\n                    <span className=\"text-3xl font-bold\">£95.90</span>\n                    <span className=\"text-muted-foreground\">/year</span>\n                  </div>\n                  <p className=\"text-xs text-muted-foreground\">\n                    Equivalent to £7.99/month\n                  </p>\n                </div>\n\n                <div className=\"space-y-2\">\n                  <div className=\"flex items-start gap-2\">\n                    <CheckIcon className=\"h-5 w-5 text-emerald-500 flex-shrink-0\" />\n                    <span className=\"text-sm\">Basic property data</span>\n                  </div>\n                  <div className=\"flex items-start gap-2\">\n                    <CheckIcon className=\"h-5 w-5 text-emerald-500 flex-shrink-0\" />\n                    <span className=\"text-sm\">5 saved properties</span>\n                  </div>\n                  <div className=\"flex items-start gap-2\">\n                    <CheckIcon className=\"h-5 w-5 text-emerald-500 flex-shrink-0\" />\n                    <span className=\"text-sm\">Limited market insights</span>\n                  </div>\n                </div>\n\n                <Button\n                  className=\"w-full\"\n                  onClick={() => handleSubscribe(\"basic-annual\")}\n                >\n                  {userProfile?.subscription_tier === \"basic\" && userProfile?.subscription_status === \"yearly\" \n                    ? \"Current Plan\" \n                    : \"Subscribe\"}\n                </Button>\n              </div>\n\n              <div className=\"border rounded-lg p-6 space-y-4 relative overflow-hidden bg-gradient-to-b from-blue-50 to-white dark:from-blue-950 dark:to-background\">\n                <div className=\"absolute top-0 right-0 bg-blue-500 text-white px-3 py-1 text-xs font-medium rounded-bl-lg\">\n                  BEST VALUE\n                </div>\n                <div className=\"absolute -top-1 -right-12 bg-blue-100 text-blue-800 dark:bg-blue-900 dark:text-blue-100 px-3 py-1 text-xs font-medium transform rotate-12\">\n                  SAVE 20%\n                </div>\n                <div className=\"space-y-2\">\n                  <h3 className=\"text-xl font-semibold\">Pro Annual</h3>\n                  <p className=\"text-muted-foreground text-sm\">\n                    Advanced tools for serious property investors.\n                  </p>\n                  <div className=\"flex items-baseline gap-1\">\n                    <span className=\"text-3xl font-bold\">£287.90</span>\n                    <span className=\"text-muted-foreground\">/year</span>\n                  </div>\n                  <p className=\"text-xs text-muted-foreground\">\n                    Equivalent to £23.99/month\n                  </p>\n                </div>\n\n                <div className=\"space-y-2\">\n                  <div className=\"flex items-start gap-2\">\n                    <CheckIcon className=\"h-5 w-5 text-emerald-500 flex-shrink-0\" />\n                    <span className=\"text-sm\">\n                      <span className=\"font-medium\">Everything in Basic</span>\n                    </span>\n                  </div>\n                  <div className=\"flex items-start gap-2\">\n                    <CheckIcon className=\"h-5 w-5 text-emerald-500 flex-shrink-0\" />\n                    <span className=\"text-sm\">Detailed investment metrics</span>\n                  </div>\n                  <div className=\"flex items-start gap-2\">\n                    <CheckIcon className=\"h-5 w-5 text-emerald-500 flex-shrink-0\" />\n                    <span className=\"text-sm\">50 saved properties</span>\n                  </div>\n                  <div className=\"flex items-start gap-2\">\n                    <CheckIcon className=\"h-5 w-5 text-emerald-500 flex-shrink-0\" />\n                    <span className=\"text-sm\">Full market insights access</span>\n                  </div>\n                  <div className=\"flex items-start gap-2\">\n                    <CheckIcon className=\"h-5 w-5 text-emerald-500 flex-shrink-0\" />\n                    <span className=\"text-sm\">Priority customer support</span>\n                  </div>\n                </div>\n\n                <Button\n                  className=\"w-full bg-blue-600 hover:bg-blue-700\"\n                  onClick={() => handleSubscribe(\"pro-annual\")}\n                >\n                  {userProfile?.subscription_tier === \"pro\" && userProfile?.subscription_status === \"yearly\" \n                    ? \"Current Plan\" \n                    : \"Subscribe\"}\n                </Button>\n              </div>\n            </div>\n          </TabsContent>\n        </Tabs>\n\n        <DialogFooter className=\"mt-6\">\n          <Button variant=\"outline\" onClick={onClose}>\n            Cancel\n          </Button>\n        </DialogFooter>\n      </DialogContent>\n    </Dialog>\n  );\n}\n","import { supabase } from './supabase';\nimport { User } from '@supabase/supabase-js';\nimport { Deal } from './deals';\n\nconst profanityList = [\n  \"badword1\",\n  \"badword2\",\n  // Add more profanity words here\n];\n\nfunction filterProfanity(text: string): string {\n  let filteredText = text.toLowerCase();\n  profanityList.forEach((word) => {\n    const regex = new RegExp(word, \"gi\");\n    filteredText = filteredText.replace(regex, \"*\".repeat(word.length));\n  });\n  return filteredText;\n}\n\nexport interface Message {\n  id: string;\n  sender_id: string;\n  receiver_id: string;\n  content: string;\n  deal_id?: string;\n  created_at: string;\n  is_read: boolean;\n}\n\nexport interface MessageWithProfiles extends Message {\n  sender: {\n    id: string;\n    full_name: string;\n    avatar_url?: string;\n  };\n  receiver: {\n    id: string;\n    full_name: string;\n    avatar_url?: string;\n  };\n  deal?: Deal;\n}\n\n// Define User interface for consistent typing\nexport interface User {\n  id: string;\n  full_name?: string;\n  email?: string;\n  avatar_url?: string;\n}\n\n// Define Conversation interface with proper User typing\nexport interface Conversation {\n  user: User;\n  lastMessage: MessageWithProfiles | null;\n  unreadCount: number;\n}\n\n// Send a new message\nexport async function sendMessage(receiverId: string, content: string, dealId?: string): Promise<MessageWithProfiles | null> {\n  try {\n    const { data: user, error: userError } = await supabase.auth.getUser();\n    if (userError || !user.user) {\n      console.error('Authentication error:', userError);\n      throw new Error('User not authenticated');\n    }\n\n    console.log('Sending message:', {\n      sender_id: user.user.id,\n      receiver_id: receiverId,\n      deal_id: dealId,\n      content: content.substring(0, 20) + '...' // Log first 20 chars for privacy\n    });\n\n    const { data, error } = await supabase\n      .from('messages')\n      .insert({\n        sender_id: user.user.id,\n        receiver_id: receiverId,\n        content: filterProfanity(content),\n        deal_id: dealId,\n        is_read: false\n      })\n      .select(`\n        *,\n        sender:profiles!sender_id(id, full_name, avatar_url),\n        receiver:profiles!receiver_id(id, full_name, avatar_url),\n        deal:deals(*)\n      `)\n      .single();\n\n    if (error) {\n      console.error('Database error:', error);\n      throw error;\n    }\n\n    if (!data) {\n      console.error('No data returned from insert');\n      throw new Error('Failed to send message');\n    }\n\n    console.log('Message sent successfully:', { messageId: data.id });\n    return data;\n  } catch (error) {\n    console.error('Error sending message:', error);\n    return null;\n  }\n}\n\n// Get conversations for the current user\nexport async function getConversations(): Promise<Conversation[]> {\n  try {\n    // Get the current user session\n    const { data: { session }, error: sessionError } = await supabase.auth.getSession();\n    \n    if (sessionError) {\n      console.error('Session error in getConversations:', sessionError);\n      return [];\n    }\n    \n    // If no session from getSession, try getUser as fallback\n    if (!session) {\n      console.log('No active session found in getConversations - trying getUser fallback');\n      const { data: userData, error: userError } = await supabase.auth.getUser();\n      \n      if (userError || !userData?.user) {\n        console.error('User not authenticated in getConversations:', userError || 'No user data');\n        return [];\n      }\n      \n      const userId = userData.user.id;\n      console.log(`Found user via getUser: ${userId}`);\n      \n      return await fetchConversationsForUser(userId);\n    }\n    \n    // We have a session, use it for the query\n    const userId = session.user.id;\n    console.log(`Using session user for conversations: ${userId}`);\n    \n    return await fetchConversationsForUser(userId);\n  } catch (error) {\n    console.error('Error getting conversations:', error);\n    return [];\n  }\n}\n\n// Helper function to fetch conversations for a specific user ID\nasync function fetchConversationsForUser(userId: string): Promise<Conversation[]> {\n  // Use the .filter() method with proper parameters\n  const { data, error } = await supabase\n    .from('messages')\n    .select(`\n      *,\n      sender:profiles!sender_id(id, full_name, avatar_url),\n      receiver:profiles!receiver_id(id, full_name, avatar_url),\n      deal:deals(*)\n    `)\n    .filter('sender_id', 'eq', userId)\n    .filter('receiver_id', 'eq', userId, { foreignTable: 'or' })\n    .order('created_at', { ascending: false });\n\n  if (error) {\n    console.error('Error fetching conversations:', error);\n    return [];\n  }\n\n  // Process conversations\n  const conversationsMap = new Map<string, Conversation>();\n  \n  data?.forEach((message: MessageWithProfiles) => {\n    const otherUser = message.sender_id === userId ? message.receiver : message.sender;\n    const conversationId = otherUser.id;\n\n    if (!conversationsMap.has(conversationId)) {\n      conversationsMap.set(conversationId, {\n        user: otherUser,\n        lastMessage: message,\n        unreadCount: message.receiver_id === userId && !message.is_read ? 1 : 0\n      });\n    } else if (message.receiver_id === userId && !message.is_read) {\n      const conversation = conversationsMap.get(conversationId)!;\n      conversation.unreadCount++;\n    }\n  });\n\n  return Array.from(conversationsMap.values());\n}\n\n// Get messages between current user and another user\nexport async function getMessages(otherUserId: string): Promise<MessageWithProfiles[]> {\n  try {\n    const { data: user, error: userError } = await supabase.auth.getUser();\n    if (userError || !user.user) {\n      console.error('Authentication error:', userError);\n      throw new Error('User not authenticated');\n    }\n\n    console.log('Fetching messages with user:', otherUserId);\n\n    const { data, error } = await supabase\n      .from('messages')\n      .select(`\n        *,\n        sender:profiles!sender_id(id, full_name, avatar_url),\n        receiver:profiles!receiver_id(id, full_name, avatar_url),\n        deal:deals(*)\n      `)\n      .or(`and(sender_id.eq.${user.user.id},receiver_id.eq.${otherUserId}),and(sender_id.eq.${otherUserId},receiver_id.eq.${user.user.id})`)\n      .order('created_at', { ascending: true });\n\n    if (error) {\n      console.error('Database error:', error);\n      throw error;\n    }\n\n    console.log(`Found ${data?.length || 0} messages`);\n\n    // Mark messages as read\n    const unreadMessages = data?.filter(\n      (message) => message.receiver_id === user.user.id && !message.is_read\n    ) || [];\n\n    if (unreadMessages.length > 0) {\n      console.log(`Marking ${unreadMessages.length} messages as read`);\n      const { error: updateError } = await supabase\n        .from('messages')\n        .update({ is_read: true })\n        .in('id', unreadMessages.map((m) => m.id));\n\n      if (updateError) {\n        console.error('Error marking messages as read:', updateError);\n      }\n    }\n\n    return data || [];\n  } catch (error) {\n    console.error('Error getting messages:', error);\n    return [];\n  }\n}\n\n// Subscribe to new messages\nexport function subscribeToMessages(callback: (message: MessageWithProfiles) => void) {\n  try {\n    const subscription = supabase\n      .channel('messages')\n      .on(\n        'postgres_changes',\n        {\n          event: 'INSERT',\n          schema: 'public',\n          table: 'messages'\n        },\n        async (payload) => {\n          // Fetch the complete message with profiles and deal\n          const { data, error } = await supabase\n            .from('messages')\n            .select(`\n              *,\n              sender:profiles!sender_id(id, full_name, avatar_url),\n              receiver:profiles!receiver_id(id, full_name, avatar_url),\n              deal:deals(*)\n            `)\n            .eq('id', payload.new.id)\n            .single();\n\n          if (!error && data) {\n            callback(data);\n          }\n        }\n      )\n      .subscribe();\n\n    return subscription;\n  } catch (error) {\n    console.error('Error subscribing to messages:', error);\n    return null;\n  }\n}\n\n// Mark message as read\nexport async function markMessageAsRead(messageId: string) {\n  try {\n    const { error } = await supabase\n      .from('messages')\n      .update({ is_read: true })\n      .eq('id', messageId);\n\n    if (error) throw error;\n    return true;\n  } catch (error) {\n    console.error('Error marking message as read:', error);\n    return false;\n  }\n}\n\n// Search users - helper function for finding users to message\nexport async function searchUsers(searchTerm: string) {\n  try {\n    let userId: string;\n    \n    // Try to get authentication info using both methods\n    const { data: { session } } = await supabase.auth.getSession();\n    \n    if (session) {\n      userId = session.user.id;\n      console.log(`Using session user for search: ${userId}`);\n    } else {\n      // Fallback to getUser\n      const { data: userData, error: userError } = await supabase.auth.getUser();\n      \n      if (userError || !userData?.user) {\n        console.error('Failed to get authenticated user:', userError);\n        throw new Error('Authentication required to search users');\n      }\n      \n      userId = userData.user.id;\n      console.log(`Using getUser result for search: ${userId}`);\n    }\n    \n    // Start with the base query\n    let query = supabase\n      .from('profiles')\n      .select('id, full_name, email, avatar_url')\n      .neq('id', userId);\n    \n    // Add search filter if term is provided\n    if (searchTerm && searchTerm.trim()) {\n      const formattedTerm = `%${searchTerm.trim()}%`;\n      \n      // Use multiple .ilike() calls instead of .or() with string interpolation\n      query = query.or(\n        `full_name.ilike.${formattedTerm},email.ilike.${formattedTerm}`\n      );\n    }\n    \n    // Execute the query\n    const { data, error } = await query;\n    \n    if (error) {\n      console.error('Database error in searchUsers:', error);\n      return [];\n    }\n    \n    console.log(`Search found ${data?.length || 0} users`);\n    return data || [];\n  } catch (error) {\n    console.error('Error in searchUsers:', error);\n    return [];\n  }\n}\n","import React from 'react';\nimport { cn } from '../../lib/utils';\n\ntype LoadingSpinnerSize = 'xs' | 'sm' | 'md' | 'lg' | 'xl';\n\ninterface LoadingSpinnerProps {\n  size?: LoadingSpinnerSize;\n  className?: string;\n}\n\nexport const LoadingSpinner: React.FC<LoadingSpinnerProps> = ({ \n  size = 'md', \n  className \n}) => {\n  const sizeClasses = {\n    xs: 'h-3 w-3 border-[1.5px]',\n    sm: 'h-4 w-4 border-2',\n    md: 'h-6 w-6 border-2',\n    lg: 'h-8 w-8 border-[3px]',\n    xl: 'h-12 w-12 border-4'\n  };\n\n  return (\n    <div \n      className={cn(\n        'animate-spin rounded-full border-transparent border-b-current text-current', \n        sizeClasses[size],\n        className\n      )}\n    />\n  );\n}; ","import React, { useEffect, useState, useRef } from 'react';\nimport { useAuth } from '../lib/auth';\nimport { sendMessage, getMessages, MessageWithProfiles } from '../lib/messages';\nimport { Dialog, DialogContent, DialogHeader, DialogTitle } from './ui/dialog';\nimport { Button } from './ui/button';\nimport { Input } from './ui/input';\nimport { Avatar, AvatarFallback, AvatarImage } from './ui/avatar';\nimport { ScrollArea } from './ui/scroll-area';\nimport { LoadingSpinner } from './ui/loading-spinner';\nimport { Send } from 'lucide-react';\nimport { formatDistanceToNow } from 'date-fns';\n\ninterface MessagesModalProps {\n  isOpen: boolean;\n  onClose: () => void;\n  receiverId?: string;\n  dealId?: string;\n}\n\nexport const MessagesModal: React.FC<MessagesModalProps> = ({\n  isOpen,\n  onClose,\n  receiverId,\n  dealId\n}) => {\n  const { user } = useAuth();\n  const [messages, setMessages] = useState<MessageWithProfiles[]>([]);\n  const [newMessage, setNewMessage] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [receiver, setReceiver] = useState<any>(null);\n  const messagesEndRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    if (isOpen && receiverId) {\n      loadMessages();\n    } else {\n      setMessages([]);\n      setNewMessage('');\n    }\n  }, [isOpen, receiverId]);\n\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n\n  const loadMessages = async () => {\n    if (!receiverId) return;\n    \n    try {\n      setIsLoading(true);\n      const data = await getMessages(receiverId);\n      setMessages(data);\n      \n      // Set receiver info from the first message\n      if (data.length > 0) {\n        const msg = data[0];\n        const receiverData = msg.sender_id === user?.id ? msg.receiver : msg.sender;\n        setReceiver(receiverData);\n      }\n    } catch (error) {\n      console.error('Error loading messages:', error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleSendMessage = async (e: React.FormEvent) => {\n    e.preventDefault();\n    if (!receiverId || !newMessage.trim()) return;\n\n    try {\n      const message = await sendMessage(receiverId, newMessage.trim(), dealId);\n      if (message) {\n        setMessages(prev => [...prev, message]);\n        setNewMessage('');\n      }\n    } catch (error) {\n      console.error('Error sending message:', error);\n    }\n  };\n\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n  };\n\n  return (\n    <Dialog open={isOpen} onOpenChange={(open) => !open && onClose()}>\n      <DialogContent className=\"max-w-screen-md w-full\">\n        <DialogHeader>\n          <DialogTitle>\n            {receiver ? `Messages with ${receiver.full_name}` : 'Messages'}\n          </DialogTitle>\n        </DialogHeader>\n\n        <div className=\"h-[400px] flex flex-col\">\n          {isLoading ? (\n            <div className=\"flex-1 flex justify-center items-center\">\n              <LoadingSpinner />\n            </div>\n          ) : (\n            <ScrollArea className=\"flex-1 pr-4 mb-4\">\n              {messages.length === 0 ? (\n                <div className=\"h-full flex items-center justify-center text-muted-foreground\">\n                  No messages yet. Send a message to start the conversation.\n                </div>\n              ) : (\n                messages.map(message => (\n                  <div\n                    key={message.id}\n                    className={`flex mb-4 ${\n                      message.sender_id === user?.id ? 'justify-end' : 'justify-start'\n                    }`}\n                  >\n                    {message.sender_id !== user?.id && (\n                      <Avatar className=\"mr-2 mt-1\">\n                        <AvatarImage src={message.sender.avatar_url} />\n                        <AvatarFallback>\n                          {message.sender.full_name.charAt(0)}\n                        </AvatarFallback>\n                      </Avatar>\n                    )}\n                    <div\n                      className={`max-w-[70%] ${\n                        message.sender_id === user?.id\n                          ? 'bg-primary text-primary-foreground'\n                          : 'bg-muted'\n                      } rounded-lg p-3`}\n                    >\n                      <p>{message.content}</p>\n                      <p className=\"text-xs mt-1 opacity-70\">\n                        {formatDistanceToNow(new Date(message.created_at), { addSuffix: true })}\n                      </p>\n                    </div>\n                  </div>\n                ))\n              )}\n              <div ref={messagesEndRef} />\n            </ScrollArea>\n          )}\n\n          <form onSubmit={handleSendMessage} className=\"flex gap-2\">\n            <Input\n              value={newMessage}\n              onChange={e => setNewMessage(e.target.value)}\n              placeholder=\"Type a message...\"\n              autoFocus\n            />\n            <Button type=\"submit\" size=\"icon\">\n              <Send className=\"h-4 w-4\" />\n            </Button>\n          </form>\n        </div>\n      </DialogContent>\n    </Dialog>\n  );\n};\n","import React from \"react\";\nimport { Lightbulb } from \"lucide-react\";\n\nexport function RandomFact() {\n  const [fact, setFact] = React.useState<string>(\"\");\n\n  React.useEffect(() => {\n    fetch(\"https://uselessfacts.jsph.pl/api/v2/facts/random?language=en\")\n      .then((response) => response.json())\n      .then((data) => setFact(data.text))\n      .catch((error) => console.error(\"Error fetching random fact:\", error));\n  }, []);\n\n  if (!fact) return null;\n\n  return (\n    <div className=\"flex items-center gap-2 text-gray-400 text-sm\">\n      <Lightbulb className=\"w-4 h-4\" />\n      <p>{fact}</p>\n    </div>\n  );\n}\n","import { RandomFact } from \"./RandomFact\";\n\nexport function Footer() {\n  return (\n    <footer className=\"bg-gray-900 text-white py-8 sm:py-12\">\n      <div className=\"container mx-auto px-4\">\n        <div className=\"grid grid-cols-1 md:grid-cols-4 gap-8\">\n          <div>\n            <h3 className=\"text-lg font-semibold mb-4\">About Us</h3>\n            <p className=\"text-gray-400\">\n              Your trusted source for property search and market analysis.\n            </p>\n          </div>\n          <div>\n            <h3 className=\"text-lg font-semibold mb-4\">Legal</h3>\n            <ul className=\"space-y-2 text-gray-400\">\n              <li>\n                <a href=\"/terms\" className=\"hover:text-white\">\n                  Terms of Service\n                </a>\n              </li>\n              <li>\n                <a href=\"/privacy\" className=\"hover:text-white\">\n                  Privacy Policy\n                </a>\n              </li>\n              <li>\n                <a href=\"/disclaimer\" className=\"hover:text-white\">\n                  Legal Disclaimer\n                </a>\n              </li>\n              <li>\n                <a href=\"/gdpr\" className=\"hover:text-white\">\n                  GDPR Compliance\n                </a>\n              </li>\n            </ul>\n          </div>\n          <div>\n            <h3 className=\"text-lg font-semibold mb-4\">Contact</h3>\n            <ul className=\"space-y-2 text-gray-400\">\n              <li>info@myvge.com</li>\n              <li>Lytchett House, 13 Freeland Park, Poole, Dorset, England, BH16 6FA</li>\n            </ul>\n          </div>\n          <div>\n            <h3 className=\"text-lg font-semibold mb-4\">Compliance</h3>\n            <ul className=\"space-y-2 text-gray-400\">\n              <li>Company No: 15271126</li>\n            </ul>\n          </div>\n        </div>\n        <div className=\"mt-8 pt-8 border-t border-gray-800 space-y-4\">\n          <RandomFact />\n          <div className=\"text-center text-gray-400 space-y-2\">\n            <p className=\"text-xs\">\n              MyVGE is registered in England and Wales. Registered office: Lytchett House, 13 Freeland Park, Poole, Dorset, England, BH16 6FA. Company No: 15271126\n            </p>\n            <p className=\"text-xs\">\n              The information on this website is for general information\n              purposes only and does not constitute financial advice.\n            </p>\n            <p>&copy; {new Date().getFullYear()} MyVGE. All rights reserved.</p>\n          </div>\n        </div>\n      </div>\n    </footer>\n  );\n}\n","import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst alertVariants = cva(\n  \"relative w-full rounded-lg border px-4 py-3 text-sm [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground [&>svg~*]:pl-7\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-background text-foreground\",\n        destructive:\n          \"border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Alert = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & VariantProps<typeof alertVariants>\n>(({ className, variant, ...props }, ref) => (\n  <div\n    ref={ref}\n    role=\"alert\"\n    className={cn(alertVariants({ variant }), className)}\n    {...props}\n  />\n))\nAlert.displayName = \"Alert\"\n\nconst AlertTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h5\n    ref={ref}\n    className={cn(\"mb-1 font-medium leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nAlertTitle.displayName = \"AlertTitle\"\n\nconst AlertDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm [&_p]:leading-relaxed\", className)}\n    {...props}\n  />\n))\nAlertDescription.displayName = \"AlertDescription\"\n\nexport { Alert, AlertTitle, AlertDescription }\n","import React from \"react\";\nimport { Alert, AlertDescription } from \"./ui/alert\";\nimport { Info } from \"lucide-react\";\n\nexport function LegalDisclaimer() {\n  return (\n    <Alert className=\"bg-muted/50 border-muted-foreground/20\">\n      <Info className=\"h-4 w-4\" />\n      <AlertDescription className=\"text-xs text-muted-foreground\">\n        The information provided on this website is for general informational\n        purposes only and should not be considered as financial or investment\n        advice. Property investments carry risks and values can go down as well\n        as up. Always seek professional advice before making investment\n        decisions.\n      </AlertDescription>\n    </Alert>\n  );\n}\n","import { supabase } from './supabaseClient';\nimport { useQuery, useInfiniteQuery } from '@tanstack/react-query';\n\nexport interface Property {\n  id: string;\n  title: string;\n  description: string | null;\n  location: string;\n  price: number;\n  beds: number;\n  baths: number;\n  sqft: number;\n  image_url: string;\n  is_featured: boolean;\n  created_at: string;\n  updated_at: string;\n}\n\nexport interface SavedProperty {\n  id: string;\n  user_id: string;\n  property_id: string;\n  notes: string;\n  created_at: string;\n}\n\nexport interface Deal {\n  id: string;\n  title: string;\n  description: string;\n  location: string;\n  price: number;\n  roi_percentage: number;\n  investment_term: string;\n  property_type: string;\n  deal_type: string;\n  image_url: string;\n  created_at: string;\n  updated_at: string;\n}\n\nexport async function getFeaturedProperties(page: number, perPage: number) {\n  try {\n    const start = (page - 1) * perPage;\n    \n    console.log('Production URL:', import.meta.env.VITE_SUPABASE_URL);\n    console.log('Fetching properties with params:', { page, perPage, start });\n    \n    const { data, error } = await supabase\n      .from('properties')\n      .select(`\n        id,\n        title,\n        description,\n        location,\n        price,\n        beds,\n        baths,\n        sqft,\n        image_url,\n        is_featured,\n        created_at,\n        updated_at\n      `)\n      .eq('is_featured', true)\n      .range(start, start + perPage - 1)\n      .order('created_at', { ascending: false });\n\n    console.log('Raw Supabase response:', { data, error });\n\n    if (error) {\n      console.error('Supabase error:', error);\n      throw error;\n    }\n\n    if (!data || data.length === 0) {\n      console.log('No properties found');\n      return [];\n    }\n\n    // Map the data to ensure all required fields are present\n    const properties = data.map(p => ({\n      id: p.id || '',\n      title: p.title || '',\n      description: p.description || '',\n      location: p.location || '',\n      price: Number(p.price) || 0,\n      beds: Number(p.beds) || 0,\n      baths: Number(p.baths) || 0,\n      sqft: Number(p.sqft) || 0,\n      image_url: p.image_url || '',\n      is_featured: Boolean(p.is_featured),\n      created_at: p.created_at || new Date().toISOString(),\n      updated_at: p.updated_at || new Date().toISOString()\n    }));\n\n    console.log('Mapped properties:', properties);\n    return properties;\n\n  } catch (error) {\n    console.error('Error in getFeaturedProperties:', error);\n    return [];\n  }\n}\n\nexport const useFeaturedProperties = (limit = 6) => {\n  return useInfiniteQuery({\n    queryKey: ['featuredProperties'],\n    queryFn: ({ pageParam = 1 }) => getFeaturedProperties(pageParam, limit),\n    getNextPageParam: (lastPage, allPages) => {\n      return lastPage.length === limit ? allPages.length + 1 : undefined;\n    },\n    staleTime: 5 * 60 * 1000, // Data considered fresh for 5 minutes\n    cacheTime: 30 * 60 * 1000, // Cache data for 30 minutes\n  });\n};\n\nexport async function searchProperties(searchTerm: string): Promise<Property[]> {\n  try {\n    const { data, error } = await supabase\n      .from('properties')\n      .select(`\n        id,\n        title,\n        location,\n        price,\n        sqft,\n        beds,\n        baths,\n        description,\n        image_url,\n        is_featured,\n        created_at,\n        updated_at\n      `)\n      .or(`\n        location.ilike.%${searchTerm}%,\n        description.ilike.%${searchTerm}%,\n        title.ilike.%${searchTerm}%\n      `)\n      .order('created_at', { ascending: false });\n\n    if (error) throw error;\n    return data || [];\n  } catch (error) {\n    console.error('Error searching properties:', error);\n    return [];\n  }\n}\n\nexport async function getProperty(id: string): Promise<Property | null> {\n  const { data, error } = await supabase\n    .from(\"properties\")\n    .select(`\n      id,\n      title,\n      location,\n      price,\n      sqft,\n      beds,\n      baths,\n      description,\n      image_url,\n      is_featured,\n      created_at,\n      updated_at\n    `)\n    .eq(\"id\", id)\n    .single();\n\n  if (error) throw error;\n  return data;\n}\n\nexport async function saveProperty(\n  propertyId: string,\n  userId: string,\n  notes: string = \"\",\n) {\n  const { data, error } = await supabase\n    .from(\"saved_properties\")\n    .insert([\n      {\n        property_id: propertyId,\n        user_id: userId,\n        notes,\n      },\n    ])\n    .select()\n    .single();\n\n  if (error) throw error;\n  return data as SavedProperty;\n}\n\nexport async function getSavedProperties(userId: string) {\n  const { data, error } = await supabase\n    .from(\"saved_properties\")\n    .select(\n      `\n      *,\n      property:properties(*)\n    `,\n    )\n    .eq(\"user_id\", userId);\n\n  if (error) throw error;\n  return data;\n}\n\nexport async function getDeals(page: number, perPage: number) {\n  try {\n    const start = (page - 1) * perPage;\n    \n    console.log('Fetching deals with params:', { page, perPage, start });\n    \n    const { data, error } = await supabase\n      .from('deals')\n      .select(`\n        id,\n        title,\n        description,\n        location,\n        price,\n        roi_percentage,\n        investment_term,\n        property_type,\n        deal_type,\n        image_url,\n        created_at,\n        updated_at\n      `)\n      .range(start, start + perPage - 1)\n      .order('created_at', { ascending: false });\n\n    console.log('Raw Supabase deals response:', { data, error });\n\n    if (error) {\n      console.error('Supabase error:', error);\n      throw error;\n    }\n\n    if (!data || data.length === 0) {\n      console.log('No deals found');\n      return [];\n    }\n\n    // Map the data to ensure all required fields are present\n    const deals = data.map(d => ({\n      id: d.id || '',\n      title: d.title || '',\n      description: d.description || '',\n      location: d.location || '',\n      price: Number(d.price) || 0,\n      roi_percentage: Number(d.roi_percentage) || 0,\n      investment_term: d.investment_term || '',\n      property_type: d.property_type || '',\n      deal_type: d.deal_type || '',\n      image_url: d.image_url || '',\n      created_at: d.created_at || new Date().toISOString(),\n      updated_at: d.updated_at || new Date().toISOString()\n    }));\n\n    console.log('Mapped deals:', deals);\n    return deals;\n\n  } catch (error) {\n    console.error('Error in getDeals:', error);\n    return [];\n  }\n}\n\nexport const useDeals = (limit = 6) => {\n  return useInfiniteQuery({\n    queryKey: ['deals'],\n    queryFn: ({ pageParam = 1 }) => getDeals(pageParam, limit),\n    getNextPageParam: (lastPage, allPages) => {\n      return lastPage.length === limit ? allPages.length + 1 : undefined;\n    },\n    staleTime: 5 * 60 * 1000,\n    cacheTime: 30 * 60 * 1000,\n  });\n};\n","import { cn } from \"@/lib/utils\";\nimport React from \"react\";\n\ninterface MarqueeProps {\n  children: React.ReactNode;\n  direction?: \"left\" | \"right\" | \"up\" | \"down\";\n  pauseOnHover?: boolean;\n  reverse?: boolean;\n  fade?: boolean;\n  className?: string;\n  vertical?: boolean;\n}\n\nexport const Marquee = ({\n  children,\n  direction = \"left\",\n  pauseOnHover = false,\n  reverse = false,\n  fade = false,\n  className,\n  vertical = false,\n}: MarqueeProps) => {\n  return (\n    <div\n      className={cn(\n        \"group flex gap-4 overflow-hidden\",\n        vertical ? \"flex-col\" : \"flex-row\",\n        className\n      )}\n    >\n      <div\n        className={cn(\n          \"flex min-w-full shrink-0 animate-marquee items-center justify-around gap-4\",\n          vertical ? \"flex-col\" : \"flex-row\",\n          pauseOnHover && \"group-hover:[animation-play-state:paused]\",\n          reverse && \"animate-marquee-reverse\"\n        )}\n      >\n        {children}\n      </div>\n      <div\n        className={cn(\n          \"flex min-w-full shrink-0 animate-marquee items-center justify-around gap-4\",\n          vertical ? \"flex-col\" : \"flex-row\",\n          pauseOnHover && \"group-hover:[animation-play-state:paused]\",\n          reverse && \"animate-marquee-reverse\"\n        )}\n      >\n        {children}\n      </div>\n    </div>\n  );\n}; ","import React, { useRef, useEffect } from \"react\";\nimport { Renderer, Program, Mesh, Triangle } from \"ogl\";\n\ninterface LiquidChromeProps extends React.HTMLAttributes<HTMLDivElement> {\n  baseColor?: [number, number, number];\n  speed?: number;\n  amplitude?: number;\n  frequencyX?: number;\n  frequencyY?: number;\n  interactive?: boolean;\n}\n\nexport const LiquidChrome: React.FC<LiquidChromeProps> = ({\n  baseColor = [0.1, 0.1, 0.1],\n  speed = 0.2,\n  amplitude = 0.5,\n  frequencyX = 3,\n  frequencyY = 2,\n  interactive = true,\n  ...props\n}) => {\n  const containerRef = useRef<HTMLDivElement | null>(null);\n\n  useEffect(() => {\n    if (!containerRef.current) return;\n\n    const container = containerRef.current;\n    const renderer = new Renderer({ antialias: true });\n    const gl = renderer.gl;\n    gl.clearColor(1, 1, 1, 1);\n\n    const vertexShader = `\n      attribute vec2 position;\n      attribute vec2 uv;\n      varying vec2 vUv;\n      void main() {\n        vUv = uv;\n        gl_Position = vec4(position, 0.0, 1.0);\n      }\n    `;\n\n    const fragmentShader = `\n      precision highp float;\n      uniform float uTime;\n      uniform vec3 uResolution;\n      uniform vec3 uBaseColor;\n      uniform float uAmplitude;\n      uniform float uFrequencyX;\n      uniform float uFrequencyY;\n      uniform vec2 uMouse;\n      varying vec2 vUv;\n\n      vec4 renderImage(vec2 uvCoord) {\n          vec2 fragCoord = uvCoord * uResolution.xy;\n          vec2 uv = (2.0 * fragCoord - uResolution.xy) / min(uResolution.x, uResolution.y);\n\n          for (float i = 1.0; i < 10.0; i++){\n              uv.x += uAmplitude / i * cos(i * uFrequencyX * uv.y + uTime + uMouse.x * 3.14159);\n              uv.y += uAmplitude / i * cos(i * uFrequencyY * uv.x + uTime + uMouse.y * 3.14159);\n          }\n\n          vec2 diff = (uvCoord - uMouse);\n          float dist = length(diff);\n          float falloff = exp(-dist * 20.0);\n          float ripple = sin(10.0 * dist - uTime * 2.0) * 0.03;\n          uv += (diff / (dist + 0.0001)) * ripple * falloff;\n\n          vec3 color = uBaseColor / abs(sin(uTime - uv.y - uv.x));\n          return vec4(color, 1.0);\n      }\n\n      void main() {\n          vec4 col = vec4(0.0);\n          int samples = 0;\n          for (int i = -1; i <= 1; i++){\n              for (int j = -1; j <= 1; j++){\n                  vec2 offset = vec2(float(i), float(j)) * (1.0 / min(uResolution.x, uResolution.y));\n                  col += renderImage(vUv + offset);\n                  samples++;\n              }\n          }\n          gl_FragColor = col / float(samples);\n      }\n    `;\n\n    const geometry = new Triangle(gl);\n    const program = new Program(gl, {\n      vertex: vertexShader,\n      fragment: fragmentShader,\n      uniforms: {\n        uTime: { value: 0 },\n        uResolution: {\n          value: new Float32Array([\n            gl.canvas.width,\n            gl.canvas.height,\n            gl.canvas.width / gl.canvas.height,\n          ]),\n        },\n        uBaseColor: { value: new Float32Array(baseColor) },\n        uAmplitude: { value: amplitude },\n        uFrequencyX: { value: frequencyX },\n        uFrequencyY: { value: frequencyY },\n        uMouse: { value: new Float32Array([0, 0]) },\n      },\n    });\n    const mesh = new Mesh(gl, { geometry, program });\n\n    function resize() {\n      const scale = 1;\n      renderer.setSize(\n        container.offsetWidth * scale,\n        container.offsetHeight * scale\n      );\n      const resUniform = program.uniforms.uResolution.value as Float32Array;\n      resUniform[0] = gl.canvas.width;\n      resUniform[1] = gl.canvas.height;\n      resUniform[2] = gl.canvas.width / gl.canvas.height;\n    }\n    window.addEventListener(\"resize\", resize);\n    resize();\n\n    function handleMouseMove(event: MouseEvent) {\n      const rect = container.getBoundingClientRect();\n      const x = (event.clientX - rect.left) / rect.width;\n      const y = 1 - (event.clientY - rect.top) / rect.height;\n      const mouseUniform = program.uniforms.uMouse.value as Float32Array;\n      mouseUniform[0] = x;\n      mouseUniform[1] = y;\n    }\n\n    function handleTouchMove(event: TouchEvent) {\n      if (event.touches.length > 0) {\n        const touch = event.touches[0];\n        const rect = container.getBoundingClientRect();\n        const x = (touch.clientX - rect.left) / rect.width;\n        const y = 1 - (touch.clientY - rect.top) / rect.height;\n        const mouseUniform = program.uniforms.uMouse.value as Float32Array;\n        mouseUniform[0] = x;\n        mouseUniform[1] = y;\n      }\n    }\n\n    if (interactive) {\n      container.addEventListener(\"mousemove\", handleMouseMove);\n      container.addEventListener(\"touchmove\", handleTouchMove);\n    }\n\n    let animationId: number;\n    function update(t: number) {\n      animationId = requestAnimationFrame(update);\n      program.uniforms.uTime.value = t * 0.001 * speed;\n      renderer.render({ scene: mesh });\n    }\n    animationId = requestAnimationFrame(update);\n\n    container.appendChild(gl.canvas);\n\n    return () => {\n      cancelAnimationFrame(animationId);\n      window.removeEventListener(\"resize\", resize);\n      if (interactive) {\n        container.removeEventListener(\"mousemove\", handleMouseMove);\n        container.removeEventListener(\"touchmove\", handleTouchMove);\n      }\n      if (gl.canvas.parentElement) {\n        gl.canvas.parentElement.removeChild(gl.canvas);\n      }\n      gl.getExtension(\"WEBGL_lose_context\")?.loseContext();\n    };\n  }, [baseColor, speed, amplitude, frequencyX, frequencyY, interactive]);\n\n  return (\n    <div\n      ref={containerRef}\n      className=\"w-full h-full\"\n      {...props}\n    />\n  );\n};\n\nexport default LiquidChrome; ","import React from \"react\";\nimport {\n  Dialog,\n  DialogContent,\n  DialogHeader,\n  DialogTitle,\n  DialogDescription,\n} from \"./ui/dialog\";\nimport { Button } from \"./ui/button\";\nimport { Badge } from \"./ui/badge\";\nimport { formatCurrency, formatDate, formatNumber } from \"../lib/utils\";\nimport {\n  Bed,\n  Bath,\n  Square,\n  Home,\n  Calendar,\n  User,\n  Phone,\n  Mail,\n  MapPin,\n  Clock,\n  ArrowUpRight,\n  ArrowDownRight,\n  Percent,\n  PoundSterling,\n  Building,\n  Compass,\n  FileText,\n  Info,\n} from \"lucide-react\";\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"./ui/tabs\";\nimport { UserProfile } from \"../lib/auth\";\nimport { User as AuthUser } from \"@supabase/supabase-js\";\n\ninterface PropertyModalProps {\n  isOpen: boolean;\n  onClose: () => void;\n  property: any;\n  currentUser?: AuthUser | null;\n  userProfile?: UserProfile | null;\n}\n\nexport function PropertyModal({\n  isOpen,\n  onClose,\n  property,\n  currentUser,\n  userProfile\n}: PropertyModalProps) {\n  // Remove the useAuth hook\n  // const { user } = useAuth();\n  const isAuthenticated = !!currentUser;\n  \n  const isSubscriber = userProfile?.subscription_tier === \"pro\";\n\n  if (!property) return null;\n\n  // Format price for display\n  const price = property.price\n    ? formatCurrency(Number(property.price))\n    : \"Price on application\";\n\n  // Determine address components\n  let address = property.location || property.address || \"Address not available\";\n  let postcode = property.postcode || property.location?.match(/[A-Z]{1,2}[0-9][A-Z0-9]? ?[0-9][A-Z]{2}/i)?.[0] || \"\";\n\n  // Extract property details\n  const propertyType = property.property_type || \"Residential\";\n  const bedrooms = property.beds || property.bedrooms || 0;\n  const bathrooms = property.baths || property.bathrooms || 0;\n  const squareFootage = property.square_footage || property.sqft || 0;\n  const tenure = property.tenure || \"Freehold\";\n  const description = property.description || \"No description available\";\n\n  // Sale history processing\n  const saleHistory = property.sale_history || [];\n  \n  // Filter out sale history entries with invalid or undefined prices\n  const validSaleHistory = saleHistory\n    .filter((sale: any) => sale && sale.sale_price && !isNaN(Number(sale.sale_price)))\n    .sort((a: any, b: any) => new Date(b.sale_date).getTime() - new Date(a.sale_date).getTime());\n\n  // Calculate price growth percentage if there are multiple valid sales\n  let priceGrowthPercentage = 0;\n  if (validSaleHistory.length > 1) {\n    const mostRecentPrice = Number(validSaleHistory[0].sale_price);\n    const oldestPrice = Number(validSaleHistory[validSaleHistory.length - 1].sale_price);\n    priceGrowthPercentage = ((mostRecentPrice - oldestPrice) / oldestPrice) * 100;\n  }\n\n  // Calculate mortgage estimates\n  const calculateMortgage = (price: number, downPaymentPercent: number, interestRate: number, termYears: number) => {\n    const loanAmount = price * (1 - downPaymentPercent / 100);\n    const monthlyRate = interestRate / 100 / 12;\n    const numPayments = termYears * 12;\n    \n    const monthlyPayment = (loanAmount * monthlyRate * Math.pow(1 + monthlyRate, numPayments)) / \n                          (Math.pow(1 + monthlyRate, numPayments) - 1);\n    \n    return {\n      monthlyPayment,\n      totalInterest: (monthlyPayment * numPayments) - loanAmount,\n      totalCost: monthlyPayment * numPayments,\n    };\n  };\n  \n  // Default mortgage calculation (assuming 20% down, 4.5% interest, 25 year term)\n  const mortgage = calculateMortgage(\n    Number(property.price) || 0,\n    20,\n    4.5,\n    25\n  );\n\n  return (\n    <Dialog open={isOpen} onOpenChange={onClose}>\n      <DialogContent className=\"max-w-full sm:max-w-3xl md:max-w-4xl max-h-[90vh] overflow-y-auto p-0 w-[95vw] mx-auto\">\n        <div className=\"relative h-56 sm:h-64 md:h-72 overflow-hidden\">\n          <img\n            src={\n              property.image_url ||\n              `https://source.unsplash.com/random/1200x600?property,house&sig=${property.id}`\n            }\n            alt={address}\n            className=\"w-full h-full object-cover\"\n          />\n          <div className=\"absolute top-4 left-4 flex gap-2\">\n            <Badge className=\"bg-primary text-white\">\n              {propertyType}\n            </Badge>\n            {property.status && (\n              <Badge variant=\"secondary\">{property.status}</Badge>\n            )}\n          </div>\n          <button \n            className=\"absolute top-4 right-4 bg-black/50 text-white rounded-full p-2\"\n            onClick={onClose}\n            aria-label=\"Close\"\n          >\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"><line x1=\"18\" y1=\"6\" x2=\"6\" y2=\"18\"></line><line x1=\"6\" y1=\"6\" x2=\"18\" y2=\"18\"></line></svg>\n          </button>\n        </div>\n\n        <div className=\"p-4 sm:p-6\">\n          <DialogHeader className=\"mb-4 sm:mb-6\">\n            <div className=\"flex flex-col sm:flex-row sm:justify-between sm:items-start gap-2\">\n              <DialogTitle className=\"text-xl sm:text-2xl font-bold\">\n                {price}\n              </DialogTitle>\n              <div className=\"flex items-center gap-1 self-end sm:self-auto\">\n                <Button\n                  variant=\"outline\"\n                  size=\"sm\"\n                  className=\"text-xs sm:text-sm h-8\"\n                  onClick={(e) => e.stopPropagation()}\n                >\n                  Save\n                </Button>\n                <Button\n                  variant=\"outline\"\n                  size=\"sm\"\n                  className=\"text-xs sm:text-sm h-8\"\n                  onClick={(e) => e.stopPropagation()}\n                >\n                  Share\n                </Button>\n              </div>\n            </div>\n            <DialogDescription className=\"text-sm sm:text-base font-medium text-foreground mt-1\">\n              {address}\n            </DialogDescription>\n          </DialogHeader>\n\n          <Tabs defaultValue=\"details\" className=\"mt-4 sm:mt-6\">\n            <TabsList className=\"grid grid-cols-3 w-full mb-4 sm:mb-6 h-auto\">\n              <TabsTrigger value=\"details\" className=\"text-xs sm:text-sm py-1.5 px-1 sm:py-2 sm:px-4\">Property Details</TabsTrigger>\n              <TabsTrigger value=\"investment\" className=\"text-xs sm:text-sm py-1.5 px-1 sm:py-2 sm:px-4\">Investment Metrics</TabsTrigger>\n              <TabsTrigger value=\"history\" className=\"text-xs sm:text-sm py-1.5 px-1 sm:py-2 sm:px-4\">History & Area</TabsTrigger>\n            </TabsList>\n\n            <TabsContent value=\"details\" className=\"space-y-4 sm:space-y-6\">\n              <div className=\"grid grid-cols-2 md:grid-cols-4 gap-2 sm:gap-4\">\n                <div className=\"flex flex-col items-center justify-center p-2 sm:p-3 bg-muted rounded-lg\">\n                  <Bed className=\"h-4 w-4 sm:h-5 sm:w-5 mb-1 text-muted-foreground\" />\n                  <span className=\"text-xs sm:text-sm font-medium\">{bedrooms} Beds</span>\n                </div>\n                <div className=\"flex flex-col items-center justify-center p-2 sm:p-3 bg-muted rounded-lg\">\n                  <Bath className=\"h-4 w-4 sm:h-5 sm:w-5 mb-1 text-muted-foreground\" />\n                  <span className=\"text-xs sm:text-sm font-medium\">{bathrooms} Baths</span>\n                </div>\n                <div className=\"flex flex-col items-center justify-center p-2 sm:p-3 bg-muted rounded-lg\">\n                  <Square className=\"h-4 w-4 sm:h-5 sm:w-5 mb-1 text-muted-foreground\" />\n                  <span className=\"text-xs sm:text-sm font-medium\">{formatNumber(squareFootage)} sq ft</span>\n                </div>\n                <div className=\"flex flex-col items-center justify-center p-2 sm:p-3 bg-muted rounded-lg\">\n                  <Building className=\"h-4 w-4 sm:h-5 sm:w-5 mb-1 text-muted-foreground\" />\n                  <span className=\"text-xs sm:text-sm font-medium\">{tenure}</span>\n                </div>\n              </div>\n\n              <div>\n                <h3 className=\"text-base sm:text-lg font-semibold mb-2 flex items-center\">\n                  <MapPin className=\"h-4 w-4 sm:h-5 sm:w-5 mr-2 text-muted-foreground\" />\n                  Location\n                </h3>\n                <div className=\"bg-muted rounded-lg p-3 sm:p-4\">\n                  <p className=\"text-xs sm:text-sm mb-1\">\n                    <span className=\"font-medium\">Address:</span> {address}\n                  </p>\n                  {postcode && (\n                    <p className=\"text-xs sm:text-sm\">\n                      <span className=\"font-medium\">Postcode:</span> {postcode}\n                    </p>\n                  )}\n                </div>\n              </div>\n\n              <div>\n                <h3 className=\"text-base sm:text-lg font-semibold mb-2 flex items-center\">\n                  <Info className=\"h-4 w-4 sm:h-5 sm:w-5 mr-2 text-muted-foreground\" />\n                  Description\n                </h3>\n                <div className=\"bg-muted rounded-lg p-3 sm:p-4\">\n                  <p className=\"text-xs sm:text-sm whitespace-pre-line\">{description}</p>\n              </div>\n            </div>\n\n            <div>\n                <h3 className=\"text-base sm:text-lg font-semibold mb-2 flex items-center\">\n                  <FileText className=\"h-4 w-4 sm:h-5 sm:w-5 mr-2 text-muted-foreground\" />\n                  Property Documents\n                </h3>\n                <div className=\"bg-muted rounded-lg p-3 sm:p-4\">\n                  <p className=\"text-xs sm:text-sm mb-2\">\n                    {isAuthenticated && isSubscriber ? (\n                      <ul className=\"space-y-2\">\n                        <li className=\"flex items-center\">\n                          <FileText className=\"h-3 w-3 sm:h-4 sm:w-4 mr-2 text-muted-foreground\" />\n                          <span className=\"text-primary underline cursor-pointer text-xs sm:text-sm\">\n                            Energy Performance Certificate (EPC)\n                          </span>\n                        </li>\n                        <li className=\"flex items-center\">\n                          <FileText className=\"h-3 w-3 sm:h-4 sm:w-4 mr-2 text-muted-foreground\" />\n                          <span className=\"text-primary underline cursor-pointer text-xs sm:text-sm\">\n                            Floor Plan\n                          </span>\n                        </li>\n                        <li className=\"flex items-center\">\n                          <FileText className=\"h-3 w-3 sm:h-4 sm:w-4 mr-2 text-muted-foreground\" />\n                          <span className=\"text-primary underline cursor-pointer text-xs sm:text-sm\">\n                            Property Brochure\n                          </span>\n                        </li>\n                      </ul>\n                    ) : (\n                      <div className=\"text-center py-2\">\n                        <p className=\"text-muted-foreground mb-2 text-xs sm:text-sm\">\n                          Upgrade to PRO to access property documents\n                        </p>\n                        <Button className=\"text-xs sm:text-sm\" size=\"sm\">\n                          Upgrade Now\n                        </Button>\n                      </div>\n                    )}\n                  </p>\n                </div>\n              </div>\n            </TabsContent>\n\n            <TabsContent value=\"investment\" className=\"space-y-4 sm:space-y-6\">\n              <div className=\"grid grid-cols-1 gap-4 sm:gap-6\">\n                <div>\n                  <h3 className=\"text-base sm:text-lg font-semibold mb-2 sm:mb-3 flex items-center\">\n                    <PoundSterling className=\"h-4 w-4 sm:h-5 sm:w-5 mr-2 text-muted-foreground\" />\n                    Investment Metrics\n                  </h3>\n                  <div className=\"bg-muted rounded-lg p-3 sm:p-4 space-y-2 sm:space-y-3\">\n                    <div className=\"flex justify-between items-center\">\n                      <span className=\"text-xs sm:text-sm\">Estimated Monthly Rent</span>\n                      <span className=\"font-medium text-xs sm:text-sm\">\n                        {formatCurrency(property.estimated_rent || property.price * 0.004)}\n                      </span>\n                    </div>\n                    <div className=\"flex justify-between items-center\">\n                      <span className=\"text-xs sm:text-sm\">Rental Yield</span>\n                      <span className=\"font-medium text-xs sm:text-sm\">\n                        {property.rental_yield ? property.rental_yield.toFixed(2) : ((property.price * 0.004 * 12) / property.price * 100).toFixed(2)}%\n                      </span>\n                    </div>\n                    <div className=\"flex justify-between items-center\">\n                      <span className=\"text-xs sm:text-sm\">Estimated ROI (5yr)</span>\n                      <span className=\"font-medium text-xs sm:text-sm\">\n                        {property.roi ? property.roi.toFixed(2) : ((property.price * 0.25) / property.price * 100).toFixed(2)}%\n                      </span>\n                    </div>\n                    <div className=\"flex justify-between items-center\">\n                      <span className=\"text-xs sm:text-sm\">Price per sq ft</span>\n                      <span className=\"font-medium text-xs sm:text-sm\">\n                        {squareFootage > 0 ? formatCurrency(property.price / squareFootage) : \"N/A\"}\n                      </span>\n                    </div>\n                  </div>\n                </div>\n\n                <div>\n                  <h3 className=\"text-base sm:text-lg font-semibold mb-2 sm:mb-3 flex items-center\">\n                    <Compass className=\"h-4 w-4 sm:h-5 sm:w-5 mr-2 text-muted-foreground\" />\n                    Area Insights\n                  </h3>\n                  <div className=\"bg-muted rounded-lg p-3 sm:p-4 space-y-2 sm:space-y-3\">\n                    <div className=\"flex justify-between items-center\">\n                      <span className=\"text-xs sm:text-sm\">Average Area Price</span>\n                      <span className=\"font-medium text-xs sm:text-sm\">\n                        {formatCurrency(property.area_avg_price || property.price * 1.1)}\n                      </span>\n                    </div>\n                    <div className=\"flex justify-between items-center\">\n                      <span className=\"text-xs sm:text-sm\">Price vs. Area Average</span>\n                      <div className=\"flex items-center\">\n                        {property.price < (property.area_avg_price || property.price * 1.1) ? (\n                          <>\n                            <ArrowDownRight className=\"h-3 w-3 sm:h-4 sm:w-4 text-green-500 mr-1\" />\n                            <span className=\"text-green-500 font-medium text-xs sm:text-sm\">\n                              {(((property.area_avg_price || property.price * 1.1) - property.price) / (property.area_avg_price || property.price * 1.1) * 100).toFixed(1)}% below\n                            </span>\n                          </>\n                        ) : (\n                          <>\n                            <ArrowUpRight className=\"h-3 w-3 sm:h-4 sm:w-4 text-amber-500 mr-1\" />\n                            <span className=\"text-amber-500 font-medium text-xs sm:text-sm\">\n                              {((property.price - (property.area_avg_price || property.price * 0.9)) / (property.area_avg_price || property.price * 0.9) * 100).toFixed(1)}% above\n                            </span>\n                          </>\n                        )}\n                      </div>\n                    </div>\n                    <div className=\"flex justify-between items-center\">\n                      <span className=\"text-xs sm:text-sm\">12-month Price Trend</span>\n                      <div className=\"flex items-center\">\n                        <ArrowUpRight className=\"h-3 w-3 sm:h-4 sm:w-4 text-green-500 mr-1\" />\n                        <span className=\"text-green-500 font-medium text-xs sm:text-sm\">+4.2%</span>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n\n                <div>\n                  <h3 className=\"text-base sm:text-lg font-semibold mb-2 sm:mb-3 flex items-center\">\n                    <PoundSterling className=\"h-4 w-4 sm:h-5 sm:w-5 mr-2 text-muted-foreground\" />\n                    Mortgage Calculator\n                  </h3>\n                  <div className=\"bg-muted rounded-lg p-3 sm:p-4\">\n                    <div className=\"grid grid-cols-1 sm:grid-cols-3 gap-3 sm:gap-4 mb-3 sm:mb-4\">\n                      <div>\n                        <p className=\"text-xs sm:text-sm mb-1\">Property Price</p>\n                        <p className=\"text-sm sm:text-base font-medium\">{formatCurrency(Number(property.price) || 0)}</p>\n                      </div>\n                      <div>\n                        <p className=\"text-xs sm:text-sm mb-1\">Monthly Payment</p>\n                        <p className=\"text-sm sm:text-base font-medium\">{formatCurrency(mortgage.monthlyPayment)}</p>\n                      </div>\n                      <div>\n                        <p className=\"text-xs sm:text-sm mb-1\">Total Interest</p>\n                        <p className=\"text-sm sm:text-base font-medium\">{formatCurrency(mortgage.totalInterest)}</p>\n                      </div>\n                    </div>\n                    <p className=\"text-[10px] sm:text-xs text-muted-foreground text-center mt-2\">\n                      Based on 20% down payment, 4.5% interest rate, 25-year term\n                    </p>\n                  </div>\n                </div>\n\n                <div>\n                  <h3 className=\"text-base sm:text-lg font-semibold mb-2 sm:mb-3 flex items-center\">\n                    <PoundSterling className=\"h-4 w-4 sm:h-5 sm:w-5 mr-2 text-muted-foreground\" />\n                    Cash Flow Analysis\n                  </h3>\n                  <div className=\"bg-muted rounded-lg p-3 sm:p-4\">\n                    <div className=\"space-y-2 sm:space-y-3\">\n                      <div className=\"flex justify-between items-center\">\n                        <span className=\"text-xs sm:text-sm\">Monthly Rental Income</span>\n                        <span className=\"font-medium text-xs sm:text-sm\">\n                          {formatCurrency(property.estimated_rent || property.price * 0.004)}\n                        </span>\n                      </div>\n                      <div className=\"flex justify-between items-center\">\n                        <span className=\"text-xs sm:text-sm\">Mortgage Payment</span>\n                        <span className=\"font-medium text-red-500 text-xs sm:text-sm\">\n                          -{formatCurrency(mortgage.monthlyPayment)}\n                        </span>\n                      </div>\n                      <div className=\"flex justify-between items-center\">\n                        <span className=\"text-xs sm:text-sm\">Est. Maintenance (10%)</span>\n                        <span className=\"font-medium text-red-500 text-xs sm:text-sm\">\n                          -{formatCurrency((property.estimated_rent || property.price * 0.004) * 0.1)}\n                        </span>\n                      </div>\n                      <div className=\"flex justify-between items-center\">\n                        <span className=\"text-xs sm:text-sm\">Est. Management (5%)</span>\n                        <span className=\"font-medium text-red-500 text-xs sm:text-sm\">\n                          -{formatCurrency((property.estimated_rent || property.price * 0.004) * 0.05)}\n                        </span>\n                      </div>\n                      <div className=\"border-t pt-2 mt-2 flex justify-between items-center\">\n                        <span className=\"text-xs sm:text-sm font-medium\">Monthly Cash Flow</span>\n                        <span className=\"font-medium text-xs sm:text-sm\">\n                          {formatCurrency(\n                            (property.estimated_rent || property.price * 0.004) - \n                            mortgage.monthlyPayment - \n                            (property.estimated_rent || property.price * 0.004) * 0.15\n                          )}\n                        </span>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </TabsContent>\n\n            <TabsContent value=\"history\" className=\"space-y-4 sm:space-y-6\">\n              <div>\n                <h3 className=\"text-base sm:text-lg font-semibold mb-2 sm:mb-3 flex items-center\">\n                  <Calendar className=\"h-4 w-4 sm:h-5 sm:w-5 mr-2 text-muted-foreground\" />\n                  Sale History\n                </h3>\n                {validSaleHistory.length > 0 ? (\n                  <div className=\"bg-muted rounded-lg p-3 sm:p-4\">\n                    <div className=\"mb-3 sm:mb-4\">\n                      {priceGrowthPercentage !== 0 && (\n                        <div className=\"mb-2 sm:mb-3 text-xs sm:text-sm\">\n                          <span className=\"font-medium\">Total price growth: </span>\n                          <span className={priceGrowthPercentage >= 0 ? \"text-green-500\" : \"text-red-500\"}>\n                            {priceGrowthPercentage >= 0 ? \"+\" : \"\"}{priceGrowthPercentage.toFixed(2)}%\n                          </span>\n                        </div>\n                      )}\n                      \n                      {/* Sale History Chart - Responsive */}\n                      <div className=\"relative h-16 sm:h-24 mt-4 sm:mt-6 mb-1 sm:mb-2\">\n                        {validSaleHistory.map((sale: any, index: number) => {\n                          const maxPrice = Math.max(...validSaleHistory.map((s: any) => Number(s.sale_price)));\n                          const height = (Number(sale.sale_price) / maxPrice) * 100;\n                          const width = 100 / validSaleHistory.length;\n                          const position = index * width;\n                          \n                          return (\n                            <div \n                              key={index}\n                              className=\"absolute bottom-0 bg-primary hover:bg-primary/80 rounded-t transition-all cursor-pointer group\"\n                              style={{\n                                height: `${height}%`,\n                                width: `${width - 5}%`,\n                                left: `${position}%`\n                              }}\n                              title={`${formatDate(sale.sale_date)}: ${formatCurrency(Number(sale.sale_price))}`}\n                            >\n                              <div className=\"opacity-0 group-hover:opacity-100 absolute -top-9 sm:-top-10 left-1/2 transform -translate-x-1/2 bg-background border p-1 sm:p-2 rounded text-[10px] sm:text-xs whitespace-nowrap z-10\">\n                                {formatDate(sale.sale_date)}: {formatCurrency(Number(sale.sale_price))}\n                              </div>\n                            </div>\n                          );\n                        })}\n                      </div>\n                    </div>\n                    \n                    <div className=\"space-y-2 sm:space-y-3\">\n                      {validSaleHistory.map((sale: any, index: number) => (\n                        <div key={index} className=\"flex justify-between items-center py-0.5 sm:py-1\">\n                          <div className=\"flex items-center\">\n                            <Calendar className=\"h-3 w-3 sm:h-4 sm:w-4 mr-1 sm:mr-2 text-muted-foreground\" />\n                            <span className=\"text-xs sm:text-sm\">{formatDate(sale.sale_date)}</span>\n                          </div>\n                          <span className=\"font-medium text-xs sm:text-sm\">{formatCurrency(Number(sale.sale_price))}</span>\n                        </div>\n                      ))}\n                    </div>\n                  </div>\n                ) : (\n                  <div className=\"bg-muted rounded-lg p-3 sm:p-4 text-center\">\n                    <p className=\"text-muted-foreground text-xs sm:text-sm\">No sale history available</p>\n                  </div>\n                )}\n              </div>\n\n              <div>\n                <h3 className=\"text-base sm:text-lg font-semibold mb-2 sm:mb-3 flex items-center\">\n                  <Compass className=\"h-4 w-4 sm:h-5 sm:w-5 mr-2 text-muted-foreground\" />\n                  Neighborhood Information\n                </h3>\n                {isAuthenticated && isSubscriber ? (\n                  <div className=\"bg-muted rounded-lg p-3 sm:p-4 space-y-2 sm:space-y-3\">\n                    <div className=\"flex justify-between items-center\">\n                      <span className=\"text-xs sm:text-sm\">Local Schools</span>\n                      <Badge variant=\"outline\" className=\"text-xs\">Good</Badge>\n                    </div>\n                    <div className=\"flex justify-between items-center\">\n                      <span className=\"text-xs sm:text-sm\">Transport Links</span>\n                      <Badge variant=\"outline\" className=\"text-xs\">Excellent</Badge>\n                    </div>\n                    <div className=\"flex justify-between items-center\">\n                      <span className=\"text-xs sm:text-sm\">Local Amenities</span>\n                      <Badge variant=\"outline\" className=\"text-xs\">Good</Badge>\n                    </div>\n                    <div className=\"flex justify-between items-center\">\n                      <span className=\"text-xs sm:text-sm\">Crime Rate</span>\n                      <Badge variant=\"outline\" className=\"text-xs\">Low</Badge>\n                    </div>\n                    <div className=\"mt-2 pt-2 border-t\">\n                      <p className=\"text-xs sm:text-sm text-muted-foreground\">\n                        This property is located in a well-established residential area with good \n                        local schools and excellent transport links. The neighborhood has seen \n                        steady property value growth over the past 5 years.\n                      </p>\n                    </div>\n                  </div>\n                ) : (\n                  <div className=\"bg-muted rounded-lg p-3 sm:p-4 text-center\">\n                    <p className=\"text-muted-foreground mb-2 text-xs sm:text-sm\">\n                      Upgrade to PRO to access detailed neighborhood information\n                    </p>\n                    <Button className=\"text-xs sm:text-sm\" size=\"sm\">\n                      Upgrade Now\n                    </Button>\n                  </div>\n                )}\n              </div>\n            </TabsContent>\n          </Tabs>\n        </div>\n      </DialogContent>\n    </Dialog>\n  );\n} ","import React from \"react\";\nimport Header from \"./Header\";\nimport HeroSection from \"./HeroSection\";\nimport { PropertyCard } from \"./PropertyCard\";\nimport { AuthModal } from \"./AuthModal\";\nimport { SubscriptionModal } from \"./SubscriptionModal\";\nimport { MessagesModal } from \"./MessagesModal\";\nimport { Footer } from \"./Footer\";\nimport { LegalDisclaimer } from \"./LegalDisclaimer\";\nimport { useAuth } from \"../lib/auth\";\nimport { searchProperties, getFeaturedProperties, Property, useDeals } from \"../lib/properties\";\nimport { Marquee } from \"./ui/Marquee\";\nimport { cn } from \"../lib/utils\";\nimport { LiquidChrome } from \"./LiquidChrome\";\nimport { PropertyModal } from \"./PropertyModal\";\nimport { LoadingSpinner } from \"./ui/loading-spinner\";\n\ntype AuthMode = \"signin\" | \"signup\";\n\nconst reviews = [\n  {\n    name: \"Savills\",\n    username: \"@savills\",\n    body: \"Leading the way in property investment and market analysis.\",\n    img: \"https://avatar.vercel.sh/savills\",\n  },\n  {\n    name: \"Knight Frank\",\n    username: \"@knightfrank\",\n    body: \"Exceptional platform for property investment insights.\",\n    img: \"https://avatar.vercel.sh/knightfrank\",\n  },\n  {\n    name: \"JLL\",\n    username: \"@jll\",\n    body: \"Revolutionary approach to property investment analytics.\",\n    img: \"https://avatar.vercel.sh/jll\",\n  },\n];\n\nconst firstRow = reviews.slice(0, reviews.length / 2);\nconst secondRow = reviews.slice(reviews.length / 2);\nconst thirdRow = reviews.slice(0, reviews.length / 2);\nconst fourthRow = reviews.slice(reviews.length / 2);\n\nconst ReviewCard = ({\n  img,\n  name,\n  username,\n  body,\n}: {\n  img: string;\n  name: string;\n  username: string;\n  body: string;\n}) => {\n  return (\n    <figure\n      className={cn(\n        \"relative h-full w-36 cursor-pointer overflow-hidden rounded-xl border p-4\",\n        \"border-gray-950/[.1] bg-gray-950/[.01] hover:bg-gray-950/[.05]\",\n        \"dark:border-gray-50/[.1] dark:bg-gray-50/[.10] dark:hover:bg-gray-50/[.15]\",\n      )}\n    >\n      <div className=\"flex flex-row items-center gap-2\">\n        <img className=\"rounded-full\" width=\"32\" height=\"32\" alt=\"\" src={img} />\n        <div className=\"flex flex-col\">\n          <figcaption className=\"text-sm font-medium dark:text-white\">\n            {name}\n          </figcaption>\n          <p className=\"text-xs font-medium dark:text-white/40\">{username}</p>\n        </div>\n      </div>\n      <blockquote className=\"mt-2 text-sm\">{body}</blockquote>\n    </figure>\n  );\n};\n\nconst Home = () => {\n  const { user, profile, signOut } = useAuth();\n  const [isInitialLoad, setIsInitialLoad] = React.useState(true);\n  const [searchResults, setSearchResults] = React.useState<Property[]>([]);\n  const [isSearching, setIsSearching] = React.useState(false);\n  const [isAuthModalOpen, setIsAuthModalOpen] = React.useState(false);\n  const [isSubscriptionModalOpen, setIsSubscriptionModalOpen] =\n    React.useState(false);\n  const [authMode, setAuthMode] = React.useState(\"signin\");\n  const [isMessagesModalOpen, setIsMessagesModalOpen] = React.useState(false);\n  const [selectedReceiverId] = React.useState();\n  const [page, setPage] = React.useState(1);\n  const [hasMore, setHasMore] = React.useState(true);\n  const PROPERTIES_PER_PAGE = 6;\n  const [isLoading, setIsLoading] = React.useState(true);\n  const [isFetchingMore, setIsFetchingMore] = React.useState(false);\n  const [selectedProperty, setSelectedProperty] = React.useState<Property | null>(null);\n  const [isPropertyModalOpen, setIsPropertyModalOpen] = React.useState(false);\n  const observerTarget = React.useRef<HTMLDivElement>(null);\n  const loadingRef = React.useRef(false);\n  const { data: dealsData, isLoading: isLoadingDeals } = useDeals();\n\n  const loadFeaturedProperties = async (pageNum = 1, isLoadingMore = false) => {\n    if (loadingRef.current) return;\n    loadingRef.current = true;\n\n    try {\n      if (!isLoadingMore) {\n        setIsLoading(true);\n      } else {\n        setIsFetchingMore(true);\n      }\n      \n      console.log('Fetching page:', pageNum);\n      const properties = await getFeaturedProperties(pageNum, PROPERTIES_PER_PAGE);\n      console.log('Received properties:', properties);\n      \n      if (pageNum === 1) {\n        setSearchResults(properties);\n      } else {\n        setSearchResults(prev => [...prev, ...properties]);\n      }\n      \n      setHasMore(properties.length === PROPERTIES_PER_PAGE);\n      setPage(pageNum);\n      setIsInitialLoad(false);\n    } catch (error) {\n      console.error(\"Error loading properties:\", error);\n    } finally {\n      setIsLoading(false);\n      setIsFetchingMore(false);\n      loadingRef.current = false;\n    }\n  };\n\n  React.useEffect(() => {\n    if (isInitialLoad) {\n      loadFeaturedProperties(1, false);\n    }\n  }, [isInitialLoad]);\n\n  React.useEffect(() => {\n    if (!observerTarget.current || isInitialLoad || isSearching) return;\n\n    const observer = new IntersectionObserver(\n      entries => {\n        if (entries[0].isIntersecting && hasMore && !loadingRef.current) {\n          loadFeaturedProperties(page + 1, true);\n        }\n      },\n      { \n        rootMargin: '200px',\n        threshold: 0.1\n      }\n    );\n\n    observer.observe(observerTarget.current);\n    return () => observer.disconnect();\n  }, [hasMore, page, isInitialLoad, isSearching]);\n\n  const handleSearch = async (term: string) => {\n    if (!term.trim()) {\n      // Reset all states when clearing search\n      setSearchResults([]);\n      setIsSearching(false);\n      setPage(1);\n      setHasMore(true);\n      setIsLoading(true);\n      try {\n        const properties = await getFeaturedProperties(1, PROPERTIES_PER_PAGE);\n        setSearchResults(properties);\n        setHasMore(properties.length === PROPERTIES_PER_PAGE);\n      } catch (error) {\n        console.error(\"Error loading properties:\", error);\n      } finally {\n        setIsLoading(false);\n      }\n      return;\n    }\n\n    setIsSearching(true);\n    setSearchResults([]); // Clear existing results before search\n    try {\n      const results = await searchProperties(term);\n      // Map the results to match the Property interface\n      const mappedResults = results.map(p => ({\n        id: p.id,\n        title: p.title,\n        location: p.location,\n        price: p.price,\n        sqft: p.sqft,\n        beds: p.beds,\n        baths: p.baths,\n        description: p.description,\n        image_url: p.image_url,\n        is_featured: p.is_featured,\n        created_at: p.created_at,\n        updated_at: p.updated_at\n      }));\n      \n      setSearchResults(mappedResults);\n      setHasMore(false); // Disable infinite scroll for search results\n      setPage(1); // Reset page number\n    } catch (error) {\n      console.error(\"Error searching properties:\", error);\n      setSearchResults([]); // Clear results on error\n    } finally {\n      setIsSearching(false);\n    }\n  };\n\n  // Render conditions\n  const showLoading = isLoading;\n  const showProperties = searchResults && searchResults.length > 0;\n  console.log('Render state:', { \n    isLoading, \n    searchResultsLength: searchResults?.length,\n    showLoading,\n    showProperties \n  });\n\n  return (\n    <div className=\"min-h-screen bg-background\">\n      <Header\n        isAuthenticated={!!user}\n        userProfile={profile || undefined}\n        onSignIn={() => {\n          setAuthMode(\"signin\");\n          setIsAuthModalOpen(true);\n        }}\n        onSignUp={() => {\n          setAuthMode(\"signup\");\n          setIsAuthModalOpen(true);\n        }}\n        onSignOut={async () => {\n          try {\n            await signOut();\n            window.location.href = \"/\";\n          } catch (error) {\n            console.error(\"Error signing out:\", error);\n          }\n        }}\n      />\n\n      <main>\n        <HeroSection onSearch={handleSearch} />\n\n        <div className=\"w-full bg-background py-8\">\n          <div className=\"max-w-[1200px] mx-auto px-4 sm:px-8\">\n            <h2 className=\"text-2xl font-bold mb-6\">\n              {isSearching ? \"Search Results\" : \"Featured Properties\"}\n            </h2>\n            \n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 mb-8\">\n              {showLoading ? (\n                Array(3).fill(0).map((_, i) => (\n                  <div\n                    key={i}\n                    className=\"w-full h-[420px] bg-muted rounded-lg animate-pulse\"\n                  />\n                ))\n              ) : showProperties ? (\n                searchResults.map((property) => (\n                  <div \n                    key={property.id || Math.random().toString()} \n                    onClick={() => {\n                      setSelectedProperty(property);\n                      setIsPropertyModalOpen(true);\n                    }}\n                    className=\"cursor-pointer hover:opacity-90 transition-opacity\"\n                  >\n                    <PropertyCard\n                      id={property.id}\n                      address={property.location || 'Location not available'}\n                      price={Number(property.price) || 0}\n                      squareFootage={Number(property.sqft) || 0}\n                      bedrooms={Number(property.beds) || 0}\n                      bathrooms={Number(property.baths) || 0}\n                      isPremium={Boolean(property.is_featured)}\n                      propertyType=\"residential\"\n                      description={property.description || ''}\n                      createdAt={property.created_at || new Date().toISOString()}\n                      images={property.image_url ? [property.image_url] : []}\n                      currentUser={user}\n                      userProfile={profile}\n                    />\n                  </div>\n                ))\n              ) : (\n                <div className=\"col-span-3 text-center py-8 text-muted-foreground\">\n                  No properties found\n                </div>\n              )}\n            </div>\n            \n            {hasMore && !isLoading && !isSearching && (\n              <div \n                ref={observerTarget} \n                className=\"h-24 flex items-center justify-center my-8\"\n              >\n                {isFetchingMore ? (\n                  <div className=\"flex flex-col items-center gap-2\">\n                    <LoadingSpinner />\n                    <p className=\"text-sm text-muted-foreground\">Loading more properties...</p>\n                  </div>\n                ) : (\n                  <div className=\"h-8\" />\n                )}\n              </div>\n            )}\n          </div>\n        </div>\n\n        {/* Investment Deals Section */}\n        <div className=\"w-full bg-background py-8\">\n          <div className=\"max-w-[1200px] mx-auto px-4 sm:px-8\">\n            <h2 className=\"text-2xl font-bold mb-6\">Investment Deals</h2>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n              {isLoadingDeals ? (\n                Array(3).fill(0).map((_, i) => (\n                  <div key={i} className=\"w-full h-[420px] bg-muted rounded-lg animate-pulse\" />\n                ))\n              ) : dealsData?.pages?.[0] && Array.isArray(dealsData.pages[0]) ? (\n                dealsData.pages[0].map((deal: any) => (\n                  <PropertyCard\n                    key={deal.id}\n                    id={deal.id}\n                    address={deal.location}\n                    price={deal.price}\n                    description={deal.description}\n                    propertyType={deal.property_type}\n                    createdAt={deal.created_at}\n                    images={[deal.image_url]}\n                    isDeal={true}\n                    roi_percentage={deal.roi_percentage}\n                    investment_term={deal.investment_term}\n                    deal_type={deal.deal_type}\n                    isPremium={true}\n                    currentUser={user}\n                    userProfile={profile}\n                  />\n                ))\n              ) : (\n                <div className=\"col-span-3 text-center py-8 text-muted-foreground\">\n                  No investment deals available\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n\n        {/* Trusted by Industry Leaders Section */}\n        <section className=\"w-full py-12 bg-background\">\n          <div className=\"container mx-auto text-center mb-8\">\n            <h2 className=\"text-3xl font-bold mb-4\">Trusted by Industry Leaders</h2>\n  \n          </div>\n          <div className=\"relative flex h-96 w-full flex-row items-center justify-center gap-4 overflow-hidden [perspective:300px]\">\n            <div\n              className=\"flex flex-row items-center gap-4\"\n              style={{\n                transform:\n                  \"translateX(-100px) translateY(0px) translateZ(-100px) rotateX(20deg) rotateY(-10deg) rotateZ(20deg)\",\n              }}\n            >\n              <Marquee pauseOnHover vertical className=\"[--duration:20s]\">\n                {firstRow.map((review) => (\n                  <ReviewCard key={review.username} {...review} />\n                ))}\n              </Marquee>\n              <Marquee reverse pauseOnHover className=\"[--duration:20s]\" vertical>\n                {secondRow.map((review) => (\n                  <ReviewCard key={review.username} {...review} />\n                ))}\n              </Marquee>\n              <Marquee reverse pauseOnHover className=\"[--duration:20s]\" vertical>\n                {thirdRow.map((review) => (\n                  <ReviewCard key={review.username} {...review} />\n                ))}\n              </Marquee>\n              <Marquee pauseOnHover className=\"[--duration:20s]\" vertical>\n                {fourthRow.map((review) => (\n                  <ReviewCard key={review.username} {...review} />\n                ))}\n              </Marquee>\n            </div>\n\n            <div className=\"pointer-events-none absolute inset-x-0 top-0 h-1/4 bg-gradient-to-b from-background\"></div>\n            <div className=\"pointer-events-none absolute inset-x-0 bottom-0 h-1/4 bg-gradient-to-t from-background\"></div>\n            <div className=\"pointer-events-none absolute inset-y-0 left-0 w-1/4 bg-gradient-to-r from-background\"></div>\n            <div className=\"pointer-events-none absolute inset-y-0 right-0 w-1/4 bg-gradient-to-l from-background\"></div>\n          </div>\n        </section>\n\n        <div className=\"w-full bg-background py-8\">\n          <div className=\"max-w-[1200px] mx-auto px-4 sm:px-8\">\n            <div className=\"mb-8\">\n              <LegalDisclaimer />\n            </div>\n          </div>\n        </div>\n\n        {(!profile || profile.subscription_tier === \"free\") && (\n          <div className=\"w-full bg-background py-16\">\n            <div className=\"max-w-[1200px] mx-auto px-4 sm:px-8\">\n              <div className=\"relative w-full rounded-3xl overflow-hidden\">\n                {/* LiquidChrome Background */}\n                <div className=\"absolute inset-0\">\n                  <LiquidChrome\n                    baseColor={[0.1, 0.1, 0.1]}\n                    speed={1}\n                    amplitude={0.6}\n                    interactive={true}\n                  />\n                </div>\n                \n                {/* Background Overlay with Blur */}\n                <div className=\"absolute inset-0 bg-black/40 backdrop-blur-[8px]\" />\n                \n                {/* Content */}\n                <div className=\"relative z-10 text-center py-12 px-8\">\n                  <h2 className=\"text-3xl font-bold mb-4 text-white\">\n                    Unlock Premium Property Insights\n                  </h2>\n                  <p className=\"text-lg text-gray-300 mb-8 max-w-2xl mx-auto\">\n                    Get access to detailed property analysis, market comparisons, and investment metrics to make informed decisions.\n                  </p>\n                  <button\n                    onClick={() => setIsSubscriptionModalOpen(true)}\n                    className=\"px-8 py-3 rounded-full bg-primary text-primary-foreground hover:bg-primary/90 transition-colors\"\n                  >\n                    Upgrade Now\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n\n      </main>\n\n      <Footer />\n\n      <AuthModal\n        isOpen={isAuthModalOpen}\n        onClose={() => setIsAuthModalOpen(false)}\n        defaultMode={authMode as AuthMode}\n      />\n\n      <SubscriptionModal\n        isOpen={isSubscriptionModalOpen}\n        onClose={() => setIsSubscriptionModalOpen(false)}\n        currentUser={user}\n        userProfile={profile}\n      />\n\n      <MessagesModal\n        isOpen={isMessagesModalOpen}\n        onClose={() => setIsMessagesModalOpen(false)}\n        receiverId={selectedReceiverId}\n        currentUser={user}\n        userProfile={profile}\n      />\n\n      <PropertyModal\n        isOpen={isPropertyModalOpen}\n        onClose={() => {\n          setIsPropertyModalOpen(false);\n          setTimeout(() => setSelectedProperty(null), 300);\n        }}\n        property={selectedProperty}\n        currentUser={user}\n        userProfile={profile}\n      />\n    </div>\n  );\n};\n\nexport default Home;\n","import React from \"react\";\nimport { Footer } from \"./Footer\";\nimport Header from \"./Header\";\nimport { AuthModal } from \"./AuthModal\";\nimport { useAuth } from \"../lib/auth\";\n\ninterface LayoutProps {\n  children: React.ReactNode;\n}\n\nexport function Layout({ children }: LayoutProps) {\n  const { user, profile, signOut, isLoading } = useAuth();\n  const [isAuthModalOpen, setIsAuthModalOpen] = React.useState(false);\n  const [authMode, setAuthMode] = React.useState<\"signin\" | \"signup\">(\"signin\");\n\n  return (\n    <div className=\"min-h-screen flex flex-col bg-background\">\n      <Header\n        isAuthenticated={!!user}\n        userProfile={profile}\n        onSignIn={() => window.location.href = '/login'}\n        onSignUp={() => window.location.href = '/signup'}\n        onSignOut={signOut}\n      />\n      \n      <main className=\"flex-1\">\n        {children}\n      </main>\n      \n      <Footer />\n\n      <AuthModal\n        isOpen={isAuthModalOpen}\n        onClose={() => setIsAuthModalOpen(false)}\n        defaultMode={authMode}\n      />\n    </div>\n  );\n}\n","import { useState, useEffect } from \"react\";\n\nexport function useBitcoinPrice() {\n  const [btcPrice, setBtcPrice] = useState<number | null>(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const fetchPrice = async () => {\n      try {\n        const response = await fetch(\n          `https://generativelanguage.googleapis.com/v1beta/models/gemini-pro:generateContent?key=${import.meta.env.VITE_GEMINI_API_KEY}`,\n          {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({\n              contents: [\n                {\n                  parts: [\n                    {\n                      text: \"What is the current Bitcoin price in GBP? Return ONLY the number, no text or currency symbols.\",\n                    },\n                  ],\n                },\n              ],\n            }),\n          },\n        );\n\n        const data = await response.json();\n        const priceText = data.candidates[0].content.parts[0].text;\n        const price = parseFloat(priceText.replace(/[^0-9.]/g, \"\"));\n\n        if (!isNaN(price)) {\n          setBtcPrice(price);\n          setLoading(false);\n        }\n      } catch (error) {\n        console.error(\"Error fetching Bitcoin price:\", error);\n      }\n    };\n\n    fetchPrice();\n    const interval = setInterval(fetchPrice, 60000); // Update every minute\n\n    return () => clearInterval(interval);\n  }, []);\n\n  const convertGBPtoBTC = (gbpAmount: number) => {\n    if (!btcPrice) return null;\n    return gbpAmount / btcPrice;\n  };\n\n  return { btcPrice, loading, convertGBPtoBTC };\n}\n","import React from \"react\";\nimport { useBitcoinPrice } from \"../lib/hooks/useBitcoinPrice\";\nimport { Bitcoin } from \"lucide-react\";\n\ninterface BitcoinPriceProps {\n  amount: number;\n}\n\nexport function BitcoinPrice({ amount }: BitcoinPriceProps) {\n  const { btcPrice, loading, convertGBPtoBTC } = useBitcoinPrice();\n  const btcAmount = convertGBPtoBTC(amount);\n\n  if (loading) return <span className=\"text-muted-foreground\">Loading...</span>;\n  if (!btcAmount) return null;\n\n  return (\n    <span className=\"inline-flex items-center gap-1\">\n      <Bitcoin className=\"h-4 w-4 text-[#F7931A]\" />\n      {btcAmount.toFixed(2)}\n    </span>\n  );\n}\n","import { supabase } from './supabase';\n\nexport async function updateUserProfile(\n  userId: string,\n  updates: {\n    role?: 'user' | 'moderator' | 'admin';\n    subscription_tier?: 'free' | 'basic' | 'pro' | 'premium';\n    subscription_status?: 'active' | 'inactive' | 'cancelled';\n  }\n) {\n  try {\n    console.log('Starting profile update for user:', userId);\n    console.log('Updates to apply:', updates);\n\n    // Check if current user is admin\n    const { data: adminProfiles, error: adminCheckError } = await supabase\n      .from('profiles')\n      .select('role')\n      .eq('id', (await supabase.auth.getUser()).data.user?.id);\n\n    if (adminCheckError) {\n      console.error('Admin check error:', adminCheckError);\n      throw adminCheckError;\n    }\n\n    if (!adminProfiles?.length || adminProfiles[0].role !== 'admin') {\n      throw new Error('Unauthorized: Only admins can update user profiles');\n    }\n\n    // First verify the user exists\n    const { data: existingUsers, error: existingError } = await supabase\n      .from('profiles')\n      .select('*')\n      .eq('id', userId);\n\n    if (existingError) {\n      console.error('User verification error:', existingError);\n      throw existingError;\n    }\n\n    if (!existingUsers?.length) {\n      throw new Error('User not found');\n    }\n\n    console.log('Existing user:', existingUsers[0]);\n\n    // Prepare update data\n    const updateData = {\n      ...updates,\n      updated_at: new Date().toISOString()\n    };\n\n    console.log('Applying updates:', updateData);\n\n    // Update profile\n    const { data, error: updateError } = await supabase\n      .from('profiles')\n      .update(updateData)\n      .eq('id', userId)\n      .select();\n\n    if (updateError) {\n      console.error('Profile update error:', updateError);\n      throw updateError;\n    }\n\n    if (!data?.length) {\n      console.error('No data returned from update');\n      throw new Error('Update failed - no data returned');\n    }\n\n    console.log('Profile updated successfully:', data[0]);\n\n    // Only update role in auth metadata if role is being changed\n    if (updates.role) {\n      try {\n        await supabase.auth.admin.updateUserById(userId, {\n          user_metadata: {\n            role: updates.role\n          }\n        });\n        console.log('Auth metadata updated for role change');\n      } catch (error) {\n        console.warn('Failed to update auth metadata (non-critical):', error);\n      }\n    }\n\n    return data[0];\n  } catch (error) {\n    console.error('Error in updateUserProfile:', error);\n    throw error;\n  }\n}\n\nexport async function getAllUsers() {\n  try {\n    // Get all profiles with their subscription data\n    const { data: profiles, error: profilesError } = await supabase\n      .from('profiles')\n      .select(`\n        *,\n        subscription_tier,\n        subscription_status,\n        role\n      `)\n      .order('created_at', { ascending: false });\n\n    if (profilesError) {\n      console.error('Profiles fetch error:', profilesError);\n      throw profilesError;\n    }\n\n    if (!profiles) return [];\n\n    return profiles.map(profile => ({\n      ...profile,\n      role: profile.role || 'user',\n      subscription_tier: profile.subscription_tier || 'free',\n      subscription_status: profile.subscription_status || 'active'\n    }));\n  } catch (error) {\n    console.error('Error fetching users:', error);\n    throw error;\n  }\n} ","import { supabase } from './supabase';\n\nexport interface ScrapedProperty {\n  id: string;\n  title: string;\n  price: number;\n  description: string;\n  location: string;\n  bedrooms: number;\n  bathrooms: number;\n  sqft: number;\n  image_url: string;\n  property_type: string;\n  source_url: string;\n  added_by_user_id: string;\n  is_featured: boolean;\n}\n\nexport interface SearchResults {\n  properties: ScrapedProperty[];\n  totalResults: number;\n  currentPage: number;\n  totalPages: number;\n}\n\n// Use production URL in production, fallback to localhost for development\nconst API_URL = import.meta.env.PROD \n  ? 'https://api.myvge.com'  // Production API URL\n  : 'http://localhost:3001';  // Development URL\n\nexport async function searchProperties(location: string, page = 1): Promise<SearchResults> {\n  try {\n    console.log('Searching properties:', { location, page, apiUrl: API_URL });\n    const response = await fetch(`${API_URL}/api/scrape-properties`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Origin': 'https://myvge.com'\n      },\n      body: JSON.stringify({ location, page }),\n    });\n\n    if (!response.ok) {\n      const error = await response.json();\n      console.error('Server error:', error);\n      throw new Error(error.message || 'Failed to fetch properties');\n    }\n\n    const data = await response.json();\n    console.log('Search results:', data);\n    return data;\n  } catch (error) {\n    console.error('Error searching properties:', error);\n    throw error;\n  }\n}\n\nexport async function importProperties(properties: ScrapedProperty[], userId: string) {\n  try {\n    console.log('Importing properties:', { count: properties.length, userId });\n    const { data, error } = await supabase\n      .from('properties')\n      .insert(\n        properties.map(property => ({\n          ...property,\n          added_by_user_id: userId,\n          created_at: new Date().toISOString(),\n          updated_at: new Date().toISOString(),\n        }))\n      );\n\n    if (error) {\n      console.error('Supabase error:', error);\n      throw error;\n    }\n    \n    console.log('Import successful:', data);\n    return data;\n  } catch (error) {\n    console.error('Error importing properties:', error);\n    throw error;\n  }\n} ","import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nexport interface TextareaProps\n  extends React.TextareaHTMLAttributes<HTMLTextAreaElement> {}\n\nconst Textarea = React.forwardRef<HTMLTextAreaElement, TextareaProps>(\n  ({ className, ...props }, ref) => {\n    return (\n      <textarea\n        className={cn(\n          \"flex min-h-[60px] w-full rounded-md border border-input bg-transparent px-3 py-2 text-sm shadow-sm placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:cursor-not-allowed disabled:opacity-50\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nTextarea.displayName = \"Textarea\"\n\nexport { Textarea }\n","import React, { useState, useEffect } from 'react';\nimport { useAuth } from './auth';\nimport { Button } from '../components/ui/button';\nimport { RefreshCw } from 'lucide-react';\n\ninterface AuthContextCheckerProps {\n  children: React.ReactNode;\n}\n\n// A component that safely checks if the auth context is available\nexport function AuthContextChecker({ children }: AuthContextCheckerProps) {\n  const [hasAuthContext, setHasAuthContext] = useState<boolean>(false);\n  const [isChecking, setIsChecking] = useState<boolean>(true);\n\n  useEffect(() => {\n    checkAuthContext();\n  }, []);\n\n  const checkAuthContext = () => {\n    setIsChecking(true);\n    try {\n      // This will throw an error if auth context isn't available\n      const auth = useAuth();\n      setHasAuthContext(true);\n    } catch (error) {\n      console.error('Auth context not available:', error);\n      setHasAuthContext(false);\n    } finally {\n      setIsChecking(false);\n    }\n  };\n\n  if (isChecking) {\n    return (\n      <div className=\"flex items-center justify-center min-h-[200px]\">\n        <div className=\"text-center\">\n          <div className=\"animate-spin h-8 w-8 border-4 border-primary border-t-transparent rounded-full mx-auto mb-4\"></div>\n          <p className=\"text-muted-foreground\">Checking authentication...</p>\n        </div>\n      </div>\n    );\n  }\n\n  if (!hasAuthContext) {\n    return (\n      <div className=\"flex items-center justify-center min-h-[300px]\">\n        <div className=\"text-center max-w-md p-6 border rounded-lg bg-muted/50\">\n          <h3 className=\"text-lg font-medium mb-2\">Authentication Error</h3>\n          <p className=\"text-muted-foreground mb-4\">\n            Unable to access authentication. This may be due to a temporary issue or your session has expired.\n          </p>\n          <Button \n            variant=\"outline\" \n            onClick={() => {\n              window.location.reload();\n            }}\n            className=\"inline-flex items-center gap-2\"\n          >\n            <RefreshCw className=\"h-4 w-4\" /> Refresh Page\n          </Button>\n        </div>\n      </div>\n    );\n  }\n\n  // Auth context is available, render children\n  return <>{children}</>;\n}\n\n// Component that handles the inner content and safely uses auth context\nexport function createAuthProtectedComponent<P extends object>(\n  Component: React.ComponentType<P>\n): React.FC<P> {\n  return (props: P) => (\n    <AuthContextChecker>\n      <Component {...props} />\n    </AuthContextChecker>\n  );\n} ","import React, { useState, useEffect } from 'react';\nimport { Button } from './ui/button';\nimport { Input } from './ui/input';\nimport { Card, CardHeader, CardTitle, CardDescription, CardContent } from './ui/card';\nimport { Checkbox } from './ui/checkbox';\nimport {\n  Dialog,\n  DialogContent,\n  DialogDescription,\n  DialogHeader,\n  DialogTitle,\n} from './ui/dialog';\nimport { LoadingSpinner } from './ui/loading-spinner';\nimport { useToast } from './ui/use-toast';\nimport { ScrapedProperty, searchProperties, importProperties } from '../lib/propertyScraperService';\nimport { useAuth } from '../lib/auth';\nimport { Badge } from './ui/badge';\nimport { Bed, Bath, Home, MapPin, Upload, CheckCircle2, AlertCircle, Info, RefreshCw } from 'lucide-react';\nimport { Textarea } from './ui/textarea';\nimport { Label } from './ui/label';\nimport { Alert, AlertTitle, AlertDescription } from './ui/alert';\nimport { AuthContextChecker } from '../lib/AuthContextChecker';\n\n// Component that safely uses auth context\nfunction PropertyImporterContent() {\n  const [isOpen, setIsOpen] = useState(false);\n  const [location, setLocation] = useState('');\n  const [isSearching, setIsSearching] = useState(false);\n  const [isImporting, setIsImporting] = useState(false);\n  const [searchResults, setSearchResults] = useState<ScrapedProperty[]>([]);\n  const [selectedProperties, setSelectedProperties] = useState<Set<string>>(new Set());\n  const [currentPage, setCurrentPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(1);\n  const [totalResults, setTotalResults] = useState(0);\n  const [fileData, setFileData] = useState<File | null>(null);\n  const [jsonData, setJsonData] = useState('');\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [importStatus, setImportStatus] = useState<'idle' | 'success' | 'error'>('idle');\n  const [statusMessage, setStatusMessage] = useState('');\n  \n  const { user } = useAuth();\n  const { toast } = useToast();\n\n  // Reset state when modal closes\n  useEffect(() => {\n    if (!isOpen) {\n      setSearchResults([]);\n      setSelectedProperties(new Set());\n      setCurrentPage(1);\n      setTotalPages(1);\n      setTotalResults(0);\n      setLocation('');\n    }\n  }, [isOpen]);\n\n  const handleSearch = async () => {\n    if (!location.trim()) return;\n\n    try {\n      setIsSearching(true);\n      const results = await searchProperties(location, currentPage);\n      setSearchResults(results.properties);\n      setTotalPages(results.totalPages);\n      setTotalResults(results.totalResults);\n      toast({\n        title: \"Properties Found\",\n        description: `Found ${results.totalResults.toLocaleString()} properties in ${location}`,\n      });\n    } catch (error) {\n      toast({\n        variant: \"destructive\",\n        title: \"Error\",\n        description: \"Failed to search properties. Please try again.\",\n      });\n    } finally {\n      setIsSearching(false);\n    }\n  };\n\n  const handleImport = async () => {\n    if (!user?.id || selectedProperties.size === 0) return;\n\n    try {\n      setIsImporting(true);\n      const propertiesToImport = searchResults.filter(p => selectedProperties.has(p.id));\n      await importProperties(propertiesToImport, user.id);\n      \n      toast({\n        title: \"Success\",\n        description: `Imported ${selectedProperties.size} properties successfully`,\n      });\n      setIsOpen(false);\n    } catch (error) {\n      toast({\n        variant: \"destructive\",\n        title: \"Error\",\n        description: \"Failed to import properties. Please try again.\",\n      });\n    } finally {\n      setIsImporting(false);\n    }\n  };\n\n  const toggleProperty = (propertyId: string) => {\n    const newSelected = new Set(selectedProperties);\n    if (newSelected.has(propertyId)) {\n      newSelected.delete(propertyId);\n    } else {\n      newSelected.add(propertyId);\n    }\n    setSelectedProperties(newSelected);\n  };\n\n  const handlePageChange = async (newPage: number) => {\n    setCurrentPage(newPage);\n    await handleSearch();\n  };\n\n  const handleFileChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    if (e.target.files && e.target.files.length > 0) {\n      setFileData(e.target.files[0]);\n      // Reset JSON input when file is selected\n      setJsonData('');\n    }\n  };\n\n  const handleJsonChange = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\n    setJsonData(e.target.value);\n    // Reset file input when JSON is entered\n    setFileData(null);\n  };\n\n  return (\n    <div className=\"container mx-auto px-4 py-8 max-w-4xl\">\n      <div className=\"mb-8\">\n        <h1 className=\"text-3xl font-bold mb-2\">Property Importer</h1>\n        <p className=\"text-muted-foreground\">\n          Import properties from external sources by uploading a JSON file or pasting JSON data.\n        </p>\n      </div>\n      \n      <div className=\"grid gap-6 md:grid-cols-2\">\n        <Card>\n          <CardHeader>\n            <CardTitle>Upload JSON File</CardTitle>\n            <CardDescription>\n              Import properties from a JSON file\n            </CardDescription>\n          </CardHeader>\n          <CardContent>\n            <div className=\"space-y-4\">\n              <div className=\"border-2 border-dashed border-muted-foreground/25 rounded-lg p-6 text-center hover:bg-muted/50 transition-colors\">\n                <Upload className=\"h-10 w-10 text-muted-foreground mx-auto mb-4\" />\n                <p className=\"text-sm text-muted-foreground mb-2\">\n                  Drag and drop a JSON file here, or click to browse\n                </p>\n                <Input\n                  type=\"file\"\n                  accept=\".json\"\n                  onChange={handleFileChange}\n                  className=\"hidden\"\n                  id=\"file-upload\"\n                />\n                <Label htmlFor=\"file-upload\" className=\"cursor-pointer\">\n                  <Button variant=\"outline\" type=\"button\">Browse Files</Button>\n                </Label>\n              </div>\n              \n              {fileData && (\n                <div className=\"bg-muted p-3 rounded text-sm\">\n                  <p className=\"font-medium mb-1\">Selected file:</p>\n                  <p className=\"text-muted-foreground\">{fileData.name} ({Math.round(fileData.size / 1024)} KB)</p>\n                </div>\n              )}\n            </div>\n          </CardContent>\n        </Card>\n        \n        <Card>\n          <CardHeader>\n            <CardTitle>Paste JSON Data</CardTitle>\n            <CardDescription>\n              Paste your JSON data directly\n            </CardDescription>\n          </CardHeader>\n          <CardContent>\n            <div className=\"space-y-4\">\n              <Textarea\n                placeholder='{\"properties\": [{\"address\": \"123 Main St\", \"price\": 250000, ...}]}'\n                rows={8}\n                value={jsonData}\n                onChange={handleJsonChange}\n                className=\"font-mono text-sm\"\n              />\n              <p className=\"text-xs text-muted-foreground\">\n                JSON must be properly formatted and contain property data.\n              </p>\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n      \n      <div className=\"mt-8 flex justify-end\">\n        <Button \n          onClick={handleImport} \n          disabled={isSubmitting || (!fileData && !jsonData)}\n          className=\"px-8\"\n        >\n          {isSubmitting ? 'Importing...' : 'Import Properties'}\n        </Button>\n      </div>\n      \n      {importStatus !== 'idle' && (\n        <Alert \n          variant={importStatus === 'success' ? 'default' : 'destructive'} \n          className=\"mt-6\"\n        >\n          {importStatus === 'success' ? (\n            <CheckCircle2 className=\"h-4 w-4\" />\n          ) : (\n            <AlertCircle className=\"h-4 w-4\" />\n          )}\n          <AlertTitle>\n            {importStatus === 'success' ? 'Import Successful' : 'Import Failed'}\n          </AlertTitle>\n          <AlertDescription>{statusMessage}</AlertDescription>\n        </Alert>\n      )}\n      \n      <Card className=\"mt-8\">\n        <CardHeader>\n          <CardTitle className=\"flex items-center gap-2\">\n            <Info className=\"h-5 w-5\" />\n            Import Format Guidelines\n          </CardTitle>\n        </CardHeader>\n        <CardContent>\n          <div className=\"space-y-4\">\n            <p className=\"text-sm text-muted-foreground\">\n              Your JSON data should follow this structure:\n            </p>\n            <pre className=\"bg-muted p-4 rounded-md text-xs overflow-auto\">\n{`{\n  \"properties\": [\n    {\n      \"address\": \"123 Main Street, London, E1 6AN\",\n      \"price\": 450000,\n      \"type\": \"flat\",\n      \"bedrooms\": 2,\n      \"bathrooms\": 1,\n      \"size_sqft\": 750,\n      \"description\": \"A spacious 2 bedroom flat...\",\n      \"images\": [\"image1.jpg\", \"image2.jpg\"]\n    },\n    {\n      // Additional properties...\n    }\n  ]\n}`}\n            </pre>\n            <p className=\"text-sm text-muted-foreground\">\n              You can also import a simple array of property objects.\n            </p>\n          </div>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n\n// Main component that handles auth context checking\nexport function PropertyImporter() {\n  return (\n    <AuthContextChecker>\n      <PropertyImporterContent />\n    </AuthContextChecker>\n  );\n} ","import React from \"react\";\nimport { useAuth } from \"../lib/auth\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Button } from \"./ui/button\";\nimport { Card, CardContent } from \"./ui/card\";\nimport {\n  Building2,\n  Star,\n  TrendingUp,\n  PoundSterling,\n  Users,\n  Bitcoin,\n} from \"lucide-react\";\nimport { getSavedProperties } from \"../lib/properties\";\nimport { PropertyCard } from \"./PropertyCard\";\nimport { supabase } from \"../lib/supabase\";\nimport { Layout } from \"./Layout\";\nimport { BitcoinPrice } from \"./BitcoinPrice\";\nimport { updateUserProfile, getAllUsers } from '../lib/users';\nimport { PropertyImporter } from './PropertyImporter';\n\nexport default function Dashboard() {\n  const { user, profile } = useAuth();\n  const navigate = useNavigate();\n  const [savedProperties, setSavedProperties] = React.useState<any[]>([]);\n  const [addedProperties, setAddedProperties] = React.useState<any[]>([]);\n  const [users, setUsers] = React.useState<any[]>([]);\n  const [portfolioStats, setPortfolioStats] = React.useState({\n    totalProperties: 0,\n    totalValue: 0,\n    averagePrice: 0,\n    totalProfit: 0,\n    monthlyIncome: 0,\n  });\n  const [isLoading, setIsLoading] = React.useState(true);\n  const [error, setError] = React.useState<string | null>(null);\n\n  const loadUsers = React.useCallback(async () => {\n    if (!user || profile?.role !== \"admin\") return;\n    try {\n      const data = await getAllUsers();\n      setUsers(data);\n    } catch (error) {\n      console.error('Error loading users:', error);\n      setError('Failed to load users');\n    } finally {\n      setIsLoading(false);\n    }\n  }, [user, profile]);\n\n  const handleUserUpdate = async (userId: string, updates: any) => {\n    try {\n      setIsLoading(true);\n      console.log('Attempting to update user:', userId);\n      console.log('Updates:', updates);\n\n      const updatedProfile = await updateUserProfile(userId, updates);\n      console.log('Update successful:', updatedProfile);\n\n      // Refresh the users list\n      const updatedUsers = await getAllUsers();\n      setUsers(updatedUsers);\n      \n      alert('User updated successfully');\n    } catch (error: any) {\n      console.error('Error updating user:', error);\n      alert(error.message || 'Failed to update user. Please check console for details.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const loadProperties = React.useCallback(async () => {\n    if (!user) return;\n    try {\n      const [saved, { data: added }] = await Promise.all([\n        getSavedProperties(user.id),\n        supabase\n          .from(\"properties\")\n          .select(\n            `*,\n            assigned_user:profiles!properties_assigned_user_id_fkey(full_name, email),\n            author:profiles!properties_created_by_fkey(full_name, email)`,\n          )\n          .eq(\"created_by\", user.id),\n      ]);\n\n      setAddedProperties(added || []);\n      setSavedProperties(saved);\n\n      // Calculate portfolio stats\n      const totalProperties = (added || []).length + saved.length;\n      const totalValue = [...(added || []), ...saved].reduce(\n        (sum, prop) => sum + (prop.price || 0),\n        0,\n      );\n      const averagePrice = totalValue / (totalProperties || 1);\n      const totalProfit = [...(added || []), ...saved].reduce(\n        (sum, prop) => sum + (prop.potential_profit || 0),\n        0,\n      );\n      const monthlyIncome = [...(added || []), ...saved].reduce(\n        (sum, prop) => sum + (prop.monthly_income || 0),\n        0,\n      );\n\n      setPortfolioStats({\n        totalProperties,\n        totalValue,\n        averagePrice,\n        totalProfit,\n        monthlyIncome,\n      });\n    } catch (error) {\n      console.error(\"Error loading properties:\", error);\n    }\n  }, [user]);\n\n  React.useEffect(() => {\n    if (!user) {\n      navigate(\"/\");\n      return;\n    }\n    loadProperties();\n    loadUsers();\n  }, [user, navigate, loadProperties, loadUsers]);\n\n  if (!user) {\n    navigate(\"/\");\n    return null;\n  }\n\n  return (\n    <Layout>\n      <main className=\"container mx-auto px-4 py-8 pt-24\">\n        <div className=\"max-w-7xl mx-auto space-y-8\">\n          <div className=\"flex items-center justify-between\">\n            <h1 className=\"text-3xl font-bold\">Dashboard</h1>\n            <PropertyImporter />\n          </div>\n\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\n            <Card>\n              <CardContent className=\"p-6\">\n                <div className=\"flex items-center justify-between mb-4\">\n                  <h3 className=\"text-lg font-semibold\">Portfolio Value</h3>\n                  <PoundSterling className=\"w-5 h-5 text-primary\" />\n                </div>\n                <p className=\"text-3xl font-bold\">\n                  £{portfolioStats.totalValue.toLocaleString()}\n                </p>\n                <p className=\"text-sm text-muted-foreground mt-2\">\n                  {portfolioStats.totalProperties} properties\n                </p>\n              </CardContent>\n            </Card>\n\n            <Card>\n              <CardContent className=\"p-6\">\n                <div className=\"flex items-center justify-between mb-4\">\n                  <h3 className=\"text-lg font-semibold\">Average Price</h3>\n                  <Building2 className=\"w-5 h-5 text-primary\" />\n                </div>\n                <p className=\"text-3xl font-bold\">\n                  £{portfolioStats.averagePrice.toLocaleString()}\n                </p>\n                <p className=\"text-sm text-muted-foreground mt-2\">\n                  Per property\n                </p>\n              </CardContent>\n            </Card>\n\n            <Card>\n              <CardContent className=\"p-6\">\n                <div className=\"flex items-center justify-between mb-4\">\n                  <h3 className=\"text-lg font-semibold\">Total Profit</h3>\n                  <TrendingUp className=\"w-5 h-5 text-primary\" />\n                </div>\n                <p className=\"text-3xl font-bold\">\n                  £{portfolioStats.totalProfit.toLocaleString()}\n                </p>\n                <p className=\"text-sm text-muted-foreground mt-2\">\n                  Estimated profit\n                </p>\n              </CardContent>\n            </Card>\n\n            <Card>\n              <CardContent className=\"p-6\">\n                <div className=\"flex items-center justify-between mb-4\">\n                  <h3 className=\"text-lg font-semibold\">BTC Value</h3>\n                  <Bitcoin className=\"w-5 h-5 text-[#F7931A]\" />\n                </div>\n                <BitcoinPrice amount={portfolioStats.totalValue} />\n                <p className=\"text-sm text-muted-foreground mt-2\">\n                  Portfolio in BTC\n                </p>\n              </CardContent>\n            </Card>\n          </div>\n\n          {profile?.role === 'admin' && (\n            <div className=\"space-y-6\">\n              <div className=\"flex justify-between items-center mb-4\">\n                <h2 className=\"text-2xl font-semibold flex items-center gap-2\">\n                  <Users className=\"w-5 h-5\" /> User Management\n                </h2>\n              </div>\n              {error && <div className=\"text-red-500 mb-4\">{error}</div>}\n              {isLoading ? (\n                <div>Loading...</div>\n              ) : (\n                <div className=\"grid gap-4\">\n                  {users.map((user) => (\n                    <div key={user.id} className=\"border p-4 rounded-lg\">\n                      <div className=\"flex justify-between items-center\">\n                        <div>\n                          <p className=\"font-semibold\">{user.full_name}</p>\n                          <p className=\"text-sm text-gray-600\">{user.email}</p>\n                        </div>\n                        <div className=\"flex gap-2\">\n                          <select\n                            value={user.role}\n                            onChange={(e) => handleUserUpdate(user.id, { role: e.target.value })}\n                            className=\"border rounded p-1\"\n                          >\n                            <option value=\"user\">User</option>\n                            <option value=\"moderator\">Moderator</option>\n                            <option value=\"admin\">Admin</option>\n                          </select>\n                          <select\n                            value={user.subscription_tier}\n                            onChange={(e) => handleUserUpdate(user.id, { subscription_tier: e.target.value })}\n                            className=\"border rounded p-1\"\n                          >\n                            <option value=\"free\">Free</option>\n                            <option value=\"basic\">Basic</option>\n                            <option value=\"pro\">Pro</option>\n                            <option value=\"premium\">Premium</option>\n                          </select>\n                        </div>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              )}\n            </div>\n          )}\n\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\n            <div className=\"space-y-6\">\n              <h2 className=\"text-2xl font-semibold flex items-center gap-2\">\n                <Star className=\"w-5 h-5\" /> Saved Properties\n              </h2>\n              <div className=\"space-y-4\">\n                {savedProperties.map((saved: any) => (\n                  <PropertyCard\n                    key={saved.property.id}\n                    {...saved.property}\n                    isSubscriber={profile?.subscription_tier !== 'free'}\n                  />\n                ))}\n              </div>\n            </div>\n\n            <div className=\"space-y-6\">\n              <h2 className=\"text-2xl font-semibold flex items-center gap-2\">\n                <Building2 className=\"w-5 h-5\" /> Added Properties\n              </h2>\n              <div className=\"space-y-4\">\n                {addedProperties.map((property: any) => (\n                  <PropertyCard\n                    key={property.id}\n                    {...property}\n                    isSubscriber={profile?.subscription_tier !== 'free'}\n                  />\n                ))}\n              </div>\n            </div>\n          </div>\n        </div>\n      </main>\n    </Layout>\n  );\n}\n","import React from \"react\";\nimport { Card, CardContent, CardFooter, CardHeader } from \"./ui/card\";\nimport { Button } from \"./ui/button\";\nimport { Check, Crown } from \"lucide-react\";\nimport { SUBSCRIPTION_TIERS } from \"../lib/stripe\";\nimport { useAuth } from \"../lib/auth\";\n\ninterface SubscriptionPlansProps {\n  onSubscribe: (priceId: string) => void;\n}\n\nexport function SubscriptionPlans({ onSubscribe }: SubscriptionPlansProps) {\n  const { profile } = useAuth();\n  const currentTier = profile?.subscription_tier || \"free\";\n\n  return (\n    <div className=\"py-16 bg-background\">\n      <div className=\"container mx-auto px-4\">\n        <div className=\"text-center mb-12\">\n          <h2 className=\"text-3xl font-bold mb-4\">Choose Your Plan</h2>\n          <p className=\"text-gray-600 max-w-2xl mx-auto\">\n            Select the perfect plan for your property investment journey\n          </p>\n        </div>\n\n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-8 max-w-7xl mx-auto\">\n          {Object.entries(SUBSCRIPTION_TIERS).map(([key, tier]) => (\n            <Card\n              key={key}\n              className={`relative ${key === \"PRO\" ? \"border-primary shadow-lg scale-105 bg-gradient-to-r from-emerald-400/10 to-cyan-400/10\" : \"\"}`}\n            >\n              {key === \"PRO\" && (\n                <div className=\"absolute -top-4 left-1/2 -translate-x-1/2 bg-gradient-to-r from-emerald-400 to-cyan-400 text-white px-4 py-1 rounded-full text-sm font-medium border border-emerald-500/20 shadow-lg\">\n                  Most Popular\n                </div>\n              )}\n\n              <CardHeader>\n                <div className=\"flex items-center justify-between\">\n                  <h3 className=\"text-2xl font-bold\">{tier.name}</h3>\n                  {key === \"PREMIUM\" && (\n                    <Crown className=\"h-6 w-6 text-yellow-500\" />\n                  )}\n                </div>\n                <div className=\"mt-4\">\n                  <span className=\"text-4xl font-bold\">{tier.price}</span>\n                  <span className=\"text-gray-600 ml-2\">/month</span>\n                </div>\n              </CardHeader>\n\n              <CardContent>\n                <ul className=\"space-y-3\">\n                  {tier.features.map((feature, index) => (\n                    <li key={index} className=\"flex items-start gap-3\">\n                      <Check className=\"h-5 w-5 text-green-500 mt-0.5\" />\n                      <span>{feature}</span>\n                    </li>\n                  ))}\n                </ul>\n              </CardContent>\n\n              <CardFooter>\n                <Button\n                  className=\"w-full\"\n                  variant={key === \"PRO\" ? \"default\" : \"outline\"}\n                  onClick={() => onSubscribe(tier.priceId)}\n                  disabled={currentTier === key.toLowerCase()}\n                >\n                  {currentTier === key.toLowerCase()\n                    ? \"Current Plan\"\n                    : \"Subscribe\"}\n                </Button>\n              </CardFooter>\n            </Card>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport Header from \"./Header\";\nimport HeroSection from \"./HeroSection\";\nimport { SubscriptionPlans } from \"./SubscriptionPlans\";\nimport { createCheckoutSession } from \"../lib/stripe\";\nimport { useAuth } from \"../lib/auth\";\nimport { useToast } from \"./ui/use-toast\";\nimport { LegalDisclaimer } from \"./LegalDisclaimer\";\nimport { Footer } from \"./Footer\";\nimport { AuthModal } from \"./AuthModal\";\n\nexport default function PricingPage() {\n  const { user, profile, signOut } = useAuth();\n  const { toast } = useToast();\n  const [isAuthModalOpen, setIsAuthModalOpen] = React.useState(false);\n  const [authMode, setAuthMode] = React.useState<\"signin\" | \"signup\">(\"signin\");\n\n  const handleSubscribe = async (priceId: string) => {\n    if (!user) {\n      // Store the selected price ID in localStorage\n      localStorage.setItem(\"pending_subscription_price_id\", priceId);\n\n      // Trigger sign up modal\n      setAuthMode(\"signup\");\n      setIsAuthModalOpen(true);\n      return;\n    }\n\n    try {\n      await createCheckoutSession(priceId, user.id);\n    } catch (error) {\n      toast({\n        title: \"Error\",\n        description: \"Failed to start subscription process. Please try again.\",\n        variant: \"destructive\",\n      });\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen bg-background\">\n      <Header\n        isAuthenticated={!!user}\n        userProfile={profile || undefined}\n        onSignIn={() => {\n          setAuthMode(\"signin\");\n          setIsAuthModalOpen(true);\n        }}\n        onSignUp={() => {\n          setAuthMode(\"signup\");\n          setIsAuthModalOpen(true);\n        }}\n        onSignOut={async () => {\n          try {\n            await signOut();\n            window.location.href = \"/\";\n          } catch (error) {\n            console.error(\"Error signing out:\", error);\n          }\n        }}\n      />\n      <HeroSection\n        title=\"Choose Your Perfect Plan\"\n        subtitle=\"Select the perfect subscription plan to unlock premium features and detailed property insights\"\n        backgroundImage=\"https://images.unsplash.com/photo-1454165804606-c3d57bc86b40?ixlib=rb-4.0.3\"\n        showSearch={false}\n        showStats={false}\n        height=\"h-[400px]\"\n      />\n      <main>\n        <SubscriptionPlans onSubscribe={handleSubscribe} />\n        <div className=\"container mx-auto px-4 py-12\">\n          <div className=\"max-w-4xl mx-auto prose dark:prose-invert mb-16\">\n            <h2 className=\"text-3xl font-bold mb-6\">\n              Investment Plans for Every Property Investor\n            </h2>\n            <p>\n              Choose from our range of subscription plans designed to meet the\n              needs of property investors at every level. From market analysis\n              to detailed property insights, our plans provide the tools you\n              need to make informed investment decisions.\n            </p>\n\n            <h3 className=\"text-2xl font-semibold mt-8 mb-4\">Plan Benefits</h3>\n            <ul>\n              <li>\n                Access to comprehensive property market data and analytics\n              </li>\n              <li>Real-time market insights and trend analysis</li>\n              <li>Advanced property search and filtering capabilities</li>\n              <li>Investment calculators and ROI projections</li>\n              <li>Portfolio tracking and management tools</li>\n            </ul>\n\n            <h3 className=\"text-2xl font-semibold mt-8 mb-4\">Why Subscribe?</h3>\n            <p>\n              Our subscription plans give you access to premium features and\n              insights that help you stay ahead in the property market. From\n              basic market analysis to advanced AI-powered predictions, we\n              provide the tools you need to make successful property\n              investments.\n            </p>\n\n            <h3 className=\"text-2xl font-semibold mt-8 mb-4\">\n              Money-Back Guarantee\n            </h3>\n            <p>\n              We're confident in the value our platform provides. If you're not\n              satisfied with your subscription within the first 30 days, we'll\n              provide a full refund, no questions asked.\n            </p>\n          </div>\n          <LegalDisclaimer />\n        </div>\n      </main>\n      <Footer />\n\n      <AuthModal\n        isOpen={isAuthModalOpen}\n        onClose={() => setIsAuthModalOpen(false)}\n        defaultMode={authMode}\n      />\n    </div>\n  );\n}\n","import React from \"react\";\nimport {\n  Dialog,\n  DialogContent,\n  DialogDescription,\n  DialogHeader,\n  DialogTitle,\n} from \"./ui/dialog\";\nimport { Button } from \"./ui/button\";\nimport { Input } from \"./ui/input\";\nimport { Label } from \"./ui/label\";\nimport { useToast } from \"./ui/use-toast\";\nimport { supabase } from \"../lib/supabase\";\nimport { useAuth } from \"../lib/auth\";\n\nexport function OnboardingModal(props) {\n  const [step, setStep] = React.useState(0);\n  const [loading, setLoading] = React.useState(false);\n  const { user } = useAuth();\n  const { toast } = useToast();\n  const [formData, setFormData] = React.useState({\n    profileImage: \"\",\n    bannerImage: \"\",\n    selectedWidgets: [],\n  });\n\n  const handleComplete = async () => {\n    if (!user) return;\n    setLoading(true);\n\n    try {\n      const { error } = await supabase\n        .from(\"profiles\")\n        .update({\n          avatar_url:\n            formData.profileImage ||\n            `https://api.dicebear.com/7.x/avataaars/svg?seed=${user.email}`,\n          banner_url:\n            formData.bannerImage ||\n            \"https://images.unsplash.com/photo-1486406146926-c627a92ad1ab\",\n          dashboard_widgets: formData.selectedWidgets,\n          onboarding_completed: true,\n        })\n        .eq(\"id\", user.id);\n\n      if (error) throw error;\n\n      toast({\n        title: \"Setup Complete!\",\n        description: \"Your profile has been updated successfully.\",\n      });\n      props.onClose();\n    } catch (error) {\n      toast({\n        title: \"Error\",\n        description: \"Failed to update profile. Please try again.\",\n        variant: \"destructive\",\n      });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const steps = [\n    {\n      title: \"Profile Image\",\n      description: \"Add a profile image to personalize your account\",\n      component: (\n        <div className=\"space-y-4\">\n          <div className=\"space-y-2\">\n            <Label>Profile Image URL</Label>\n            <Input\n              placeholder=\"Enter image URL or leave blank for default avatar\"\n              value={formData.profileImage}\n              onChange={(e) =>\n                setFormData((prev) => ({\n                  ...prev,\n                  profileImage: e.target.value,\n                }))\n              }\n            />\n          </div>\n          {formData.profileImage && (\n            <img\n              src={formData.profileImage}\n              alt=\"Profile Preview\"\n              className=\"w-24 h-24 rounded-full object-cover mx-auto\"\n            />\n          )}\n        </div>\n      ),\n    },\n    {\n      title: \"Dashboard Banner\",\n      description: \"Choose a banner image for your dashboard\",\n      component: (\n        <div className=\"space-y-4\">\n          <div className=\"space-y-2\">\n            <Label>Banner Image URL</Label>\n            <Input\n              placeholder=\"Enter banner image URL or leave blank for default\"\n              value={formData.bannerImage}\n              onChange={(e) =>\n                setFormData((prev) => ({\n                  ...prev,\n                  bannerImage: e.target.value,\n                }))\n              }\n            />\n          </div>\n          {formData.bannerImage && (\n            <img\n              src={formData.bannerImage}\n              alt=\"Banner Preview\"\n              className=\"w-full h-32 object-cover rounded-md\"\n            />\n          )}\n        </div>\n      ),\n    },\n    {\n      title: \"Dashboard Widgets\",\n      description: \"Select the widgets you want to see on your dashboard\",\n      component: (\n        <div className=\"space-y-4\">\n          <div className=\"grid grid-cols-2 gap-4\">\n            {[\n              \"market_trends\",\n              \"property_news\",\n              \"saved_properties\",\n              \"price_alerts\",\n              \"market_insights\",\n              \"investment_calculator\",\n            ].map((widget) => (\n              <Button\n                key={widget}\n                variant={\n                  formData.selectedWidgets.includes(widget)\n                    ? \"default\"\n                    : \"outline\"\n                }\n                onClick={() =>\n                  setFormData((prev) => ({\n                    ...prev,\n                    selectedWidgets: prev.selectedWidgets.includes(widget)\n                      ? prev.selectedWidgets.filter((w) => w !== widget)\n                      : [...prev.selectedWidgets, widget],\n                  }))\n                }\n                className=\"h-auto py-4 px-6 text-left flex flex-col items-start space-y-2\"\n              >\n                <span className=\"font-medium capitalize\">\n                  {widget.replace(\"_\", \" \")}\n                </span>\n              </Button>\n            ))}\n          </div>\n        </div>\n      ),\n    },\n  ];\n\n  return (\n    <Dialog open={props.isOpen} onOpenChange={props.onClose}>\n      <DialogContent className=\"sm:max-w-[600px]\">\n        <DialogHeader>\n          <DialogTitle>{steps[step].title}</DialogTitle>\n          <DialogDescription>{steps[step].description}</DialogDescription>\n        </DialogHeader>\n\n        <div className=\"py-6\">{steps[step].component}</div>\n\n        <div className=\"flex justify-between\">\n          <Button\n            variant=\"outline\"\n            onClick={() => setStep((s) => Math.max(0, s - 1))}\n            disabled={step === 0}\n          >\n            Previous\n          </Button>\n          <Button\n            onClick={() => {\n              if (step === steps.length - 1) {\n                handleComplete();\n              } else {\n                setStep((s) => Math.min(steps.length - 1, s + 1));\n              }\n            }}\n            disabled={loading}\n          >\n            {step === steps.length - 1 ? \"Complete Setup\" : \"Next\"}\n          </Button>\n        </div>\n      </DialogContent>\n    </Dialog>\n  );\n}\n","import { useEffect, useState } from \"react\";\nimport { useNavigate, useSearchParams } from \"react-router-dom\";\nimport { useToast } from \"./ui/use-toast\";\nimport { useAuth } from \"../lib/auth\";\nimport { OnboardingModal } from \"./OnboardingModal\";\n\nexport default function SubscriptionSuccess() {\n  const navigate = useNavigate();\n  const [searchParams] = useSearchParams();\n  const { toast } = useToast();\n  const { user } = useAuth();\n  const [showOnboarding, setShowOnboarding] = useState(true);\n\n  useEffect(() => {\n    const sessionId = searchParams.get(\"session_id\");\n    if (sessionId) {\n      toast({\n        title: \"Subscription Successful!\",\n        description:\n          \"Thank you for subscribing. Your premium features are now available.\",\n      });\n    }\n\n    // Only redirect if onboarding is skipped or completed\n    if (!showOnboarding) {\n      navigate(\"/dashboard\");\n    }\n  }, [showOnboarding, navigate, searchParams, toast]);\n\n  return (\n    <>\n      <div className=\"min-h-screen bg-gray-50 flex items-center justify-center\">\n        <div className=\"max-w-md w-full mx-auto p-8\">\n          <div className=\"bg-white shadow-lg rounded-lg p-6 text-center\">\n            <div className=\"w-16 h-16 bg-green-100 rounded-full flex items-center justify-center mx-auto mb-4\">\n              <svg\n                className=\"w-8 h-8 text-green-500\"\n                fill=\"none\"\n                stroke=\"currentColor\"\n                viewBox=\"0 0 24 24\"\n              >\n                <path\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  strokeWidth={2}\n                  d=\"M5 13l4 4L19 7\"\n                />\n              </svg>\n            </div>\n            <h2 className=\"text-2xl font-bold text-gray-900 mb-2\">\n              Subscription Successful!\n            </h2>\n            <p className=\"text-gray-600 mb-4\">\n              Thank you for subscribing. Your premium features are now\n              available.\n            </p>\n            <p className=\"text-sm text-gray-500\">\n              Setting up your preferences...\n            </p>\n          </div>\n        </div>\n      </div>\n\n      <OnboardingModal\n        isOpen={showOnboarding}\n        onClose={() => {\n          setShowOnboarding(false);\n          navigate(\"/dashboard\");\n        }}\n      />\n    </>\n  );\n}\n","import { useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useToast } from \"./ui/use-toast\";\n\nexport default function SubscriptionCancel() {\n  const navigate = useNavigate();\n  const { toast } = useToast();\n\n  useEffect(() => {\n    toast({\n      title: \"Subscription Cancelled\",\n      description:\n        \"Your subscription process was cancelled. Please try again if this was a mistake.\",\n      variant: \"destructive\",\n    });\n\n    // Redirect to home after a short delay\n    const timer = setTimeout(() => {\n      navigate(\"/\");\n    }, 3000);\n\n    return () => clearTimeout(timer);\n  }, []);\n\n  return (\n    <div className=\"min-h-screen bg-gray-50 flex items-center justify-center\">\n      <div className=\"max-w-md w-full mx-auto p-8\">\n        <div className=\"bg-white shadow-lg rounded-lg p-6 text-center\">\n          <div className=\"w-16 h-16 bg-red-100 rounded-full flex items-center justify-center mx-auto mb-4\">\n            <svg\n              className=\"w-8 h-8 text-red-500\"\n              fill=\"none\"\n              stroke=\"currentColor\"\n              viewBox=\"0 0 24 24\"\n            >\n              <path\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                strokeWidth={2}\n                d=\"M6 18L18 6M6 6l12 12\"\n              />\n            </svg>\n          </div>\n          <h2 className=\"text-2xl font-bold text-gray-900 mb-2\">\n            Subscription Cancelled\n          </h2>\n          <p className=\"text-gray-600 mb-4\">\n            Your subscription process was cancelled. Please try again if this\n            was a mistake.\n          </p>\n          <p className=\"text-sm text-gray-500\">\n            Redirecting you to the homepage...\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React, { useState } from 'react';\nimport { Button } from './ui/button';\nimport { Avatar, AvatarFallback, AvatarImage } from './ui/avatar';\nimport { useToast } from './ui/use-toast';\n\ninterface AvatarUploadProps {\n  currentAvatarUrl?: string;\n  onUpload: (file: File) => Promise<void>;\n  userInitials: string;\n}\n\nconst MAX_FILE_SIZE = 5 * 1024 * 1024; // 5MB\nconst ALLOWED_FILE_TYPES = ['image/jpeg', 'image/png', 'image/webp'];\n\nexport function AvatarUpload({ currentAvatarUrl, onUpload, userInitials }: AvatarUploadProps) {\n  const [isUploading, setIsUploading] = useState(false);\n  const { toast } = useToast();\n  const fileInputRef = React.useRef<HTMLInputElement>(null);\n\n  const handleFileSelect = async (event: React.ChangeEvent<HTMLInputElement>) => {\n    const file = event.target.files?.[0];\n    if (!file) return;\n\n    // Validate file size\n    if (file.size > MAX_FILE_SIZE) {\n      toast({\n        title: \"File too large\",\n        description: \"Please select an image under 5MB\",\n        variant: \"destructive\"\n      });\n      return;\n    }\n\n    // Validate file type\n    if (!ALLOWED_FILE_TYPES.includes(file.type)) {\n      toast({\n        title: \"Invalid file type\",\n        description: \"Please select a JPEG, PNG or WebP image\",\n        variant: \"destructive\"\n      });\n      return;\n    }\n\n    try {\n      setIsUploading(true);\n      await onUpload(file);\n      toast({\n        title: \"Success\",\n        description: \"Profile picture updated successfully\"\n      });\n    } catch (error) {\n      console.error('Error uploading avatar:', error);\n      toast({\n        title: \"Upload failed\",\n        description: \"Failed to update profile picture. Please try again.\",\n        variant: \"destructive\"\n      });\n    } finally {\n      setIsUploading(false);\n    }\n  };\n\n  return (\n    <div className=\"flex flex-col items-center gap-4\">\n      <Avatar className=\"h-24 w-24\">\n        <AvatarImage src={currentAvatarUrl} />\n        <AvatarFallback>{userInitials}</AvatarFallback>\n      </Avatar>\n      <input\n        type=\"file\"\n        ref={fileInputRef}\n        className=\"hidden\"\n        accept={ALLOWED_FILE_TYPES.join(',')}\n        onChange={handleFileSelect}\n      />\n      <Button \n        variant=\"outline\" \n        onClick={() => fileInputRef.current?.click()}\n        disabled={isUploading}\n      >\n        {isUploading ? 'Uploading...' : 'Change Profile Picture'}\n      </Button>\n      <p className=\"text-sm text-muted-foreground\">\n        Maximum file size: 5MB. Supported formats: JPEG, PNG, WebP\n      </p>\n    </div>\n  );\n} ","import React, { useState } from 'react';\nimport { useAuth } from '../lib/auth';\nimport { Layout } from './Layout';\nimport { Button } from './ui/button';\nimport { Input } from './ui/input';\nimport { Label } from './ui/label';\nimport { Card, CardContent, CardHeader, CardTitle } from './ui/card';\nimport { AvatarUpload } from './AvatarUpload';\nimport { supabase } from '../lib/supabase';\nimport { useToast } from './ui/use-toast';\n\nexport default function AccountSettings() {\n  const { user, profile } = useAuth();\n  const { toast } = useToast();\n  const [isLoading, setIsLoading] = useState(false);\n  const [formData, setFormData] = useState({\n    fullName: profile?.full_name || '',\n    currentPassword: '',\n    newPassword: '',\n    confirmPassword: '',\n  });\n\n  const handleAvatarUpload = async (file: File) => {\n    if (!user) return;\n\n    try {\n      // Create a unique file name\n      const fileExt = file.name.split('.').pop();\n      const fileName = `${user.id}-${Date.now()}.${fileExt}`;\n      const filePath = `${user.id}/${fileName}`;\n\n      // Upload the file to Supabase storage\n      const { error: uploadError, data } = await supabase.storage\n        .from('avatars')\n        .upload(filePath, file, {\n          cacheControl: '3600',\n          upsert: true\n        });\n\n      if (uploadError) {\n        console.error('Upload error:', uploadError);\n        throw uploadError;\n      }\n\n      // Get the public URL\n      const {\n        data: { publicUrl },\n      } = supabase.storage\n        .from('avatars')\n        .getPublicUrl(filePath);\n\n      console.log('File uploaded, public URL:', publicUrl);\n\n      // Update the user's profile with the new avatar URL\n      const { error: updateError } = await supabase\n        .from('profiles')\n        .update({\n          avatar_url: publicUrl,\n          updated_at: new Date().toISOString()\n        })\n        .eq('id', user.id);\n\n      if (updateError) {\n        console.error('Profile update error:', updateError);\n        throw updateError;\n      }\n\n      // Verify the update\n      const { data: updatedProfile, error: verifyError } = await supabase\n        .from('profiles')\n        .select('avatar_url')\n        .eq('id', user.id)\n        .single();\n\n      if (verifyError) {\n        console.error('Verification error:', verifyError);\n        throw verifyError;\n      }\n\n      console.log('Profile updated with new avatar:', updatedProfile);\n\n      // Force a page refresh to show the new avatar\n      window.location.reload();\n\n    } catch (error) {\n      console.error('Error in handleAvatarUpload:', error);\n      throw error;\n    }\n  };\n\n  const handleUpdateProfile = async (e: React.FormEvent) => {\n    e.preventDefault();\n    if (!user) return;\n\n    try {\n      setIsLoading(true);\n\n      // Update full name\n      if (formData.fullName !== profile?.full_name) {\n        const { error: updateError } = await supabase\n          .from('profiles')\n          .update({ full_name: formData.fullName })\n          .eq('id', user.id);\n\n        if (updateError) throw updateError;\n      }\n\n      // Update password if provided\n      if (formData.newPassword) {\n        if (formData.newPassword !== formData.confirmPassword) {\n          throw new Error('New passwords do not match');\n        }\n\n        const { error: passwordError } = await supabase.auth.updateUser({\n          password: formData.newPassword\n        });\n\n        if (passwordError) throw passwordError;\n      }\n\n      toast({\n        title: \"Success\",\n        description: \"Profile updated successfully\"\n      });\n\n      // Clear password fields\n      setFormData(prev => ({\n        ...prev,\n        currentPassword: '',\n        newPassword: '',\n        confirmPassword: ''\n      }));\n    } catch (error: any) {\n      console.error('Error updating profile:', error);\n      toast({\n        title: \"Update failed\",\n        description: error.message || \"Failed to update profile\",\n        variant: \"destructive\"\n      });\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const userInitials = profile?.full_name\n    ?.split(' ')\n    .map(n => n[0])\n    .join('')\n    .toUpperCase() || '??';\n\n  return (\n    <Layout>\n      <div className=\"container mx-auto px-4 py-8 pt-24\">\n        <div className=\"max-w-2xl mx-auto space-y-8\">\n          <h1 className=\"text-3xl font-bold\">Account Settings</h1>\n\n          <Card>\n            <CardHeader>\n              <CardTitle>Profile Picture</CardTitle>\n            </CardHeader>\n            <CardContent>\n              <AvatarUpload\n                currentAvatarUrl={profile?.avatar_url}\n                onUpload={handleAvatarUpload}\n                userInitials={userInitials}\n              />\n            </CardContent>\n          </Card>\n\n          <Card>\n            <CardHeader>\n              <CardTitle>Profile Information</CardTitle>\n            </CardHeader>\n            <CardContent>\n              <form onSubmit={handleUpdateProfile} className=\"space-y-4\">\n                <div>\n                  <Label htmlFor=\"fullName\">Full Name</Label>\n                  <Input\n                    id=\"fullName\"\n                    value={formData.fullName}\n                    onChange={e => setFormData(prev => ({ ...prev, fullName: e.target.value }))}\n                  />\n                </div>\n\n                <div>\n                  <Label htmlFor=\"email\">Email</Label>\n                  <Input\n                    id=\"email\"\n                    value={user?.email || ''}\n                    disabled\n                  />\n                </div>\n\n                <div className=\"pt-4\">\n                  <h3 className=\"text-lg font-semibold mb-4\">Change Password</h3>\n                  <div className=\"space-y-4\">\n                    <div>\n                      <Label htmlFor=\"currentPassword\">Current Password</Label>\n                      <Input\n                        id=\"currentPassword\"\n                        type=\"password\"\n                        value={formData.currentPassword}\n                        onChange={e => setFormData(prev => ({ ...prev, currentPassword: e.target.value }))}\n                      />\n                    </div>\n                    <div>\n                      <Label htmlFor=\"newPassword\">New Password</Label>\n                      <Input\n                        id=\"newPassword\"\n                        type=\"password\"\n                        value={formData.newPassword}\n                        onChange={e => setFormData(prev => ({ ...prev, newPassword: e.target.value }))}\n                      />\n                    </div>\n                    <div>\n                      <Label htmlFor=\"confirmPassword\">Confirm New Password</Label>\n                      <Input\n                        id=\"confirmPassword\"\n                        type=\"password\"\n                        value={formData.confirmPassword}\n                        onChange={e => setFormData(prev => ({ ...prev, confirmPassword: e.target.value }))}\n                      />\n                    </div>\n                  </div>\n                </div>\n\n                <Button type=\"submit\" disabled={isLoading}>\n                  {isLoading ? 'Saving...' : 'Save Changes'}\n                </Button>\n              </form>\n            </CardContent>\n          </Card>\n        </div>\n      </div>\n    </Layout>\n  );\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Button } from './ui/button';\nimport { Home } from 'lucide-react';\n\nconst NotFound = () => {\n  return (\n    <div className=\"flex flex-col items-center justify-center min-h-[80vh] px-4\">\n      <div className=\"text-center space-y-6 max-w-2xl\">\n        <h1 className=\"text-4xl font-bold tracking-tight sm:text-6xl text-primary\">\n          404\n        </h1>\n        <h2 className=\"text-2xl font-semibold tracking-tight sm:text-3xl\">\n          Page Not Found\n        </h2>\n        <p className=\"text-muted-foreground text-lg\">\n          Sorry, we couldn't find the page you're looking for. The page might have been removed, renamed, or doesn't exist.\n        </p>\n        \n        <div className=\"flex justify-center gap-4 pt-4\">\n          <Button asChild>\n            <Link to=\"/\" className=\"flex items-center gap-2\">\n              <Home className=\"h-4 w-4\" />\n              Back to Home\n            </Link>\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default NotFound; ","import { supabase } from \"./supabaseClient\";\n\n// Define the SQL constant directly in this file instead of re-exporting it\nexport const CREATE_MARKET_INSIGHTS_TABLE_SQL = `\n-- Function to create the market_insights table\nCREATE OR REPLACE FUNCTION create_market_insights_table()\nRETURNS VOID AS $$\nBEGIN\n  -- Check if the table already exists\n  IF NOT EXISTS (\n    SELECT FROM information_schema.tables \n    WHERE table_schema = 'public' \n    AND table_name = 'market_insights'\n  ) THEN\n    -- Create the table\n    CREATE TABLE public.market_insights (\n      id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),\n      content TEXT NOT NULL,\n      generated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),\n      created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()\n    );\n    \n    -- Add appropriate indexes\n    CREATE INDEX market_insights_generated_at_idx ON public.market_insights (generated_at);\n    \n    -- Set up RLS (Row Level Security)\n    ALTER TABLE public.market_insights ENABLE ROW LEVEL SECURITY;\n    \n    -- Create policies\n    CREATE POLICY \"Allow anonymous read access\" \n      ON public.market_insights FOR SELECT \n      USING (true);\n      \n    CREATE POLICY \"Allow authenticated insert\" \n      ON public.market_insights FOR INSERT \n      TO authenticated \n      WITH CHECK (true);\n  END IF;\nEND;\n$$ LANGUAGE plpgsql;\n\n-- Function to check if the user has admin privileges\nCREATE OR REPLACE FUNCTION check_admin_privileges()\nRETURNS BOOLEAN AS $$\nBEGIN\n  -- Try to create a temporary table as a privilege check\n  BEGIN\n    CREATE TEMPORARY TABLE privilege_check (id INT);\n    DROP TABLE privilege_check;\n    RETURN TRUE;\n  EXCEPTION\n    WHEN insufficient_privilege THEN\n      RETURN FALSE;\n  END;\nEND;\n$$ LANGUAGE plpgsql;\n`;\n\n// Mock data for when API calls fail\nconst MOCK_NEWS = [\n  {\n    title: \"UK House Prices Show Resilience Despite Economic Pressures\",\n    source: \"Property News UK\",\n    published_at: new Date().toISOString(),\n    url: \"#\",\n    excerpt: \"The latest data shows UK house prices maintaining stability with regional variations in growth rates.\"\n  },\n  {\n    title: \"New Rental Reforms Set to Transform Landlord-Tenant Relationships\",\n    source: \"Real Estate Times\",\n    published_at: new Date(Date.now() - 86400000).toISOString(),\n    url: \"#\",\n    excerpt: \"The government's proposed rental reforms aim to provide greater security for tenants while maintaining landlord rights.\"\n  },\n  {\n    title: \"Property Investment Shifts: Where Buyers Are Looking in 2024\",\n    source: \"Investment Quarterly\",\n    published_at: new Date(Date.now() - 172800000).toISOString(),\n    url: \"#\",\n    excerpt: \"Investor focus is moving toward emerging regional hotspots as work patterns continue to evolve post-pandemic.\"\n  },\n  {\n    title: \"Interest Rate Forecast and Impact on Mortgage Market\",\n    source: \"Financial Property Review\",\n    published_at: new Date(Date.now() - 259200000).toISOString(),\n    url: \"#\",\n    excerpt: \"Analysts predict stabilizing interest rates may provide relief for mortgage holders in the coming quarters.\"\n  },\n  {\n    title: \"Green Homes Grant: What Property Owners Need to Know\",\n    source: \"Sustainable Housing\",\n    published_at: new Date(Date.now() - 345600000).toISOString(),\n    url: \"#\",\n    excerpt: \"The latest initiatives for improving energy efficiency in UK homes and the financial incentives available.\"\n  }\n];\n\nconst MOCK_MARKET_INSIGHTS = `\n# UK Property Market Insights: July 2024\n\n## Latest Tax Law Changes\n\nThe UK property market continues to adapt to recent regulatory changes. In April 2024, the government implemented adjustments to Capital Gains Tax (CGT) rates for property investors, with the higher rate increasing from 28% to 30% for residential property disposals. Buy-to-let landlords face additional reporting requirements for rental income above £10,000 annually.\n\nThe Stamp Duty Land Tax (SDLT) thresholds remain unchanged from last year's autumn statement, with first-time buyers enjoying relief up to £425,000 (down from £625,000 in 2023).\n\n## Landlord Regulations\n\nLicensing requirements have expanded to include mandatory electrical safety certificates (EICR) renewals every five years, and the new Decent Homes Standard now applies to the private rental sector. Tenant rights have strengthened with the Renters Reform Bill provisions now in effect, limiting no-fault evictions and establishing stronger grounds for possession.\n\nProperty safety regulations now include stricter rules for carbon monoxide alarms, with mandatory installation in all rooms with fixed combustion appliances.\n\n## Government Policies\n\nThe Housing Ministry has announced a target of 300,000 new homes annually by 2026, with planning reforms to streamline development in designated growth zones. The Help to Buy equity loan scheme has been replaced with the First Homes initiative, offering 30-50% discounts on market value for first-time buyers.\n\nRegional variations exist in Scotland's Private Housing (Tenancies) Act and Wales' Renting Homes Act, creating a patchwork regulatory landscape.\n\n## Market Impact Analysis\n\nThese regulatory changes are creating downward pressure on rental yields, with the average UK yield dropping from 5.8% to 5.2% over the past year. Property values in commuter belts have shown greater resilience (+3.2%) compared to city centers (+1.7%).\n\nInvestment strategy adjustments should focus on regions with strong infrastructure investment and employment growth, particularly the Midlands and Northern England which offer better yields despite regulatory pressures.\n`;\n\nconst MOCK_RISK_ASSESSMENT = `\n# Market Risk Assessment: UK Property Sector\n\n## Current Risk Level: Moderate\n\n### Interest Rate Risk\nThe Bank of England's current base rate of 4.25% represents a stabilization after the peak of 5.25% in late 2023. While further cuts are anticipated, they are expected to be gradual, maintaining moderate pressure on mortgage affordability.\n\n### Regulatory Risk\nThe implementation phase of the Renters Reform Bill creates temporary uncertainty for landlords adapting to new requirements. Compliance costs have increased approximately 12% year-over-year.\n\n### Market Liquidity Risk\nTransaction volumes remain 15% below pre-pandemic levels, extending the average time to sell from 45 to 63 days. Regional variations are significant, with London experiencing greater liquidity constraints than the North East.\n\n### Recommendation\nInvestors should focus on properties with strong fundamentals that can weather short-term market fluctuations, particularly those in areas with diverse economic bases and strong rental demand.\n`;\n\nconst MOCK_PERSONALIZED_OPPORTUNITIES = [\n  {\n    area: \"Manchester - Salford Quays\",\n    propertyType: \"2-bedroom apartments\",\n    averagePrice: 210000,\n    expectedYield: 5.8,\n    growthPotential: \"High\",\n    keyFactors: [\n      \"Tech industry expansion\",\n      \"Transport improvements\",\n      \"Regeneration projects\"\n    ]\n  },\n  {\n    area: \"Birmingham - Jewellery Quarter\",\n    propertyType: \"1-2 bedroom converted industrial\",\n    averagePrice: 185000,\n    expectedYield: 5.4,\n    growthPotential: \"Medium-High\",\n    keyFactors: [\n      \"HS2 development impact\",\n      \"Growing young professional population\",\n      \"Cultural district revival\"\n    ]\n  },\n  {\n    area: \"Leeds - South Bank\",\n    propertyType: \"New build city apartments\",\n    averagePrice: 195000,\n    expectedYield: 5.9,\n    growthPotential: \"High\",\n    keyFactors: [\n      \"Major regeneration area\",\n      \"Financial sector growth\",\n      \"University expansion\"\n    ]\n  }\n];\n\n// Check if the market_insights table exists, create it if it doesn't\nasync function ensureMarketInsightsTable() {\n  try {\n    // First check if the table exists\n    const { error: checkError } = await supabase\n      .from('market_insights')\n      .select('id')\n      .limit(1);\n    \n    // If the table doesn't exist, we'll get a specific error\n    if (checkError && checkError.code === '42P01') {\n      console.log('Market insights table does not exist, attempting to create it...');\n      \n      // Using SQL to create the table - note this requires higher privileges,\n      // so it might not work with the client's credentials\n      const { error: createError } = await supabase.rpc('create_market_insights_table');\n      \n      if (createError) {\n        console.error('Failed to create market_insights table:', createError);\n        return false;\n      }\n      \n      console.log('Market insights table created successfully');\n      return true;\n    }\n    \n    // Table exists\n    return true;\n  } catch (error) {\n    console.error('Error checking/creating market_insights table:', error);\n    return false;\n  }\n}\n\n// Modified to use mock data when API fails\nexport async function fetchPropertyNews() {\n  try {\n    // Try to fetch from real API\n    const response = await fetch(\n      \"https://newsapi.org/v2/everything?q=uk+property+market&sortBy=publishedAt&apiKey=YOUR_API_KEY&pageSize=10\"\n    );\n    \n    if (!response.ok) {\n      throw new Error(`HTTP error! status: ${response.status}`);\n    }\n    \n    const data = await response.json();\n    if (data.articles && data.articles.length > 0) {\n      return data.articles.map((article: any) => ({\n        title: article.title,\n        source: article.source.name,\n        published_at: article.publishedAt,\n        url: article.url,\n        excerpt: article.description\n      }));\n    }\n    \n    // Fallback to mock data if no articles\n    console.log('No articles found in API response, using mock data');\n    return MOCK_NEWS;\n  } catch (error) {\n    console.error(\"Error fetching property news:\", error);\n    // Return mock data on error\n    return MOCK_NEWS;\n  }\n}\n\n// Modified to use mock data when API fails\nexport async function generateMarketInsights(prompt: string) {\n  try {\n    // Check if the API key is valid\n    const apiKey = \"AIzaSyD0MjDEtw7El7GSzOm9F8iIKE2uGDkVBWo\";\n    if (!apiKey || apiKey.includes(\"YOUR_API_KEY\")) {\n      console.warn(\"Using mock data: No valid API key provided for Gemini\");\n      return MOCK_MARKET_INSIGHTS;\n    }\n    \n    // Try to use the real API\n    const url = `https://generativelanguage.googleapis.com/v1beta/models/gemini-pro:generateContent?key=${apiKey}`;\n    \n    const response = await fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        contents: [\n          {\n            parts: [\n              {\n                text: prompt,\n              },\n            ],\n          },\n        ],\n        generationConfig: {\n          temperature: 0.7,\n          maxOutputTokens: 1024,\n        },\n      }),\n    });\n\n    if (!response.ok) {\n      throw new Error(`HTTP error! status: ${response.status}`);\n    }\n\n    const data = await response.json();\n    \n    // Extract the text from the response, handling different response structures\n    let generatedText = \"\";\n    if (data.candidates && data.candidates[0] && data.candidates[0].content) {\n      const textParts = data.candidates[0].content.parts.filter(\n        (part: any) => part.text\n      );\n      generatedText = textParts.map((part: any) => part.text).join(\"\\n\");\n    } else if (data.text) {\n      generatedText = data.text;\n    }\n\n    if (!generatedText) {\n      console.warn(\"Empty response from Gemini API, using mock data\");\n      return MOCK_MARKET_INSIGHTS;\n    }\n\n    return generatedText;\n  } catch (error) {\n    console.error(\"Error generating insights:\", error);\n    // Return mock data on error\n    return MOCK_MARKET_INSIGHTS;\n  }\n}\n\nexport async function formatMessage(text: string) {\n  // Simple markdown-to-html conversion for basic formatting\n  if (!text) return \"<p>No data available</p>\";\n  \n  return text\n    .replace(/^# (.*$)/gm, '<h1 class=\"text-2xl font-bold mb-4 mt-6\">$1</h1>')\n    .replace(/^## (.*$)/gm, '<h2 class=\"text-xl font-semibold mb-3 mt-5\">$1</h2>')\n    .replace(/^### (.*$)/gm, '<h3 class=\"text-lg font-medium mb-2 mt-4\">$1</h3>')\n    .replace(/\\*\\*(.*)\\*\\*/gm, '<strong>$1</strong>')\n    .replace(/\\*(.*)\\*/gm, '<em>$1</em>')\n    .replace(/\\n- (.*)/gm, '\\n<li>$1</li>')\n    .replace(/<\\/li>\\n<li>/gm, '</li><li>')\n    .replace(/\\n<li>/gm, '\\n<ul class=\"list-disc pl-5 mb-4\"><li>')\n    .replace(/<\\/li>\\n\\n/gm, '</li></ul>\\n\\n')\n    .replace(/<\\/li>\\n([^<])/gm, '</li></ul>\\n$1')\n    .replace(/\\n\\n/gm, '</p><p class=\"mb-4\">')\n    .replace(/^(.+)$/gm, '<p class=\"mb-4\">$1</p>')\n    .replace(/<p>\\s*<\\/p>/g, '')\n    .replace(/<p><h/g, '<h')\n    .replace(/<\\/h.*?><\\/p>/g, '</h>');\n}\n\nexport async function getLatestMarketInsights() {\n  try {\n    await ensureMarketInsightsTable();\n    \n    const { data, error } = await supabase\n      .from(\"market_insights\")\n      .select(\"*\")\n      .order(\"generated_at\", { ascending: false })\n      .limit(1);\n\n    if (error) {\n      console.error(\"Error fetching market insights:\", error);\n      // Return a mock response instead of throwing\n      return {\n        id: \"mock-id\",\n        content: MOCK_MARKET_INSIGHTS,\n        generated_at: new Date().toISOString(),\n      };\n    }\n\n    return data && data.length > 0 ? data[0] : null;\n  } catch (error) {\n    console.error(\"Error in getLatestMarketInsights:\", error);\n    // Return a mock response on error\n    return {\n      id: \"mock-id\",\n      content: MOCK_MARKET_INSIGHTS,\n      generated_at: new Date().toISOString(),\n    };\n  }\n}\n\nexport async function storeMarketInsights(content: string) {\n  try {\n    await ensureMarketInsightsTable();\n    \n    const { data, error } = await supabase\n      .from(\"market_insights\")\n      .insert([\n        {\n          content,\n          generated_at: new Date().toISOString(),\n        },\n      ])\n      .select();\n\n    if (error) {\n      console.error(\"Error storing market insights:\", error);\n      return null;\n    }\n\n    return data && data.length > 0 ? data[0] : null;\n  } catch (error) {\n    console.error(\"Error in storeMarketInsights:\", error);\n    return null;\n  }\n}\n\nexport async function getRiskAssessment() {\n  try {\n    // This could be fetched from an API or database in the future\n    return MOCK_RISK_ASSESSMENT;\n  } catch (error) {\n    console.error(\"Error fetching risk assessment:\", error);\n    return MOCK_RISK_ASSESSMENT;\n  }\n}\n\nexport async function getPersonalizedOpportunities() {\n  try {\n    // This could be fetched from an API or database in the future\n    return MOCK_PERSONALIZED_OPPORTUNITIES;\n  } catch (error) {\n    console.error(\"Error fetching personalized opportunities:\", error);\n    return MOCK_PERSONALIZED_OPPORTUNITIES;\n  }\n}\n\nexport async function getPredictiveAnalytics(region = \"UK\") {\n  try {\n    // This would connect to a real predictive API in the future\n    return {\n      region: region,\n      currentAveragePrice: 290000,\n      predictedGrowthRate: 3.8,\n      confidenceScore: 82,\n      timeframe: \"12 months\",\n      factors: [\n        \"Interest rate stabilization\",\n        \"Housing supply constraints\",\n        \"Regional economic development\"\n      ]\n    };\n  } catch (error) {\n    console.error(\"Error fetching predictive analytics:\", error);\n    return {\n      region: region,\n      currentAveragePrice: 290000,\n      predictedGrowthRate: 3.2,\n      confidenceScore: 75,\n      timeframe: \"12 months\",\n      factors: [\n        \"Mock data - API unavailable\",\n        \"Contact administrator for actual predictions\"\n      ]\n    };\n  }\n}\n","import React from \"react\";\nimport { Card, CardContent, CardHeader } from \"./ui/card\";\nimport {\n  fetchPropertyNews,\n  generateMarketInsights,\n  getLatestMarketInsights,\n  getRiskAssessment,\n  getPersonalizedOpportunities,\n  getPredictiveAnalytics,\n} from \"../lib/market-insights\";\nimport { cn } from \"../lib/utils\";\nimport { Button } from \"./ui/button\";\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } from 'recharts';\nimport HeroSection from \"./HeroSection\";\n\ninterface MarketInsightsProps {\n  user?: any;\n  profile?: any;\n  className?: string;\n  showHero?: boolean;\n}\n\nexport function MarketInsights({ user, profile, className, showHero = true }: MarketInsightsProps) {\n  const [news, setNews] = React.useState<any[]>([]);\n  const [insights, setInsights] = React.useState<string>(\"\");\n  const [riskAssessment, setRiskAssessment] = React.useState<string>(\"No risk assessment data available.\");\n  const [personalizedOpportunities, setPersonalizedOpportunities] = React.useState<any[]>([]);\n  const [loading, setLoading] = React.useState(true);\n  const [error, setError] = React.useState<string | null>(null);\n\n  React.useEffect(() => {\n    const loadData = async () => {\n      try {\n        // Fetch news\n        const newsData = await fetchPropertyNews();\n        setNews(newsData.slice(0, 5));\n\n        // Get latest insights from Supabase\n        const latestInsights = await getLatestMarketInsights();\n        if (latestInsights) {\n          setInsights(latestInsights.content);\n        } else {\n          // Generate new insights if none exist\n          const newInsights = await generateMarketInsights(\n            \"Provide a concise analysis of the current UK property market trends, focusing on interest rates, price movements, and market sentiment. Include key statistics and recommendations for investors.\",\n          );\n          setInsights(newInsights);\n        }\n\n        // Fetch risk assessment\n        const riskData = await getRiskAssessment();\n        setRiskAssessment(riskData);\n\n        // Fetch personalized investment opportunities\n        const opportunitiesData = await getPersonalizedOpportunities();\n        setPersonalizedOpportunities(opportunitiesData);\n\n        // Fetch predictive analytics\n        const predictiveData = await getPredictiveAnalytics();\n        // Handle predictive data as needed\n      } catch (error) {\n        console.error(\"Error loading market data:\", error);\n        setError(\"Failed to load market data.\");\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    loadData();\n  }, []);\n\n  // Sample data for demonstration\n  const priceData = [\n    { month: 'Jan', price: 320000 },\n    { month: 'Feb', price: 325000 },\n    { month: 'Mar', price: 329000 },\n    { month: 'Apr', price: 335000 },\n    { month: 'May', price: 340000 },\n    { month: 'Jun', price: 345000 },\n  ];\n\n  const regionalData = [\n    { region: 'London', price: 500000 },\n    { region: 'Manchester', price: 250000 },\n    { region: 'Birmingham', price: 220000 },\n    { region: 'Leeds', price: 200000 },\n    { region: 'Liverpool', price: 180000 },\n  ];\n\n  return (\n    <>\n      {/* Only render hero if showHero prop is true */}\n      {showHero && (\n        <div className=\"w-full\">\n          <HeroSection\n            title=\"Property Market Insights & Analysis\"\n            subtitle=\"Expert analysis, regional comparisons, and investment recommendations to guide your property decisions\"\n            showSearch={false}\n            showStats={false}\n            height=\"h-[400px]\"\n          />\n        </div>\n      )}\n\n      {/* Content area */}\n      <div className={cn(\"w-full\", className)}>\n        <div className=\"container mx-auto px-4 py-12\">\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8 mb-12\">\n            <Card>\n              <CardHeader>\n                <h2 className=\"text-xl font-semibold\">Price Trends</h2>\n              </CardHeader>\n              <CardContent className=\"h-80\">\n                <ResponsiveContainer width=\"100%\" height=\"100%\">\n                  <LineChart data={priceData}>\n                    <CartesianGrid strokeDasharray=\"3 3\" />\n                    <XAxis dataKey=\"month\" />\n                    <YAxis />\n                    <Tooltip \n                      formatter={(value) => [`£${value.toLocaleString()}`, 'Average Price']}\n                    />\n                    <Line \n                      type=\"monotone\" \n                      dataKey=\"price\" \n                      stroke=\"hsl(var(--primary))\"\n                      activeDot={{ r: 8 }}\n                    />\n                  </LineChart>\n                </ResponsiveContainer>\n              </CardContent>\n            </Card>\n\n            <Card>\n              <CardHeader>\n                <h2 className=\"text-xl font-semibold\">Regional Comparison</h2>\n              </CardHeader>\n              <CardContent className=\"h-80\">\n                <ResponsiveContainer width=\"100%\" height=\"100%\">\n                  <LineChart data={regionalData}>\n                    <CartesianGrid strokeDasharray=\"3 3\" />\n                    <XAxis dataKey=\"region\" />\n                    <YAxis />\n                    <Tooltip \n                      formatter={(value) => [`£${value.toLocaleString()}`, 'Average Price']}\n                    />\n                    <Line \n                      type=\"monotone\" \n                      dataKey=\"price\" \n                      stroke=\"hsl(var(--primary))\"\n                      activeDot={{ r: 8 }}\n                    />\n                  </LineChart>\n                </ResponsiveContainer>\n              </CardContent>\n            </Card>\n          </div>\n\n          <Card className=\"mb-12\">\n            <CardHeader>\n              <h2 className=\"text-xl font-semibold\">Market Analysis</h2>\n            </CardHeader>\n            <CardContent>\n              <p className=\"text-muted-foreground mb-4\">\n                The UK property market continues to show resilience despite economic challenges.\n                Regional variations are significant, with some areas experiencing rapid growth\n                while others see more moderate changes.\n              </p>\n              <p className=\"text-muted-foreground mb-4\">\n                Key factors influencing the current market include:\n              </p>\n              <ul className=\"list-disc pl-5 mb-4 text-muted-foreground\">\n                <li>Interest rate changes affecting mortgage affordability</li>\n                <li>Supply constraints in high-demand areas</li>\n                <li>Increasing preference for properties with outdoor space</li>\n                <li>Remote work influencing location decisions</li>\n              </ul>\n              <Button>Download Full Report</Button>\n            </CardContent>\n          </Card>\n\n          {/* Only show premium insights for premium subscribers */}\n          {profile?.subscription_tier !== 'free' && (\n            <Card className=\"mb-12 border-primary/20 bg-gradient-to-r from-primary/5 to-background\">\n              <CardHeader>\n                <h2 className=\"text-xl font-semibold flex items-center\">\n                  Premium Market Insights\n                  <span className=\"ml-2 px-2 py-1 text-xs rounded-full bg-primary/20 text-primary\">\n                    Premium\n                  </span>\n                </h2>\n              </CardHeader>\n              <CardContent>\n                <p className=\"text-muted-foreground mb-4\">\n                  Our exclusive analysis indicates emerging hotspots in the following areas:\n                </p>\n                <ul className=\"list-disc pl-5 mb-4 text-muted-foreground\">\n                  <li>Northwest Manchester - projected 8.3% growth over 12 months</li>\n                  <li>East Birmingham suburbs - increasing demand from young professionals</li>\n                  <li>Coastal towns in the Southwest - rising popularity for remote workers</li>\n                </ul>\n                <Button>View Detailed Forecast</Button>\n              </CardContent>\n            </Card>\n          )}\n        </div>\n      </div>\n    </>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle, CardFooter } from './ui/card';\nimport { Button } from './ui/button';\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from './ui/tabs';\nimport { PieChart, LineChart, BarChart, MapPin, ArrowUpRight, ArrowDownRight, TrendingUp, Home, Building, Globe, PoundSterling, Info } from 'lucide-react';\nimport { useAuth } from '../lib/auth';\nimport { SubscriptionModal } from './SubscriptionModal';\nimport { Badge } from './ui/badge';\n\nconst visualizationTypes = [\n  { id: 'price_trends', name: 'Price Trends', icon: <TrendingUp className=\"h-4 w-4 mr-2\" /> },\n  { id: 'regional_comparison', name: 'Regional Comparison', icon: <MapPin className=\"h-4 w-4 mr-2\" /> },\n  { id: 'property_types', name: 'Property Types', icon: <Home className=\"h-4 w-4 mr-2\" /> },\n  { id: 'growth_forecast', name: 'Growth Forecast', icon: <ArrowUpRight className=\"h-4 w-4 mr-2\" /> },\n  { id: 'rental_yield', name: 'Rental Yield Analysis', icon: <PoundSterling className=\"h-4 w-4 mr-2\" /> },\n  { id: 'market_activity', name: 'Market Activity', icon: <Building className=\"h-4 w-4 mr-2\" /> },\n];\n\n// Mock chart component for price trends\nconst PriceTrendChart = () => (\n  <div className=\"bg-muted rounded-lg p-4 relative aspect-[16/9]\">\n    <div className=\"absolute inset-0 flex items-end p-6\">\n      <div className=\"w-full flex items-end h-4/5 space-x-1\">\n        {Array.from({ length: 12 }).map((_, i) => {\n          // Generate a random height that follows a slight upward trend\n          const baseHeight = 30 + i * 1.5;\n          const variance = Math.random() * 15 - 7.5;\n          const height = baseHeight + variance;\n          \n          return (\n            <div \n              key={i} \n              className=\"w-full bg-primary rounded-t-sm transition-all duration-300 hover:opacity-80\"\n              style={{ height: `${height}%` }}\n              title={`Month ${i+1}: £${Math.round(280000 + (i * 1000) + (variance * 1000))}`}\n            ></div>\n          );\n        })}\n      </div>\n    </div>\n    <div className=\"absolute top-2 left-2 text-xs font-medium text-foreground/70\">Price (£)</div>\n    <div className=\"absolute bottom-2 right-2 text-xs font-medium text-foreground/70\">Last 12 Months</div>\n  </div>\n);\n\n// Mock chart component for regional comparison\nconst RegionalComparisonChart = () => (\n  <div className=\"bg-muted rounded-lg p-4 relative aspect-[16/9]\">\n    <div className=\"absolute inset-0 flex items-end p-6\">\n      <div className=\"w-full flex items-end h-4/5 space-x-3\">\n        {[\n          { region: 'NW', height: 75, growth: 4.8 },\n          { region: 'NE', height: 65, growth: 4.1 },\n          { region: 'YOR', height: 70, growth: 4.5 },\n          { region: 'MID', height: 60, growth: 3.9 },\n          { region: 'SE', height: 45, growth: 2.5 },\n          { region: 'LON', height: 35, growth: 0.2 },\n          { region: 'SW', height: 50, growth: 3.0 },\n          { region: 'WAL', height: 55, growth: 3.5 },\n          { region: 'SCO', height: 60, growth: 3.8 },\n        ].map((item, i) => (\n          <div key={i} className=\"flex flex-col items-center w-full\">\n            <div \n              className=\"w-full bg-primary rounded-t-sm transition-all duration-300 hover:opacity-80\"\n              style={{ height: `${item.height}%` }}\n              title={`${item.region}: ${item.growth}% growth`}\n            ></div>\n            <span className=\"text-xs mt-1 text-foreground/70\">{item.region}</span>\n          </div>\n        ))}\n      </div>\n    </div>\n    <div className=\"absolute top-2 left-2 text-xs font-medium text-foreground/70\">Growth (%)</div>\n  </div>\n);\n\n// Mock chart component for property types\nconst PropertyTypesChart = () => (\n  <div className=\"bg-muted rounded-lg p-4 relative aspect-[16/9]\">\n    <div className=\"absolute inset-0 flex items-center justify-center\">\n      <div className=\"w-64 h-64 relative rounded-full bg-primary/5\">\n        {/* Pie chart segments */}\n        <div className=\"absolute inset-0 rounded-full bg-blue-500\" style={{ clipPath: 'polygon(50% 50%, 50% 0%, 100% 0%, 100% 100%, 50% 100%)' }}></div>\n        <div className=\"absolute inset-0 rounded-full bg-green-500\" style={{ clipPath: 'polygon(50% 50%, 100% 100%, 50% 100%)' }}></div>\n        <div className=\"absolute inset-0 rounded-full bg-amber-500\" style={{ clipPath: 'polygon(50% 50%, 50% 100%, 0% 100%, 0% 50%)' }}></div>\n        <div className=\"absolute inset-0 rounded-full bg-red-500\" style={{ clipPath: 'polygon(50% 50%, 0% 50%, 0% 0%, 50% 0%)' }}></div>\n        <div className=\"absolute inset-0 flex items-center justify-center\">\n          <div className=\"w-20 h-20 rounded-full bg-background\"></div>\n        </div>\n      </div>\n    </div>\n    <div className=\"absolute bottom-4 left-4 flex flex-col space-y-1\">\n      <div className=\"flex items-center text-xs\">\n        <div className=\"w-3 h-3 rounded-sm bg-blue-500 mr-2\"></div>\n        <span>Detached (40%)</span>\n      </div>\n      <div className=\"flex items-center text-xs\">\n        <div className=\"w-3 h-3 rounded-sm bg-green-500 mr-2\"></div>\n        <span>Semi-detached (25%)</span>\n      </div>\n      <div className=\"flex items-center text-xs\">\n        <div className=\"w-3 h-3 rounded-sm bg-amber-500 mr-2\"></div>\n        <span>Terraced (20%)</span>\n      </div>\n      <div className=\"flex items-center text-xs\">\n        <div className=\"w-3 h-3 rounded-sm bg-red-500 mr-2\"></div>\n        <span>Flats (15%)</span>\n      </div>\n    </div>\n  </div>\n);\n\n// Mock chart component for growth forecast\nconst GrowthForecastChart = () => (\n  <div className=\"bg-muted rounded-lg p-4 relative aspect-[16/9]\">\n    <div className=\"absolute inset-0 flex items-end p-6\">\n      <div className=\"w-full h-4/5 relative\">\n        {/* Current position marker */}\n        <div className=\"absolute left-1/3 bottom-0 h-full w-px bg-foreground/20 z-10\"></div>\n        <div className=\"absolute left-1/3 bottom-0 w-3 h-3 rounded-full bg-primary transform -translate-x-1.5 z-20\"></div>\n        <div className=\"absolute left-1/3 bottom-8 bg-background border rounded-md px-2 py-1 text-xs transform -translate-x-1/2 z-20\">\n          Current\n        </div>\n        \n        {/* The trend line */}\n        <div className=\"absolute inset-0 flex items-center\">\n          <div className=\"w-full h-px bg-primary/70\"></div>\n        </div>\n        \n        {/* Forecast area */}\n        <div className=\"absolute left-1/3 right-0 bottom-0 h-full bg-gradient-to-r from-blue-500/10 to-green-500/10 z-0 border-l border-dashed border-foreground/20\"></div>\n        \n        {/* Forecast line (increasing) */}\n        <div className=\"absolute left-1/3 bottom-1/2 right-0 h-px bg-green-500 transform rotate-[5deg] origin-left z-10\"></div>\n        \n        {/* Upper bound line */}\n        <div className=\"absolute left-1/3 bottom-1/2 right-0 h-px bg-green-500/30 transform rotate-[12deg] origin-left z-10 border-dashed\"></div>\n        \n        {/* Lower bound line */}\n        <div className=\"absolute left-1/3 bottom-1/2 right-0 h-px bg-green-500/30 transform rotate-[2deg] origin-left z-10 border-dashed\"></div>\n        \n        <div className=\"absolute top-2 left-2 text-xs font-medium text-foreground/70\">Price (£)</div>\n        <div className=\"absolute bottom-2 right-2 text-xs font-medium text-foreground/70\">5 Year Forecast</div>\n        \n        <div className=\"absolute right-8 top-1/4 bg-background border rounded-md px-2 py-1 text-xs z-20\">\n          <span className=\"text-green-500 font-medium\">+18.5%</span> Forecast 5Y Growth\n        </div>\n      </div>\n    </div>\n  </div>\n);\n\n// Mock chart component for rental yield\nconst RentalYieldChart = () => (\n  <div className=\"bg-muted rounded-lg p-4 relative aspect-[16/9]\">\n    <div className=\"absolute inset-0 p-6 grid grid-cols-3 gap-4\">\n      {[\n        { city: 'Liverpool', yield: 7.2 },\n        { city: 'Manchester', yield: 6.7 },\n        { city: 'Nottingham', yield: 6.5 },\n        { city: 'Leeds', yield: 6.1 },\n        { city: 'Sheffield', yield: 5.8 },\n        { city: 'Birmingham', yield: 5.5 },\n        { city: 'Edinburgh', yield: 5.1 },\n        { city: 'Bristol', yield: 4.6 },\n        { city: 'London', yield: 3.9 },\n      ].map((item, i) => (\n        <div key={i} className=\"flex flex-col items-center justify-end h-full\">\n          <div className=\"w-full max-w-16 bg-gradient-to-t from-primary to-primary/70 rounded-t-sm relative overflow-hidden\" style={{ height: `${(item.yield / 8) * 100}%` }}>\n            <div className=\"absolute inset-x-0 bottom-0 text-center text-white text-xs font-semibold\">\n              {item.yield}%\n            </div>\n          </div>\n          <div className=\"mt-1 text-xs text-center line-clamp-1\">{item.city}</div>\n        </div>\n      ))}\n    </div>\n    <div className=\"absolute top-2 left-2 text-xs font-medium text-foreground/70\">Rental Yield (%)</div>\n  </div>\n);\n\n// Mock chart component for market activity\nconst MarketActivityChart = () => (\n  <div className=\"bg-muted rounded-lg p-4 relative aspect-[16/9]\">\n    <div className=\"absolute inset-0 flex items-end p-6\">\n      <div className=\"w-full flex items-end h-4/5 space-x-1\">\n        {Array.from({ length: 24 }).map((_, i) => {\n          // Generate activity that follows seasonal patterns\n          const month = i % 12;\n          let baseHeight = 40;\n          \n          // Summer months have higher activity\n          if (month >= 3 && month <= 7) {\n            baseHeight += 30;\n          }\n          \n          // Winter months have lower activity\n          if (month >= 9 || month <= 1) {\n            baseHeight -= 10;\n          }\n          \n          const variance = Math.random() * 15 - 7.5;\n          const height = baseHeight + variance;\n          const isCurrentMonth = i === 23;\n          \n          return (\n            <div \n              key={i} \n              className={`w-full rounded-t-sm transition-all duration-300 hover:opacity-80 ${isCurrentMonth ? 'bg-primary' : 'bg-primary/60'}`}\n              style={{ height: `${height}%` }}\n              title={`Month ${(i % 12) + 1}: ${Math.round(height * 100)} transactions`}\n            ></div>\n          );\n        })}\n      </div>\n    </div>\n    <div className=\"absolute top-2 left-2 text-xs font-medium text-foreground/70\">Transaction Volume</div>\n    <div className=\"absolute bottom-2 right-2 text-xs font-medium text-foreground/70\">Last 24 Months</div>\n  </div>\n);\n\nexport function DataVisualization({ user, profile }: { user: any; profile: any }) {\n  const [currentVisualization, setCurrentVisualization] = useState('price_trends');\n  const [isSubscriptionModalOpen, setIsSubscriptionModalOpen] = useState(false);\n  const isPremium = profile?.subscription_tier === 'premium' || profile?.subscription_tier === 'pro';\n  const [isLoading, setIsLoading] = useState(false);\n\n  // Simulate loading when changing visualization\n  useEffect(() => {\n    setIsLoading(true);\n    const timer = setTimeout(() => {\n      setIsLoading(false);\n    }, 500);\n    return () => clearTimeout(timer);\n  }, [currentVisualization]);\n\n  const renderVisualizationContent = () => {\n    if (!isPremium) {\n      return (\n        <div className=\"flex flex-col items-center justify-center p-8 sm:p-12 text-center\">\n          <PieChart className=\"h-12 w-12 sm:h-16 sm:w-16 mb-4 text-muted-foreground\" />\n          <h3 className=\"text-lg sm:text-xl font-semibold mb-2\">Premium Feature</h3>\n          <p className=\"text-sm text-muted-foreground max-w-md mb-6\">\n            Advanced data visualizations are available with our Pro and Premium subscriptions.\n          </p>\n          <Button onClick={() => setIsSubscriptionModalOpen(true)}>\n            Upgrade Now\n          </Button>\n        </div>\n      );\n    }\n\n    if (isLoading) {\n      return (\n        <div className=\"p-8 sm:p-12 flex flex-col items-center justify-center\">\n          <div className=\"animate-spin w-8 h-8 border-4 border-primary/30 border-t-primary rounded-full mb-4\"></div>\n          <p className=\"text-sm text-muted-foreground\">Loading visualization data...</p>\n        </div>\n      );\n    }\n\n    switch (currentVisualization) {\n      case 'price_trends':\n        return (\n          <div className=\"space-y-4\">\n            <div className=\"flex flex-col sm:flex-row sm:items-center sm:justify-between gap-2\">\n              <h3 className=\"text-lg font-medium\">UK House Price Trends (Last 12 Months)</h3>\n              <Badge variant=\"outline\" className=\"w-fit\">\n                <ArrowUpRight className=\"h-3 w-3 text-green-500 mr-1\" />\n                <span className=\"text-green-500 text-xs\">+2.3% YoY</span>\n              </Badge>\n            </div>\n            \n            <PriceTrendChart />\n            \n            <div className=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-4\">\n              <Card>\n                <CardHeader className=\"pb-2\">\n                  <CardTitle className=\"text-sm font-medium\">Average Price</CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <div className=\"text-xl sm:text-2xl font-bold\">£289,950</div>\n                  <p className=\"text-xs text-muted-foreground\">+2.3% from last year</p>\n                </CardContent>\n              </Card>\n              <Card>\n                <CardHeader className=\"pb-2\">\n                  <CardTitle className=\"text-sm font-medium\">Monthly Change</CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <div className=\"text-xl sm:text-2xl font-bold\">+0.5%</div>\n                  <p className=\"text-xs text-muted-foreground\">Compared to -0.1% last month</p>\n                </CardContent>\n              </Card>\n              <Card>\n                <CardHeader className=\"pb-2\">\n                  <CardTitle className=\"text-sm font-medium\">Annual Growth</CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <div className=\"text-xl sm:text-2xl font-bold\">+2.3%</div>\n                  <p className=\"text-xs text-muted-foreground\">Steady increase since Q1</p>\n                </CardContent>\n              </Card>\n            </div>\n          </div>\n        );\n      case 'regional_comparison':\n        return (\n          <div className=\"space-y-4\">\n            <h3 className=\"text-lg font-medium\">Regional Price Comparison</h3>\n            \n            <RegionalComparisonChart />\n            \n            <div className=\"grid grid-cols-1 sm:grid-cols-3 gap-4\">\n              <Card>\n                <CardHeader className=\"pb-2\">\n                  <CardTitle className=\"text-sm font-medium\">Highest Growth Region</CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <div className=\"text-xl font-bold\">North West</div>\n                  <div className=\"flex items-center mt-1\">\n                    <ArrowUpRight className=\"h-3 w-3 text-green-500 mr-1\" />\n                    <span className=\"text-xs text-green-500\">+4.8% annual growth</span>\n                  </div>\n                </CardContent>\n              </Card>\n              <Card>\n                <CardHeader className=\"pb-2\">\n                  <CardTitle className=\"text-sm font-medium\">Lowest Growth Region</CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <div className=\"text-xl font-bold\">London</div>\n                  <div className=\"flex items-center mt-1\">\n                    <ArrowUpRight className=\"h-3 w-3 text-amber-500 mr-1\" />\n                    <span className=\"text-xs text-amber-500\">+0.2% annual growth</span>\n                  </div>\n                </CardContent>\n              </Card>\n              <Card>\n                <CardHeader className=\"pb-2\">\n                  <CardTitle className=\"text-sm font-medium\">UK Average</CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <div className=\"text-xl font-bold\">+2.3%</div>\n                  <p className=\"text-xs text-muted-foreground\">Annual price growth</p>\n                </CardContent>\n              </Card>\n            </div>\n          </div>\n        );\n      case 'property_types':\n        return (\n          <div className=\"space-y-4\">\n            <h3 className=\"text-lg font-medium\">Property Types Distribution</h3>\n            \n            <PropertyTypesChart />\n            \n            <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-4\">\n              <Card>\n                <CardHeader className=\"pb-2\">\n                  <CardTitle className=\"text-sm font-medium\">Fastest Growing Type</CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <div className=\"text-xl font-bold\">Detached Houses</div>\n                  <div className=\"flex items-center mt-1\">\n                    <ArrowUpRight className=\"h-3 w-3 text-green-500 mr-1\" />\n                    <span className=\"text-xs text-green-500\">+3.5% annual growth</span>\n                  </div>\n                </CardContent>\n              </Card>\n              <Card>\n                <CardHeader className=\"pb-2\">\n                  <CardTitle className=\"text-sm font-medium\">Best Rental Yield</CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <div className=\"text-xl font-bold\">Flats/Apartments</div>\n                  <div className=\"flex items-center mt-1\">\n                    <PoundSterling className=\"h-3 w-3 text-primary mr-1\" />\n                    <span className=\"text-xs\">5.1% average yield</span>\n                  </div>\n                </CardContent>\n              </Card>\n            </div>\n          </div>\n        );\n      case 'growth_forecast':\n        return (\n          <div className=\"space-y-4\">\n            <h3 className=\"text-lg font-medium\">5-Year Growth Forecast</h3>\n            \n            <GrowthForecastChart />\n            \n            <div className=\"grid grid-cols-1 sm:grid-cols-3 gap-4\">\n              <Card>\n                <CardHeader className=\"pb-2\">\n                  <CardTitle className=\"text-sm font-medium\">Base Forecast</CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <div className=\"text-xl font-bold\">+18.5%</div>\n                  <p className=\"text-xs text-muted-foreground\">Over next 5 years</p>\n                </CardContent>\n              </Card>\n              <Card>\n                <CardHeader className=\"pb-2\">\n                  <CardTitle className=\"text-sm font-medium\">Upper Bound</CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <div className=\"text-xl font-bold\">+24.2%</div>\n                  <p className=\"text-xs text-muted-foreground\">Optimistic scenario</p>\n                </CardContent>\n              </Card>\n              <Card>\n                <CardHeader className=\"pb-2\">\n                  <CardTitle className=\"text-sm font-medium\">Lower Bound</CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <div className=\"text-xl font-bold\">+12.8%</div>\n                  <p className=\"text-xs text-muted-foreground\">Conservative scenario</p>\n                </CardContent>\n              </Card>\n            </div>\n          </div>\n        );\n      case 'rental_yield':\n        return (\n          <div className=\"space-y-4\">\n            <h3 className=\"text-lg font-medium\">Rental Yield Analysis</h3>\n            \n            <RentalYieldChart />\n            \n            <div className=\"grid grid-cols-1 sm:grid-cols-3 gap-4\">\n              <Card>\n                <CardHeader className=\"pb-2\">\n                  <CardTitle className=\"text-sm font-medium\">Top Performing City</CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <div className=\"text-xl font-bold\">Liverpool</div>\n                  <div className=\"flex items-center mt-1\">\n                    <PoundSterling className=\"h-3 w-3 text-green-500 mr-1\" />\n                    <span className=\"text-xs text-green-500\">7.2% average yield</span>\n                  </div>\n                </CardContent>\n              </Card>\n              <Card>\n                <CardHeader className=\"pb-2\">\n                  <CardTitle className=\"text-sm font-medium\">UK Average</CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <div className=\"text-xl font-bold\">5.5%</div>\n                  <p className=\"text-xs text-muted-foreground\">Rental yield across UK</p>\n                </CardContent>\n              </Card>\n              <Card>\n                <CardHeader className=\"pb-2\">\n                  <CardTitle className=\"text-sm font-medium\">London</CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <div className=\"text-xl font-bold\">3.9%</div>\n                  <p className=\"text-xs text-muted-foreground\">Lower yield, higher capital growth</p>\n                </CardContent>\n              </Card>\n            </div>\n          </div>\n        );\n      case 'market_activity':\n        return (\n          <div className=\"space-y-4\">\n            <h3 className=\"text-lg font-medium\">Market Activity (Transaction Volume)</h3>\n            \n            <MarketActivityChart />\n            \n            <div className=\"grid grid-cols-1 sm:grid-cols-3 gap-4\">\n              <Card>\n                <CardHeader className=\"pb-2\">\n                  <CardTitle className=\"text-sm font-medium\">Current Month</CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <div className=\"text-xl font-bold\">86,420</div>\n                  <div className=\"flex items-center mt-1\">\n                    <ArrowUpRight className=\"h-3 w-3 text-green-500 mr-1\" />\n                    <span className=\"text-xs text-green-500\">+4.2% vs last month</span>\n                  </div>\n                </CardContent>\n              </Card>\n              <Card>\n                <CardHeader className=\"pb-2\">\n                  <CardTitle className=\"text-sm font-medium\">Year-on-Year</CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <div className=\"text-xl font-bold\">+12.5%</div>\n                  <p className=\"text-xs text-muted-foreground\">Increase from last year</p>\n                </CardContent>\n              </Card>\n              <Card>\n                <CardHeader className=\"pb-2\">\n                  <CardTitle className=\"text-sm font-medium\">Forecast</CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <div className=\"text-xl font-bold\">Increasing</div>\n                  <p className=\"text-xs text-muted-foreground\">Expected to rise over Q3</p>\n                </CardContent>\n              </Card>\n            </div>\n          </div>\n        );\n      default:\n        return (\n          <div className=\"flex items-center justify-center p-12\">\n            <p className=\"text-muted-foreground\">Select a visualization type to view data</p>\n          </div>\n        );\n    }\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"flex flex-col space-y-4\">\n        <h2 className=\"text-2xl font-bold tracking-tight\">Data Visualization</h2>\n        <p className=\"text-muted-foreground\">\n          Explore market trends with interactive visualizations\n        </p>\n      </div>\n\n      {/* Responsive grid for visualization types on mobile */}\n      <div className=\"grid grid-cols-2 sm:grid-cols-3 md:grid-cols-6 gap-2 md:gap-4\">\n        {visualizationTypes.map((type) => (\n          <Button\n            key={type.id}\n            variant={currentVisualization === type.id ? \"default\" : \"outline\"}\n            className=\"w-full h-auto py-2 px-3 flex flex-col sm:flex-row items-center justify-center sm:justify-start text-xs sm:text-sm whitespace-normal sm:whitespace-nowrap\"\n            onClick={() => setCurrentVisualization(type.id)}\n          >\n            <span className=\"flex items-center justify-center sm:justify-start w-full\">\n              <span className=\"sm:inline-block\">{type.icon}</span>\n              <span className=\"text-center sm:text-left\">{type.name}</span>\n            </span>\n          </Button>\n        ))}\n      </div>\n\n      <Card className=\"mt-6\">\n        <CardContent className=\"pt-6\">\n          {renderVisualizationContent()}\n        </CardContent>\n        <CardFooter className=\"text-xs text-muted-foreground border-t pt-4 mt-4\">\n          <div className=\"flex items-center\">\n            <Info className=\"h-3 w-3 mr-1\" />\n            <span>Data updated: June 13, 2024</span>\n          </div>\n        </CardFooter>\n      </Card>\n\n      <SubscriptionModal\n        isOpen={isSubscriptionModalOpen}\n        onClose={() => setIsSubscriptionModalOpen(false)}\n        currentUser={user}\n        userProfile={profile}\n      />\n    </div>\n  );\n} ","import { motion } from \"framer-motion\";\nimport React from \"react\";\n\ninterface PageTransitionProps {\n  children: React.ReactNode;\n}\n\nexport function PageTransition({ children }: PageTransitionProps) {\n  return (\n    <motion.div\n      initial={{ opacity: 0, y: 20 }}\n      animate={{ opacity: 1, y: 0 }}\n      exit={{ opacity: 0, y: 20 }}\n      transition={{ duration: 0.3 }}\n    >\n      {children}\n    </motion.div>\n  );\n}\n","import React, { useState } from 'react';\nimport { MarketInsights } from './MarketInsights';\nimport { Tabs, TabsList, TabsTrigger, TabsContent } from './ui/tabs';\nimport { DataVisualization } from './DataVisualization';\nimport { useAuth } from '../lib/auth';\nimport HeroSection from './HeroSection';\nimport { Card, CardContent, CardHeader } from \"./ui/card\";\nimport { Button } from \"./ui/button\";\nimport {\n  Newspaper,\n  LineChart,\n  Building2,\n  Globe2,\n  AlertTriangle,\n  RefreshCw,\n} from \"lucide-react\";\nimport { Layout } from \"./Layout\";\nimport { PageTransition } from \"./ui/page-transition\";\nimport {\n  fetchPropertyNews,\n  generateMarketInsights,\n  getLatestMarketInsights,\n  storeMarketInsights,\n  CREATE_MARKET_INSIGHTS_TABLE_SQL\n} from \"../lib/market-insights\";\nimport { Alert, AlertDescription, AlertTitle } from \"./ui/alert\";\n\n// Auth context checker wrapper\nconst AuthContextChecker = ({ children }: { children: React.ReactNode }) => {\n  try {\n    // Try to access auth context but don't use the result\n    useAuth();\n    // If we get here, auth context is available\n    return <>{children}</>;\n  } catch (error) {\n    // If auth context is not available, show a fallback\n    return (\n      <Layout>\n        <div className=\"min-h-screen flex flex-col items-center justify-center p-4\">\n          <Card className=\"p-6 max-w-md w-full\">\n            <h2 className=\"text-xl font-bold mb-4 text-center\">Authentication Error</h2>\n            <p className=\"text-muted-foreground mb-6 text-center\">\n              Unable to load authentication. Please refresh the page or try again later.\n            </p>\n            <Button \n              className=\"w-full\" \n              onClick={() => window.location.reload()}\n            >\n              Refresh Page\n            </Button>\n          </Card>\n        </div>\n      </Layout>\n    );\n  }\n};\n\nexport default function MarketInsightsPage() {\n  const [activeTab, setActiveTab] = useState('insights');\n  const { user, profile } = useAuth();\n\n  return (\n    <AuthContextChecker>\n      <Layout>\n        <PageTransition>\n          <div className=\"flex flex-col w-full\">\n            {/* Hero section with responsive height */}\n            <HeroSection\n              title=\"Property Market Insights & Analysis\"\n              subtitle=\"Expert analysis, regional comparisons, and investment recommendations to guide your property decisions\"\n              showSearch={false}\n              showStats={false}\n              height=\"h-[300px] sm:h-[350px] md:h-[400px]\"\n            />\n\n            {/* Container with proper padding for mobile */}\n            <div className=\"container mx-auto px-4 py-4 sm:py-6\">\n              <Tabs \n                defaultValue=\"insights\" \n                value={activeTab}\n                onValueChange={setActiveTab}\n                className=\"w-full\"\n              >\n                {/* Responsive tabs list */}\n                <TabsList className=\"w-full mb-4 sm:mb-6 grid grid-cols-2\">\n                  <TabsTrigger value=\"insights\" className=\"text-sm sm:text-base\">Market Insights</TabsTrigger>\n                  <TabsTrigger value=\"visualization\" className=\"text-sm sm:text-base\">Data Visualization</TabsTrigger>\n                </TabsList>\n                \n                <TabsContent value=\"insights\" className=\"mt-0\">\n                  <MarketInsights \n                    user={user} \n                    profile={profile} \n                    className=\"mt-0\"\n                    showHero={false}\n                  />\n                </TabsContent>\n                \n                <TabsContent value=\"visualization\" className=\"mt-0\">\n                  <DataVisualization user={user} profile={profile} />\n                </TabsContent>\n              </Tabs>\n            </div>\n          </div>\n        </PageTransition>\n      </Layout>\n    </AuthContextChecker>\n  );\n}\n","import { useState } from 'react';\n\n// Interface for chat responses\nexport interface ChatResponse {\n  content: string;\n  role: string;\n}\n\n// Function to get chat response with fallback\nexport async function getChatResponse(prompt: string): Promise<string> {\n  try {\n    // First try to call the API\n    console.log(\"Calling chat API with prompt:\", prompt);\n    \n    // Check if we're in development mode and should use mock data\n    if (process.env.NODE_ENV === 'development' || import.meta.env.VITE_USE_MOCK_AI === 'true') {\n      return getMockChatResponse(prompt);\n    }\n    \n    // Update the API URL to use the correct Gemini endpoint and version\n    const apiKey = import.meta.env.VITE_GEMINI_API_KEY;\n    const apiUrl = 'https://generativelanguage.googleapis.com/v1beta/models/gemini-1.5-pro:generateContent';\n    \n    const response = await fetch(`${apiUrl}?key=${apiKey}`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        contents: [\n          {\n            parts: [\n              {\n                text: prompt\n              }\n            ]\n          }\n        ],\n        generationConfig: {\n          temperature: 0.7,\n          maxOutputTokens: 1024,\n        }\n      })\n    });\n    \n    if (!response.ok) {\n      console.error(\"API error:\", response.status, await response.text());\n      throw new Error(`API error: ${response.status} - ${await response.text()}`);\n    }\n    \n    const data = await response.json();\n    const content = data.candidates?.[0]?.content?.parts?.[0]?.text || \n                   \"Sorry, I couldn't generate a response at this time.\";\n                   \n    return content;\n  } catch (error) {\n    console.error(\"Error getting chat response:\", error);\n    \n    // Fall back to mock response\n    return getMockChatResponse(prompt);\n  }\n}\n\n// Function to get predictive analytics with fallback\nexport async function getPredictiveAnalytics(location: string): Promise<any> {\n  try {\n    console.log(\"Getting predictive analytics for location:\", location);\n    \n    // Use mock data in development mode\n    if (process.env.NODE_ENV === 'development' || import.meta.env.VITE_USE_MOCK_AI === 'true') {\n      return getMockPredictiveAnalytics(location);\n    }\n    \n    // Update API endpoint to match the current Gemini structure\n    const apiKey = import.meta.env.VITE_GEMINI_API_KEY;\n    const apiUrl = 'https://generativelanguage.googleapis.com/v1beta/models/gemini-1.5-pro:generateContent';\n    \n    const prompt = `Generate predictive analytics for property investment in ${location} for the next 5 years. Include price growth predictions, rental yield trends, and market dynamics. Format as JSON with the following structure: {\n      \"priceGrowthPrediction\": { \"year1\": 2.5, \"year2\": 3.1, \"year3\": 3.5, \"year4\": 2.8, \"year5\": 3.0 },\n      \"rentalYieldTrend\": { \"year1\": 5.2, \"year2\": 5.3, \"year3\": 5.4, \"year4\": 5.3, \"year5\": 5.2 },\n      \"marketSummary\": \"Brief summary of market dynamics\",\n      \"keyFactors\": [\"Factor 1\", \"Factor 2\", \"Factor 3\"]\n    }`;\n    \n    const response = await fetch(`${apiUrl}?key=${apiKey}`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        contents: [\n          {\n            parts: [\n              {\n                text: prompt\n              }\n            ]\n          }\n        ],\n        generationConfig: {\n          temperature: 0.2,\n          maxOutputTokens: 1024,\n        }\n      })\n    });\n    \n    if (!response.ok) {\n      throw new Error(`API response was not ok`);\n    }\n    \n    const data = await response.json();\n    const content = data.candidates?.[0]?.content?.parts?.[0]?.text || null;\n    \n    if (!content) throw new Error(\"No content returned from API\");\n    \n    // Extract JSON from the response\n    let jsonMatch = content.match(/```json\\n([\\s\\S]*?)\\n```/) || \n                    content.match(/```([\\s\\S]*?)```/) ||\n                    content.match(/(\\{[\\s\\S]*\\})/);\n                    \n    if (jsonMatch && jsonMatch[1]) {\n      return JSON.parse(jsonMatch[1].trim());\n    } else {\n      // Try parsing the whole response if no JSON block is found\n      try {\n        return JSON.parse(content);\n      } catch (e) {\n        console.error(\"Error parsing predictive analytics:\", e);\n        return getMockPredictiveAnalytics(location);\n      }\n    }\n  } catch (error) {\n    console.error(\"Error fetching predictive analytics:\", error);\n    return getMockPredictiveAnalytics(location);\n  }\n}\n\n// Function to get investment hotspots with fallback\nexport async function getInvestmentHotspots(region: string): Promise<any> {\n  try {\n    console.log(\"Getting investment hotspots for region:\", region);\n    \n    // Use mock data in development mode\n    if (process.env.NODE_ENV === 'development' || import.meta.env.VITE_USE_MOCK_AI === 'true') {\n      return getMockHotspots(region);\n    }\n    \n    // Update API endpoint to match the current Gemini structure\n    const apiKey = import.meta.env.VITE_GEMINI_API_KEY;\n    const apiUrl = 'https://generativelanguage.googleapis.com/v1beta/models/gemini-1.5-pro:generateContent';\n    \n    const prompt = `Generate a list of emerging property investment hotspots in ${region} with reasons why they are promising. Format as JSON with the following structure: \n    {\n      \"hotspots\": [\n        {\n          \"area\": \"Area name\",\n          \"growthPotential\": 4.2,\n          \"reasons\": [\"Reason 1\", \"Reason 2\"],\n          \"estimatedROI\": 5.8,\n          \"investmentType\": \"Buy-to-let\"\n        }\n      ]\n    }\n    Include 3-5 different hotspots.`;\n    \n    const response = await fetch(`${apiUrl}?key=${apiKey}`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        contents: [\n          {\n            parts: [\n              {\n                text: prompt\n              }\n            ]\n          }\n        ],\n        generationConfig: {\n          temperature: 0.3,\n          maxOutputTokens: 1024,\n        }\n      })\n    });\n    \n    if (!response.ok) {\n      throw new Error(`API response was not ok`);\n    }\n    \n    const data = await response.json();\n    const content = data.candidates?.[0]?.content?.parts?.[0]?.text || null;\n    \n    if (!content) throw new Error(\"No content returned from API\");\n    \n    // Extract JSON from the response\n    let jsonMatch = content.match(/```json\\n([\\s\\S]*?)\\n```/) || \n                    content.match(/```([\\s\\S]*?)```/) ||\n                    content.match(/(\\{[\\s\\S]*\\})/);\n                    \n    if (jsonMatch && jsonMatch[1]) {\n      return JSON.parse(jsonMatch[1].trim());\n    } else {\n      // Try parsing the whole response if no JSON block is found\n      try {\n        return JSON.parse(content);\n      } catch (e) {\n        console.error(\"Failed to parse hotspots:\", e);\n        return getMockHotspots(region);\n      }\n    }\n  } catch (error) {\n    console.error(\"Failed to fetch hotspots:\", error);\n    return getMockHotspots(region);\n  }\n}\n\n// Mock functions to provide fallback data\nfunction getMockChatResponse(prompt: string): string {\n  if (prompt.includes(\"market insights\")) {\n    return \"Based on recent data, the property market in this area has shown strong growth over the past 12 months. Average prices have increased by approximately 7.3%, which is above the national average of 4.5%. Rental yields remain competitive at around 5.2% for typical properties. The local economy is benefiting from new infrastructure projects and employment opportunities, which should provide continued stability. Demand currently exceeds supply, especially for 2-3 bedroom properties, creating a seller's market. Analysts predict continued but more moderate growth over the next 24 months.\";\n  } else if (prompt.includes(\"investment advice\")) {\n    return \"For property investors looking at this market, there are several strategies worth considering:\\n\\n1. Buy-to-let opportunities are particularly strong in the north and east neighborhoods, where rental demand from young professionals is high.\\n\\n2. Properties requiring renovation can offer significant value-add opportunities, with potential for 15-20% equity gains after improvements.\\n\\n3. The local council has approved new development zones which may present off-plan purchase opportunities with favorable terms.\\n\\n4. Houses with potential for extension or conversion to multiple units can maximize returns in areas with strict planning constraints.\\n\\n5. Consider the strong local university market for HMO investments, which typically yield 2-3% higher than standard rentals.\";\n  } else {\n    return \"The current property market shows mixed signals. While some areas continue to see price growth, others have stabilized. Factors influencing the market include interest rate changes, supply constraints, and evolving work patterns affecting location preferences. For specific investment advice, consider local economic indicators, infrastructure developments, and demographic trends particular to your target area.\";\n  }\n}\n\nfunction getMockPredictiveAnalytics(location: string): any {\n  return {\n    priceGrowthPrediction: {\n      year1: 3.2,\n      year2: 3.5,\n      year3: 4.1,\n      year4: 3.8,\n      year5: 3.9\n    },\n    rentalYieldTrend: {\n      year1: 5.3,\n      year2: 5.4,\n      year3: 5.5,\n      year4: 5.4,\n      year5: 5.3\n    },\n    marketSummary: `The property market in ${location} shows promising growth potential over the next 5 years, supported by infrastructure development and increasing demand. While some volatility is expected in years 2-3, the overall trajectory remains positive.`,\n    keyFactors: [\n      \"New transportation links improving connectivity\",\n      \"Growing tech sector bringing high-income professionals to the area\",\n      \"Limited new housing supply in development pipeline\",\n      \"Strong rental demand from young professionals\",\n      \"Government stimulus for first-time buyers\"\n    ]\n  };\n}\n\nfunction getMockHotspots(region: string): any {\n  return {\n    hotspots: [\n      {\n        area: `${region} - North District`,\n        growthPotential: 4.7,\n        reasons: [\n          \"New tech hub development creating employment\",\n          \"Improved transport links reducing commute times\",\n          \"Regeneration project transforming former industrial areas\"\n        ],\n        estimatedROI: 6.2,\n        investmentType: \"Buy-to-let apartments\"\n      },\n      {\n        area: `${region} - Riverside`,\n        growthPotential: 5.1,\n        reasons: [\n          \"Waterfront development project nearing completion\",\n          \"Limited supply of premium properties\",\n          \"Growing demand from young professionals\"\n        ],\n        estimatedROI: 5.8,\n        investmentType: \"Luxury apartments\"\n      },\n      {\n        area: `${region} - University Area`,\n        growthPotential: 3.9,\n        reasons: [\n          \"Consistent student housing demand\",\n          \"University expansion plans announced\",\n          \"Improving local amenities and nightlife\"\n        ],\n        estimatedROI: 7.3,\n        investmentType: \"HMO for students\"\n      },\n      {\n        area: `${region} - Central Village`,\n        growthPotential: 4.5,\n        reasons: [\n          \"Character properties with renovation potential\",\n          \"Growing tourism supporting short-term rentals\",\n          \"New boutique retail and restaurant scene\"\n        ],\n        estimatedROI: 6.5,\n        investmentType: \"Period conversions\"\n      }\n    ]\n  };\n}\n\n// React hook for using chat responses\nexport function useChat() {\n  const [isLoading, setIsLoading] = useState(false);\n  const [response, setResponse] = useState<string | null>(null);\n  const [error, setError] = useState<string | null>(null);\n\n  const sendMessage = async (message: string) => {\n    setIsLoading(true);\n    setError(null);\n    \n    try {\n      const response = await getChatResponse(message);\n      setResponse(response);\n      return response;\n    } catch (err) {\n      const errorMessage = err instanceof Error ? err.message : 'Unknown error occurred';\n      setError(errorMessage);\n      return null;\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return {\n    sendMessage,\n    response,\n    isLoading,\n    error\n  };\n}\n\nexport const popularQuestions = [\n  \"Calculate stamp duty for a £400,000 property\",\n  \"What are typical legal fees for property purchase?\",\n  \"Explain all costs involved in buying a property\",\n  \"How much should I budget for property maintenance?\",\n  \"What surveys do I need when buying a property?\",\n  \"Calculate monthly mortgage payments for £300,000\",\n];\n\nexport const formatMessage = (response: any) => {\n  // Check if we got an error response\n  if (!response.success === false) {\n    return `<span class=\"block text-red-500\">${response.message}</span>`;\n  }\n\n  const text = typeof response === 'string' ? response : response.message;\n\n  // Replace **bold** with styled spans\n  let formattedText = text.replace(\n    /\\*\\*(.*?)\\*\\*/g,\n    '<span class=\"font-bold\">$1</span>'\n  );\n  \n  // Replace *italic* with styled spans\n  formattedText = formattedText.replace(\n    /\\*(.*?)\\*/g,\n    '<span class=\"italic\">$1</span>'\n  );\n  \n  // Replace bullet points\n  formattedText = formattedText.replace(\n    /^- (.+)$/gm,\n    '<span class=\"block ml-2\">• $1</span>'\n  );\n  \n  // Replace numbered lists\n  formattedText = formattedText.replace(\n    /^\\d+\\. (.+)$/gm,\n    '<span class=\"block ml-2\">$&</span>'\n  );\n\n  // Split by newlines and wrap in spans\n  return formattedText.split('\\n').map((line, i) => (\n    line ? `<span class=\"block\">${line}</span>` : '<span class=\"block h-2\"></span>'\n  )).join('');\n};\n\n","import { useState, useEffect } from \"react\";\nimport { Card, CardContent, CardHeader } from \"./ui/card\";\nimport { Button } from \"./ui/button\";\nimport { ArrowRight, TrendingUp, Home, PoundSterling, RefreshCw } from \"lucide-react\";\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"./ui/tabs\";\nimport {\n  LineChart,\n  Line,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  ResponsiveContainer,\n  AreaChart,\n  Area,\n} from \"recharts\";\nimport { getChatResponse, formatMessage, getPredictiveAnalytics, getInvestmentHotspots } from \"../lib/chat\";\nimport { formatCurrency } from \"../lib/utils\";\nimport { Badge } from \"./ui/badge\";\nimport HeroSection from \"./HeroSection\";\n\ninterface MarketTrendsProps {\n  trends?: Array<{\n    title: string;\n    value: string;\n    change: string;\n    isPositive: boolean;\n  }>;\n  articles?: Array<{\n    title: string;\n    excerpt: string;\n    date: string;\n  }>;\n  user?: any;\n  profile?: any;\n}\n\n// Add this type for the heatmap data\ninterface RegionData {\n  name: string;\n  priceGrowth: number;\n  averagePrice: number;\n  transactions: number;\n}\n\ninterface PredictiveData {\n  region: string;\n  currentValue: number;\n  predictedValue: number;\n  confidence: number;\n  growthFactors: string[];\n}\n\ninterface HotspotData {\n  area: string;\n  score: number;\n  factors: string[];\n  predictedGrowth: number;\n  investmentType: 'Residential' | 'Commercial' | 'Mixed';\n}\n\nconst MarketTrends = ({\n  trends = [\n    {\n      title: \"Average Home Price\",\n      value: \"£450,000\",\n      change: \"+5.2%\",\n      isPositive: true,\n    },\n    {\n      title: \"Days on Market\",\n      value: \"28\",\n      change: \"-12%\",\n      isPositive: true,\n    },\n    {\n      title: \"Available Listings\",\n      value: \"1,234\",\n      change: \"-3.1%\",\n      isPositive: false,\n    },\n  ],\n  articles = [\n    {\n      title: \"Understanding the Current Real Estate Market\",\n      excerpt:\n        \"Get insights into the latest trends and what they mean for buyers and sellers.\",\n      date: \"2024-03-15\",\n    },\n    {\n      title: \"Top 5 Investment Opportunities in Real Estate\",\n      excerpt:\n        \"Discover the most promising areas for property investment in the current market.\",\n      date: \"2024-03-10\",\n    },\n    {\n      title: \"Real Estate Market Forecast 2024\",\n      excerpt:\n        \"Expert predictions and analysis for the upcoming year in real estate.\",\n      date: \"2024-03-05\",\n    },\n  ],\n  user,\n  profile\n}: MarketTrendsProps) => {\n  // Sample data for charts\n  const priceData = [\n    { month: \"Jan\", price: 450000 },\n    { month: \"Feb\", price: 455000 },\n    { month: \"Mar\", price: 458000 },\n    { month: \"Apr\", price: 462000 },\n    { month: \"May\", price: 470000 },\n    { month: \"Jun\", price: 475000 },\n  ];\n\n  const regionalData = [\n    { region: \"London\", price: 500000, growth: 5.2 },\n    { region: \"Manchester\", price: 250000, growth: 7.8 },\n    { region: \"Birmingham\", price: 220000, growth: 6.5 },\n    { region: \"Leeds\", price: 200000, growth: 8.1 },\n    { region: \"Liverpool\", price: 180000, growth: 9.2 },\n  ];\n\n  // Add this data near your other sample data\n  const heatmapData: RegionData[] = [\n    { name: \"London\", priceGrowth: 5.2, averagePrice: 500000, transactions: 1200 },\n    { name: \"South East\", priceGrowth: 4.8, averagePrice: 375000, transactions: 950 },\n    { name: \"South West\", priceGrowth: 4.5, averagePrice: 310000, transactions: 780 },\n    { name: \"East of England\", priceGrowth: 4.2, averagePrice: 325000, transactions: 820 },\n    { name: \"West Midlands\", priceGrowth: 6.1, averagePrice: 240000, transactions: 680 },\n    { name: \"East Midlands\", priceGrowth: 5.8, averagePrice: 225000, transactions: 650 },\n    { name: \"Yorkshire\", priceGrowth: 7.2, averagePrice: 195000, transactions: 720 },\n    { name: \"North West\", priceGrowth: 8.1, averagePrice: 205000, transactions: 850 },\n    { name: \"North East\", priceGrowth: 6.5, averagePrice: 155000, transactions: 480 },\n    { name: \"Wales\", priceGrowth: 5.9, averagePrice: 185000, transactions: 520 },\n    { name: \"Scotland\", priceGrowth: 5.4, averagePrice: 175000, transactions: 680 },\n  ];\n\n  // Add this SVG map component\n  const UKMap = ({ data }: { data: RegionData[] }) => {\n    return (\n      <div className=\"relative w-full h-full flex items-center justify-center\">\n        <svg\n          viewBox=\"0 0 500 800\"\n          className=\"w-full h-full max-h-[400px]\"\n          style={{ maxWidth: '300px' }}\n        >\n          {/* Simple UK regions - basic shapes for visualization */}\n          {[\n            { path: \"M250,600 L300,550 L350,600 L300,650 Z\", name: \"London\" },\n            { path: \"M200,500 L300,450 L350,500 L250,550 Z\", name: \"South East\" },\n            { path: \"M150,450 L250,400 L300,450 L200,500 Z\", name: \"South West\" },\n            { path: \"M300,450 L400,400 L450,450 L350,500 Z\", name: \"East of England\" },\n            { path: \"M200,350 L300,300 L350,350 L250,400 Z\", name: \"West Midlands\" },\n            { path: \"M300,350 L400,300 L450,350 L350,400 Z\", name: \"East Midlands\" },\n            { path: \"M200,250 L300,200 L350,250 L250,300 Z\", name: \"Yorkshire\" },\n            { path: \"M150,200 L250,150 L300,200 L200,250 Z\", name: \"North West\" },\n            { path: \"M250,150 L350,100 L400,150 L300,200 Z\", name: \"North East\" },\n            { path: \"M100,350 L200,300 L250,350 L150,400 Z\", name: \"Wales\" },\n            { path: \"M150,100 L300,50 L350,100 L200,150 Z\", name: \"Scotland\" },\n          ].map((region) => {\n            const regionData = data.find(d => d.name === region.name);\n            const growth = regionData?.priceGrowth || 0;\n            return (\n              <g key={region.name}>\n                <path\n                  d={region.path}\n                  fill={`hsl(${120 * (growth / 10)}, 70%, 50%)`}\n                  stroke=\"white\"\n                  strokeWidth=\"2\"\n                  className=\"transition-colors duration-300 hover:brightness-110 cursor-pointer\"\n                />\n                <title>{`${region.name}: +${growth}%`}</title>\n              </g>\n            );\n          })}\n        </svg>\n      </div>\n    );\n  };\n\n  const [marketInsights, setMarketInsights] = useState<string>(\"\");\n  const [isLoadingInsights, setIsLoadingInsights] = useState(false);\n  const [refreshingInsights, setRefreshingInsights] = useState(false);\n\n  const fetchMarketInsights = async (location: string) => {\n    setIsLoadingInsights(true);\n    try {\n      const response = await getChatResponse(\n        `Provide a concise market insight for property investment in ${location} with recent price trends, rental yields, and future outlook. Keep it under 200 words.`\n      );\n      setMarketInsights(response);\n    } catch (error) {\n      console.error(\"Error fetching market insights:\", error);\n      setMarketInsights(\n        \"We're currently experiencing some issues retrieving market insights. Please try again later or contact support if the problem persists.\"\n      );\n    } finally {\n      setIsLoadingInsights(false);\n    }\n  };\n\n  const [predictiveData, setPredictiveData] = useState<PredictiveData[]>([]);\n  const [hotspots, setHotspots] = useState<HotspotData[]>([]);\n  const [isLoadingAnalytics, setIsLoadingAnalytics] = useState(false);\n  const [refreshingPredictions, setRefreshingPredictions] = useState(false);\n  const [refreshingHotspots, setRefreshingHotspots] = useState(false);\n  const [isLoadingHotspots, setIsLoadingHotspots] = useState(false);\n\n  const fetchPredictiveAnalytics = async (location: string) => {\n    setIsLoadingAnalytics(true);\n    try {\n      const data = await getPredictiveAnalytics(location);\n      \n      // Check if we got an array or transform the object into an array format\n      if (Array.isArray(data)) {\n        setPredictiveData(data);\n      } else if (data.regions && Array.isArray(data.regions)) {\n        // If the API returns data in a different format with regions array\n        setPredictiveData(data.regions);\n      } else {\n        // Transform the object into an array with a single entry for fallback\n        const transformedData = [\n          {\n            region: location || \"United Kingdom\",\n            currentValue: 350000,\n            predictedValue: 350000 * (1 + (data.priceGrowthPrediction?.year1 || 3.2) / 100),\n            confidence: 85,\n            growthFactors: data.keyFactors || [\"Data temporarily unavailable\"]\n          }\n        ];\n        setPredictiveData(transformedData);\n      }\n    } catch (error) {\n      console.error(\"Error fetching predictive analytics:\", error);\n      // Set fallback data structure as an array with one element\n      setPredictiveData([\n        {\n          region: location || \"United Kingdom\",\n          currentValue: 350000,\n          predictedValue: 361200, // 3.2% growth\n          confidence: 75,\n          growthFactors: [\n            \"Data temporarily unavailable\",\n            \"Please try again later\"\n          ]\n        }\n      ]);\n    } finally {\n      setIsLoadingAnalytics(false);\n    }\n  };\n\n  const fetchHotspots = async (region: string) => {\n    setIsLoadingHotspots(true);\n    try {\n      const data = await getInvestmentHotspots(region);\n      \n      // Check if we got hotspots array directly or it's nested in a property\n      if (Array.isArray(data)) {\n        // Ensure each hotspot has a factors array\n        const safeHotspots = data.map(hotspot => ({\n          ...hotspot,\n          factors: hotspot.factors || []\n        }));\n        setHotspots(safeHotspots);\n      } else if (data.hotspots && Array.isArray(data.hotspots)) {\n        // Ensure each hotspot has a factors array\n        const safeHotspots = data.hotspots.map(hotspot => ({\n          ...hotspot,\n          factors: hotspot.factors || []\n        }));\n        setHotspots(safeHotspots);\n      } else {\n        // Fallback with empty array if data is not in expected format\n        console.warn(\"Hotspots data is not in expected format:\", data);\n        setHotspots([]);\n      }\n    } catch (error) {\n      console.error(\"Error fetching hotspots:\", error);\n      // Use fallback data structure\n      setHotspots([\n        {\n          area: `${region} - North District`,\n          score: 75,\n          predictedGrowth: 4.2,\n          factors: [\n            \"Data currently unavailable\",\n            \"Try again later\"\n          ],\n          investmentType: \"Residential\"\n        },\n        {\n          area: `${region} - Central Area`,\n          score: 68,\n          predictedGrowth: 3.8,\n          factors: [\n            \"Data currently unavailable\",\n            \"Try again later\"\n          ],\n          investmentType: \"Commercial\"\n        }\n      ]);\n    } finally {\n      setIsLoadingHotspots(false);\n    }\n  };\n\n  const handleRefreshInsights = async () => {\n    setRefreshingInsights(true);\n    await fetchMarketInsights(\"United Kingdom\");\n    setRefreshingInsights(false);\n  };\n\n  const handleRefreshPredictions = async () => {\n    setRefreshingPredictions(true);\n    await fetchPredictiveAnalytics(\"United Kingdom\");\n    setRefreshingPredictions(false);\n  };\n\n  const handleRefreshHotspots = async () => {\n    setRefreshingHotspots(true);\n    await fetchHotspots(\"United Kingdom\");\n    setRefreshingHotspots(false);\n  };\n\n  const [bitcoinPrice, setBitcoinPrice] = useState<number | null>(null);\n  const [error, setError] = useState<string | null>(null);\n  const [bitcoinLoading, setBitcoinLoading] = useState(true);\n\n  const fetchBitcoinPrice = async () => {\n    try {\n      setBitcoinLoading(true);\n      const response = await fetch(\n        'https://api.coingecko.com/api/v3/simple/price?ids=bitcoin&vs_currencies=gbp'\n      );\n      \n      if (!response.ok) {\n        throw new Error('Failed to fetch Bitcoin price');\n      }\n\n      const data = await response.json();\n      setBitcoinPrice(data.bitcoin.gbp);\n      setError(null);\n    } catch (err) {\n      console.error('Error fetching Bitcoin price:', err);\n      setError('Failed to load Bitcoin price');\n      setBitcoinPrice(null);\n    } finally {\n      setBitcoinLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    // Load initial data\n    fetchMarketInsights(\"United Kingdom\");\n    fetchPredictiveAnalytics(\"United Kingdom\");\n    fetchHotspots(\"United Kingdom\");\n    fetchBitcoinPrice();\n    \n    // Optional: setup refresh interval\n    const refreshInterval = setInterval(() => {\n      fetchBitcoinPrice();\n    }, 60000); // Refresh Bitcoin price every minute\n    \n    return () => clearInterval(refreshInterval);\n  }, []);\n\n  return (\n    <>\n      {/* Hero Section for Market Trends */}\n      <HeroSection\n        title=\"Property Market Trends & Insights\"\n        subtitle=\"Discover the latest market data, price forecasts, and investment hotspots to make informed property decisions\"\n        showSearch={false}\n        showStats={false}\n        height=\"h-[400px]\"\n      />\n      \n      <section className=\"w-full py-8 sm:py-16 bg-background relative overflow-hidden\">\n        <div className=\"container mx-auto px-4 mb-16\">\n          <Card className=\"bg-card border-border\">\n            <CardHeader>\n              <h2 className=\"text-2xl font-semibold\">\n                Real Estate Trends Visualization\n              </h2>\n            </CardHeader>\n            <CardContent>\n              <Tabs defaultValue=\"overview\" className=\"w-full\">\n                <TabsList className=\"w-full mb-8\">\n                  <div className=\"grid w-full grid-cols-1 sm:grid-cols-3 gap-2\">\n                    <TabsTrigger value=\"overview\" className=\"w-full\">\n                      Price Evolution\n                    </TabsTrigger>\n                    <TabsTrigger value=\"regional\" className=\"w-full\">\n                      Regional Comparison\n                    </TabsTrigger>\n                    <TabsTrigger value=\"heatmap\" className=\"w-full\">\n                      Growth Heatmap\n                    </TabsTrigger>\n                  </div>\n                </TabsList>\n\n                <TabsContent value=\"overview\" className=\"h-[400px]\">\n                  <ResponsiveContainer width=\"100%\" height=\"100%\">\n                    <AreaChart data={priceData}>\n                      <defs>\n                        <linearGradient\n                          id=\"colorPrice\"\n                          x1=\"0\"\n                          y1=\"0\"\n                          x2=\"0\"\n                          y2=\"1\"\n                        >\n                          <stop\n                            offset=\"5%\"\n                            stopColor=\"hsl(var(--primary))\"\n                            stopOpacity={0.2}\n                          />\n                          <stop\n                            offset=\"95%\"\n                            stopColor=\"hsl(var(--primary))\"\n                            stopOpacity={0}\n                          />\n                        </linearGradient>\n                      </defs>\n                      <CartesianGrid strokeDasharray=\"3 3\" />\n                      <XAxis dataKey=\"month\" />\n                      <YAxis />\n                      <Tooltip />\n                      <Area\n                        type=\"monotone\"\n                        dataKey=\"price\"\n                        stroke=\"hsl(var(--primary))\"\n                        fillOpacity={1}\n                        fill=\"url(#colorPrice)\"\n                      />\n                    </AreaChart>\n                  </ResponsiveContainer>\n                </TabsContent>\n\n                <TabsContent value=\"regional\" className=\"h-[400px]\">\n                  <ResponsiveContainer width=\"100%\" height=\"100%\">\n                    <LineChart data={regionalData}>\n                      <CartesianGrid strokeDasharray=\"3 3\" />\n                      <XAxis dataKey=\"region\" />\n                      <YAxis />\n                      <Tooltip />\n                      <Line\n                        type=\"monotone\"\n                        dataKey=\"price\"\n                        stroke=\"hsl(var(--primary))\"\n                      />\n                      <Line\n                        type=\"monotone\"\n                        dataKey=\"growth\"\n                        stroke=\"hsl(var(--chart-1))\"\n                      />\n                    </LineChart>\n                  </ResponsiveContainer>\n                </TabsContent>\n\n                <TabsContent\n                  value=\"heatmap\"\n                  className=\"h-[400px] overflow-y-auto\"\n                >\n                  <div className=\"h-full grid grid-cols-1 lg:grid-cols-2 gap-6\">\n                    <div className=\"space-y-4 min-h-[300px]\">\n                      <h3 className=\"font-semibold text-lg sticky top-0 bg-background border-b py-2 px-2 rounded-t-lg\">\n                        Regional Price Growth\n                      </h3>\n                      <div className=\"space-y-2 overflow-y-auto px-2\">\n                        {heatmapData\n                          .sort((a, b) => b.priceGrowth - a.priceGrowth)\n                          .map((region) => (\n                            <div\n                              key={region.name}\n                              className=\"flex items-center justify-between p-2 rounded-lg hover:bg-muted/50 transition-colors\"\n                            >\n                              <div className=\"flex items-center gap-3\">\n                                <div\n                                  className=\"w-2 h-8 rounded-full\"\n                                  style={{\n                                    backgroundColor: `hsl(${\n                                      120 * (region.priceGrowth / 10)\n                                    }, 70%, 50%)`,\n                                  }}\n                                />\n                                <div>\n                                  <p className=\"font-medium\">{region.name}</p>\n                                  <p className=\"text-sm text-muted-foreground\">\n                                    £{region.averagePrice.toLocaleString()}\n                                  </p>\n                                </div>\n                              </div>\n                              <div className=\"text-right\">\n                                <p className=\"font-bold text-emerald-500\">\n                                  +{region.priceGrowth}%\n                                </p>\n                                <p className=\"text-sm text-muted-foreground\">\n                                  {region.transactions} sales\n                                </p>\n                              </div>\n                            </div>\n                          ))}\n                      </div>\n                    </div>\n                    <div className=\"relative hidden lg:flex items-center justify-center bg-muted/30 rounded-xl min-h-[300px]\">\n                      <UKMap data={heatmapData} />\n                    </div>\n                  </div>\n                </TabsContent>\n              </Tabs>\n            </CardContent>\n          </Card>\n        </div>\n\n        <div className=\"container mx-auto px-4 mb-16\">\n          <Card className=\"bg-card border-border relative ai-border-animation\">\n            <CardHeader className=\"flex flex-row items-center justify-between\">\n              <h2 className=\"text-2xl font-semibold\">AI Market Analysis</h2>\n              <Button\n                variant=\"ghost\"\n                size=\"icon\"\n                onClick={handleRefreshInsights}\n                className={`h-8 w-8 ${refreshingInsights ? 'animate-spin' : ''}`}\n                disabled={refreshingInsights || isLoadingInsights}\n              >\n                <RefreshCw className=\"h-4 w-4\" />\n              </Button>\n            </CardHeader>\n            <CardContent>\n              {isLoadingInsights ? (\n                <div className=\"flex items-center justify-center p-8\">\n                  <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-primary\"></div>\n                </div>\n              ) : (\n                <div \n                  className=\"prose prose-sm max-w-none\"\n                  dangerouslySetInnerHTML={{ __html: formatMessage(marketInsights) }}\n                />\n              )}\n            </CardContent>\n          </Card>\n        </div>\n\n        <div className=\"container mx-auto px-4 mb-16 grid gap-6 md:grid-cols-2\">\n          {/* Predictive Analytics Card */}\n          <Card className=\"bg-card border-border relative ai-border-animation\">\n            <CardHeader className=\"flex flex-row items-center justify-between\">\n              <h2 className=\"text-2xl font-semibold\">Predictive Market Analytics</h2>\n              <Button\n                variant=\"ghost\"\n                size=\"icon\"\n                onClick={handleRefreshPredictions}\n                className={`h-8 w-8 ${refreshingPredictions ? 'animate-spin' : ''}`}\n                disabled={refreshingPredictions || isLoadingAnalytics}\n              >\n                <RefreshCw className=\"h-4 w-4\" />\n              </Button>\n            </CardHeader>\n            <CardContent>\n              {isLoadingAnalytics ? (\n                <div className=\"flex items-center justify-center p-8\">\n                  <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-primary\"></div>\n                </div>\n              ) : (\n                <div className=\"space-y-4\">\n                  {predictiveData.map((prediction, index) => (\n                    <div key={index} className=\"p-4 rounded-lg bg-muted/50\">\n                      <div className=\"flex items-center justify-between mb-3\">\n                        <h3 className=\"font-semibold text-lg\">{prediction.region}</h3>\n                        <div className=\"text-sm font-medium text-emerald-500\">\n                          +{((prediction.predictedValue - prediction.currentValue) / prediction.currentValue * 100).toFixed(1)}%\n                        </div>\n                      </div>\n                      <div className=\"flex items-center gap-2 mb-3\">\n                        <div className=\"flex-1\">\n                          <div className=\"w-full bg-background rounded-full h-2\">\n                            <div\n                              className=\"bg-emerald-500 h-2 rounded-full\"\n                              style={{ width: `${prediction.confidence}%` }}\n                            />\n                          </div>\n                          <p className=\"text-xs text-muted-foreground mt-1\">Confidence: {prediction.confidence}%</p>\n                        </div>\n                      </div>\n                      <div className=\"text-sm text-muted-foreground\">\n                        {prediction.growthFactors && Array.isArray(prediction.growthFactors) && prediction.growthFactors.length > 0\n                          ? prediction.growthFactors[0]\n                          : \"No growth factors available\"}\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              )}\n            </CardContent>\n          </Card>\n\n          {/* Investment Hotspots Card */}\n          <Card className=\"bg-card border-border relative ai-border-animation\">\n            <CardHeader className=\"flex flex-row items-center justify-between\">\n              <h2 className=\"text-2xl font-semibold\">Emerging Investment Hotspots</h2>\n              <Button\n                variant=\"ghost\"\n                size=\"icon\"\n                onClick={handleRefreshHotspots}\n                className={`h-8 w-8 ${refreshingHotspots ? 'animate-spin' : ''}`}\n                disabled={refreshingHotspots || isLoadingHotspots}\n              >\n                <RefreshCw className=\"h-4 w-4\" />\n              </Button>\n            </CardHeader>\n            <CardContent>\n              {isLoadingHotspots ? (\n                <div className=\"flex justify-center items-center py-8\">\n                  <div className=\"animate-spin rounded-full h-8 w-8 border-t-2 border-b-2 border-primary\"></div>\n                </div>\n              ) : hotspots.length > 0 ? (\n                <div className=\"space-y-4\">\n                  {hotspots.map((hotspot, index) => (\n                    <div\n                      key={index}\n                      className=\"bg-card border rounded-lg p-4 hover:shadow-md transition-shadow\"\n                    >\n                      <div className=\"flex justify-between items-start\">\n                        <div>\n                          <h4 className=\"font-semibold text-lg mb-1\">\n                            {hotspot.area}\n                          </h4>\n                          <div className=\"flex items-center mb-2\">\n                            <span className=\"text-sm font-medium mr-2\">\n                              Investment Score:\n                            </span>\n                            <div className=\"h-2 w-24 bg-gray-200 rounded-full overflow-hidden\">\n                              <div\n                                className=\"h-full bg-primary\"\n                                style={{ width: `${hotspot.score}%` }}\n                              ></div>\n                            </div>\n                            <span className=\"ml-2 text-sm font-medium\">\n                              {hotspot.score}/100\n                            </span>\n                          </div>\n                        </div>\n                        <div className=\"flex items-center space-x-2\">\n                          <Badge className=\"bg-primary/80\">\n                            +{hotspot.predictedGrowth}% Growth\n                          </Badge>\n                          <Badge variant=\"outline\">\n                            {hotspot.investmentType}\n                          </Badge>\n                        </div>\n                      </div>\n                      <div className=\"mt-3\">\n                        <span className=\"text-sm font-medium\">Why Invest:</span>\n                        <ul className=\"mt-1 space-y-1\">\n                          {hotspot.factors && Array.isArray(hotspot.factors) ? (\n                            hotspot.factors.map((factor, idx) => (\n                              <li key={idx} className=\"text-sm flex items-start\">\n                                <ArrowRight className=\"h-4 w-4 mr-1 mt-1 text-primary\" />\n                                {factor}\n                              </li>\n                            ))\n                          ) : (\n                            <li className=\"text-sm flex items-start\">\n                              <ArrowRight className=\"h-4 w-4 mr-1 mt-1 text-primary\" />\n                              Data unavailable\n                            </li>\n                          )}\n                        </ul>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              ) : (\n                <div className=\"text-center py-8 text-muted-foreground\">\n                  No investment hotspots data available\n                </div>\n              )}\n            </CardContent>\n          </Card>\n        </div>\n\n        <div className=\"container mx-auto px-4 max-w-7xl\">\n          <div className=\"mb-12 text-center\">\n            <h2 className=\"text-3xl font-bold mb-4\">Market Trends & Insights</h2>\n            <p className=\"text-muted-foreground max-w-2xl mx-auto\">\n              Stay informed with the latest real estate market trends and expert\n              insights to make better property decisions.\n            </p>\n          </div>\n\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 mb-12\">\n            {trends.map((trend, index) => (\n              <Card\n                key={index}\n                className={`bg-card border-border hover:scale-[1.02] transition-all duration-300 ${index === 0 ? \"bg-gradient-to-r from-emerald-400/10 to-cyan-400/10\" : \"\"}`}\n              >\n                <CardContent className=\"p-6\">\n                  <div className=\"flex items-center justify-between mb-4\">\n                    <h3 className=\"text-sm font-medium text-foreground/80\">\n                      {trend.title}\n                    </h3>\n                    {index === 0 ? (\n                      <PoundSterling className=\"w-5 h-5 text-emerald-500\" />\n                    ) : index === 1 ? (\n                      <Home className=\"w-5 h-5 text-emerald-500\" />\n                    ) : (\n                      <TrendingUp className=\"w-5 h-5 text-emerald-500\" />\n                    )}\n                  </div>\n                  <div className=\"flex items-baseline justify-between\">\n                    <span className=\"text-2xl font-bold text-foreground\">\n                      {trend.value}\n                    </span>\n                    <span\n                      className={`flex items-center ${trend.isPositive ? \"text-emerald-500\" : \"text-red-500\"}`}\n                    >\n                      {trend.change}\n                    </span>\n                  </div>\n                </CardContent>\n              </Card>\n            ))}\n          </div>\n\n          <div className=\"container mx-auto px-4 mb-16 grid gap-6 md:grid-cols-3\">\n            {articles.map((article, index) => (\n              <Card\n                key={index}\n                className=\"bg-card border-border hover:scale-[1.02] transition-all duration-300\"\n              >\n                <CardHeader>\n                  <div className=\"flex items-center justify-between\">\n                    <h2 className=\"text-xl font-semibold\">{article.title}</h2>\n                    <span className=\"text-sm text-muted-foreground\">\n                      {new Date(article.date).toLocaleDateString(\"en-US\", {\n                        month: \"long\",\n                        day: \"numeric\",\n                        year: \"numeric\",\n                      })}\n                    </span>\n                  </div>\n                </CardHeader>\n                <CardContent>\n                  <p className=\"text-muted-foreground mb-4\">{article.excerpt}</p>\n                  <Button\n                    variant=\"ghost\"\n                    className=\"group hover:text-emerald-500\"\n                    onClick={() => {\n                      window.location.href = `/article/${encodeURIComponent(article.title)}`;\n                    }}\n                  >\n                    Read More\n                    <ArrowRight className=\"w-4 h-4 ml-2 group-hover:translate-x-1 transition-transform\" />\n                  </Button>\n                </CardContent>\n              </Card>\n            ))}\n          </div>\n\n          <div className=\"w-full bg-muted/50 py-12\">\n            <div className=\"max-w-[1200px] mx-auto px-4 sm:px-8\">\n              <h2 className=\"text-2xl font-bold mb-6\">Market Trends</h2>\n              <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n                <Card className=\"p-6\">\n                  <h3 className=\"text-lg font-semibold mb-2\">Bitcoin Price (GBP)</h3>\n                  {bitcoinLoading ? (\n                    <div className=\"animate-pulse h-8 bg-muted rounded\" />\n                  ) : error ? (\n                    <p className=\"text-red-500\">{error}</p>\n                  ) : bitcoinPrice ? (\n                    <p className=\"text-2xl font-bold\">{formatCurrency(bitcoinPrice)}</p>\n                  ) : (\n                    <p className=\"text-muted-foreground\">Price unavailable</p>\n                  )}\n                </Card>\n                {/* Add other market trend cards here */}\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n    </>\n  );\n};\n\nexport default MarketTrends;\n\n<style>\n{`\n  .ai-border-animation::before {\n    content: '';\n    position: absolute;\n    inset: -2px;\n    background: linear-gradient(90deg, #22c55e, #10b981, #059669, #22c55e);\n    background-size: 400% 400%;\n    z-index: -1;\n    border-radius: calc(var(--radius) + 4px);\n    animation: borderAnimation 3s ease infinite;\n  }\n\n  @keyframes borderAnimation {\n    0% {\n      background-position: 0% 50%;\n    }\n    50% {\n      background-position: 100% 50%;\n    }\n    100% {\n      background-position: 0% 50%;\n    }\n  }\n`}\n</style>\n","import React from \"react\";\nimport HeroSection from \"./HeroSection\";\nimport { useAuth } from \"../lib/auth\";\nimport MarketTrends from \"./MarketTrends\";\nimport { Layout } from \"./Layout\";\nimport { PageTransition } from \"./ui/page-transition\";\nimport { Card } from \"./ui/card\";\nimport { Button } from \"./ui/button\";\n\n// Auth context checker wrapper\nconst AuthContextChecker = ({ children }: { children: React.ReactNode }) => {\n  try {\n    // Try to access auth context but don't use the result\n    useAuth();\n    // If we get here, auth context is available\n    return <>{children}</>;\n  } catch (error) {\n    // If auth context is not available, show a fallback\n    return (\n      <Layout>\n        <div className=\"min-h-screen flex flex-col items-center justify-center p-4\">\n          <Card className=\"p-6 max-w-md w-full\">\n            <h2 className=\"text-xl font-bold mb-4 text-center\">Authentication Error</h2>\n            <p className=\"text-muted-foreground mb-6 text-center\">\n              Unable to load authentication. Please refresh the page or try again later.\n            </p>\n            <Button \n              className=\"w-full\" \n              onClick={() => window.location.reload()}\n            >\n              Refresh Page\n            </Button>\n          </Card>\n        </div>\n      </Layout>\n    );\n  }\n};\n\nconst MarketTrendsPage = () => {\n  return (\n    <AuthContextChecker>\n      <MarketTrendsContent />\n    </AuthContextChecker>\n  );\n};\n\n// Separate the main component content to ensure useAuth is only called when context is available\nconst MarketTrendsContent = () => {\n  const { user, profile } = useAuth();\n\n  return (\n    <Layout>\n      <PageTransition>\n        <div className=\"min-h-screen bg-background\">\n          <MarketTrends user={user} profile={profile} />\n        </div>\n      </PageTransition>\n    </Layout>\n  );\n};\n\nexport default MarketTrendsPage;\n","import React from \"react\";\nimport Header from \"./Header\";\nimport { useAuth } from \"../lib/auth\";\nimport { Card, CardContent } from \"./ui/card\";\nimport { Calendar, Clock } from \"lucide-react\";\n\ninterface ArticlePageProps {\n  title: string;\n  content: string;\n  date: string;\n  readTime?: string;\n}\n\nexport function ArticlePage({\n  title = \"Understanding the Current Real Estate Market\",\n  content = \"Default content\",\n  date = new Date().toISOString(),\n  readTime = \"5 min read\",\n}: ArticlePageProps) {\n  const { user, profile } = useAuth();\n\n  return (\n    <div className=\"min-h-screen bg-background\">\n      <Header isAuthenticated={!!user} userProfile={profile || undefined} />\n      <main className=\"container mx-auto px-4 py-8 pt-24\">\n        <div className=\"max-w-4xl mx-auto\">\n          <Card>\n            <CardContent className=\"p-8\">\n              <h1 className=\"text-3xl font-bold mb-4\">{title}</h1>\n\n              <div className=\"flex items-center gap-4 text-muted-foreground mb-8\">\n                <div className=\"flex items-center gap-2\">\n                  <Calendar className=\"w-4 h-4\" />\n                  <span>{new Date(date).toLocaleDateString()}</span>\n                </div>\n                <div className=\"flex items-center gap-2\">\n                  <Clock className=\"w-4 h-4\" />\n                  <span>{readTime}</span>\n                </div>\n              </div>\n\n              <div className=\"prose dark:prose-invert max-w-none\">\n                {content.split(\"\\n\\n\").map((paragraph, index) => (\n                  <p key={index} className=\"mb-4\">\n                    {paragraph}\n                  </p>\n                ))}\n              </div>\n            </CardContent>\n          </Card>\n        </div>\n      </main>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { Card, CardContent, CardFooter, CardHeader } from \"./ui/card\";\nimport { Badge } from \"./ui/badge\";\nimport { Button } from \"./ui/button\";\nimport { FileText, Download, Calendar, Tag, Eye } from \"lucide-react\";\nimport { formatDistance } from \"date-fns\";\nimport { Link, useNavigate } from \"react-router-dom\";\n\ninterface ResearchReportsProps {\n  user?: any;\n  profile?: any;\n}\n\n// Updated report data structure to include slugs\nconst reportData = [\n  {\n    id: 1,\n    title: \"UK Property Market Outlook 2024\",\n    slug: \"uk-property-market-outlook-2024\",\n    summary: \"Comprehensive analysis of the UK property market trends, investment opportunities, and forecasts for 2024.\",\n    date: \"2024-05-15\",\n    author: \"Property Analysis Team\",\n    category: \"Market Analysis\",\n    isPremium: true,\n  },\n  {\n    id: 2,\n    title: \"Regional Investment Hotspots\",\n    slug: \"regional-investment-hotspots\",\n    summary: \"Detailed report on emerging regional investment opportunities across the UK, with focus on yields and growth potential.\",\n    date: \"2024-04-22\",\n    author: \"Investment Research Division\",\n    category: \"Investment\",\n    isPremium: true,\n  },\n  {\n    id: 3,\n    title: \"First-Time Buyer Guide 2024\",\n    slug: \"first-time-buyer-guide-2024\",\n    summary: \"Essential information and advice for first-time buyers navigating the property market in 2024.\",\n    date: \"2024-03-10\",\n    author: \"Homebuyer Advisory Team\",\n    category: \"Guides\",\n    isPremium: false,\n  },\n];\n\nconst ResearchReports: React.FC<ResearchReportsProps> = ({ user, profile }) => {\n  const [reports, setReports] = useState<any[]>([]);\n  const [loading, setLoading] = useState(true);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    // Simulated fetch of research reports\n    const fetchReports = async () => {\n      try {\n        setLoading(true);\n        // This would be an API call in a real app\n        setTimeout(() => {\n          setReports(reportData);\n          setLoading(false);\n        }, 1000);\n      } catch (error) {\n        console.error(\"Error fetching research reports:\", error);\n        setLoading(false);\n      }\n    };\n\n    fetchReports();\n  }, []);\n\n  const isSubscriber = profile?.subscription_tier !== \"free\";\n\n  const handleViewReport = (report: any) => {\n    navigate(`/research/reports/${report.slug}`);\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n        {loading ? (\n          Array(3)\n            .fill(0)\n            .map((_, index) => (\n              <Card key={index} className=\"overflow-hidden\">\n                <div className=\"p-6 space-y-4\">\n                  <div className=\"h-6 bg-muted rounded animate-pulse w-3/4\"></div>\n                  <div className=\"h-24 bg-muted rounded animate-pulse\"></div>\n                  <div className=\"h-4 bg-muted rounded animate-pulse w-1/2\"></div>\n                </div>\n              </Card>\n            ))\n        ) : reports.length > 0 ? (\n          reports.map((report) => (\n            <Card key={report.id} className=\"overflow-hidden flex flex-col\">\n              <CardHeader className=\"flex flex-row items-start justify-between\">\n                <div className=\"space-y-1\">\n                  <h3 className=\"text-lg font-semibold\">{report.title}</h3>\n                  <div className=\"flex items-center gap-2 text-sm text-muted-foreground\">\n                    <Calendar className=\"h-4 w-4\" />\n                    <span>\n                      {formatDistance(new Date(report.date), new Date(), {\n                        addSuffix: true,\n                      })}\n                    </span>\n                  </div>\n                </div>\n                {report.isPremium && (\n                  <Badge\n                    variant=\"outline\"\n                    className=\"bg-primary/10 text-primary border-primary/20\"\n                  >\n                    Premium\n                  </Badge>\n                )}\n              </CardHeader>\n              <CardContent className=\"flex-grow\">\n                <p className=\"text-sm text-muted-foreground line-clamp-3\">\n                  {report.summary}\n                </p>\n                <div className=\"flex items-center gap-2 mt-4\">\n                  <Tag className=\"h-4 w-4 text-muted-foreground\" />\n                  <span className=\"text-xs font-medium text-muted-foreground\">\n                    {report.category}\n                  </span>\n                </div>\n              </CardContent>\n              <CardFooter className=\"border-t pt-4\">\n                {report.isPremium && !isSubscriber ? (\n                  <Button\n                    variant=\"outline\"\n                    className=\"w-full\"\n                    onClick={() => window.location.href = \"/pricing\"}\n                  >\n                    <FileText className=\"h-4 w-4 mr-2\" />\n                    Upgrade to Access\n                  </Button>\n                ) : (\n                  <Button \n                    className=\"w-full\" \n                    onClick={() => handleViewReport(report)}\n                  >\n                    <Eye className=\"h-4 w-4 mr-2\" />\n                    View Report\n                  </Button>\n                )}\n              </CardFooter>\n            </Card>\n          ))\n        ) : (\n          <div className=\"col-span-full text-center py-12\">\n            <FileText className=\"h-12 w-12 mx-auto text-muted-foreground mb-4\" />\n            <h3 className=\"text-lg font-medium mb-2\">No reports available</h3>\n            <p className=\"text-muted-foreground\">\n              There are currently no research reports available.\n            </p>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default ResearchReports;\n","import { supabase } from \"./supabaseClient\";\n\nexport interface Deal {\n  id: string;\n  title: string;\n  description: string;\n  location: string;\n  price: number;\n  roi_percentage: number;\n  investment_term: string;\n  property_type: string;\n  deal_type: string;\n  image_url: string;\n  created_at: string;\n  updated_at: string;\n}\n\nexport const getDeals = async (page = 1, limit = 6) => {\n  try {\n    const start = (page - 1) * limit;\n    \n    console.log('Fetching deals with params:', { page, limit, start });\n    \n    const { data, error } = await supabase\n      .from('deals')\n      .select(`\n        id,\n        title,\n        description,\n        location,\n        price,\n        roi_percentage,\n        investment_term,\n        property_type,\n        deal_type,\n        image_url,\n        created_at,\n        updated_at\n      `)\n      .range(start, start + limit - 1)\n      .order('created_at', { ascending: false });\n\n    console.log('Raw Supabase response:', { data, error });\n\n    if (error) {\n      console.error('Supabase query error:', error.message, error);\n      throw new Error(`Failed to fetch deals: ${error.message}`);\n    }\n\n    if (!data || data.length === 0) {\n      console.log('No deals found in database');\n      return [];\n    }\n\n    // Transform the data to match our Deal interface\n    const transformedData = data.map(deal => ({\n      id: deal.id,\n      title: deal.title,\n      description: deal.description,\n      location: deal.location,\n      price: Number(deal.price),\n      roi_percentage: Number(deal.roi_percentage),\n      investment_term: deal.investment_term,\n      property_type: deal.property_type,\n      deal_type: deal.deal_type,\n      image_url: deal.image_url,\n      created_at: deal.created_at,\n      updated_at: deal.updated_at\n    }));\n\n    console.log('Transformed deals:', transformedData);\n    return transformedData;\n  } catch (error) {\n    console.error('Error in getDeals:', error instanceof Error ? error.message : error);\n    throw error;\n  }\n};\n\nexport const searchDeals = async (searchTerm: string): Promise<Deal[]> => {\n  console.log('Searching deals with term:', searchTerm);\n  const term = searchTerm.toLowerCase().trim();\n\n  const { data, error } = await supabase\n    .from('deals')\n    .select(`\n      id,\n      title,\n      description,\n      location,\n      price,\n      roi_percentage,\n      investment_term,\n      property_type,\n      deal_type,\n      image_url,\n      created_at,\n      updated_at\n    `)\n    .or(\n      `title.ilike.%${term}%,` +\n      `description.ilike.%${term}%,` +\n      `location.ilike.%${term}%,` +\n      `property_type.ilike.%${term}%,` +\n      `deal_type.ilike.%${term}%`\n    )\n    .order('created_at', { ascending: false });\n\n    console.log('Search response:', { data, error });\n\n    if (error) {\n      console.error('Error searching deals:', error);\n      return [];\n    }\n\n    return data.map(deal => ({\n      id: deal.id,\n      title: deal.title,\n      description: deal.description,\n      location: deal.location,\n      price: Number(deal.price),\n      roi_percentage: Number(deal.roi_percentage),\n      investment_term: deal.investment_term,\n      property_type: deal.property_type,\n      deal_type: deal.deal_type,\n      image_url: deal.image_url,\n      created_at: deal.created_at,\n      updated_at: deal.updated_at\n    }));\n};\n\nexport const getDeal = async (id: string): Promise<Deal | null> => {\n  try {\n    // First verify the user is authenticated\n    const { data: { user } } = await supabase.auth.getUser();\n    if (!user) {\n      throw new Error('Not authenticated');\n    }\n\n    console.log('Fetching deal:', id);\n\n    const { data: deal, error } = await supabase\n      .from('deals')\n      .select(`\n        *,\n        author:profiles!deals_created_by_fkey(full_name)\n      `)\n      .eq('id', id)\n      .single();\n\n    console.log('Deal fetch result:', { deal, error });\n\n    if (error) {\n      console.error('Error fetching deal:', error);\n      return null;\n    }\n\n    if (!deal) return null;\n\n    // Transform the data\n    return {\n      ...deal,\n      images: Array.isArray(deal.images) ? deal.images : [deal.images].filter(Boolean),\n      location: typeof deal.location === 'string' ? JSON.parse(deal.location) : (deal.location || {}),\n      key_features: Array.isArray(deal.key_features) ? deal.key_features : [],\n      sensitive_info: deal.sensitive_info\n    };\n  } catch (error) {\n    console.error('Error fetching deal:', error);\n    return null;\n  }\n}; ","import { cn } from \"../../lib/utils\"\n\nfunction Skeleton({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) {\n  return (\n    <div\n      className={cn(\"animate-pulse rounded-md bg-muted\", className)}\n      {...props}\n    />\n  )\n}\n\nexport function PropertyCardSkeleton() {\n  return (\n    <div className=\"overflow-hidden rounded-lg border bg-card\">\n      <Skeleton className=\"aspect-video w-full\" />\n      <div className=\"p-6 space-y-4\">\n        <Skeleton className=\"h-6 w-3/4\" />\n        <Skeleton className=\"h-4 w-1/2\" />\n        <div className=\"space-y-2\">\n          <Skeleton className=\"h-4 w-full\" />\n          <Skeleton className=\"h-4 w-5/6\" />\n        </div>\n        <div className=\"grid grid-cols-2 gap-4\">\n          <div>\n            <Skeleton className=\"h-4 w-20 mb-1\" />\n            <Skeleton className=\"h-6 w-24\" />\n          </div>\n          <div>\n            <Skeleton className=\"h-4 w-20 mb-1\" />\n            <Skeleton className=\"h-6 w-24\" />\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport { Skeleton }\n","import React, { useState } from \"react\";\nimport { Deal } from \"../lib/deals\";\nimport { formatCurrency } from \"../lib/utils\";\nimport { Card, CardContent, CardHeader } from \"./ui/card\";\nimport { Badge } from \"./ui/badge\";\nimport { MapPin, MessageCircle } from \"lucide-react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Button } from \"./ui/button\";\nimport { MessagesModal } from \"./MessagesModal\";\nimport { PropertyCardSkeleton } from \"./ui/skeleton\";\n\ninterface DealCardProps {\n  deal: Deal;\n  isSubscriber: boolean;\n  onClick?: () => void;\n  isLoading?: boolean;\n  user?: any;\n  showMessageButton?: boolean;\n}\n\nexport function DealCard({ \n  deal, \n  isSubscriber, \n  onClick, \n  isLoading,\n  user,\n  showMessageButton = true\n}: DealCardProps) {\n  const navigate = useNavigate();\n  const [isMessageModalOpen, setIsMessageModalOpen] = useState(false);\n  \n  if (isLoading) {\n    return <PropertyCardSkeleton />;\n  }\n\n  const handleMessageClick = (e: React.MouseEvent) => {\n    e.stopPropagation();\n    if (!user) {\n      navigate('/login');\n      return;\n    }\n    setIsMessageModalOpen(true);\n  };\n\n  return (\n    <>\n      <Card \n        className=\"overflow-hidden hover:shadow-lg transition-shadow cursor-pointer\"\n        onClick={user ? onClick : () => navigate('/login')}\n      >\n        <div className=\"relative aspect-video overflow-hidden bg-muted\">\n          <img\n            src={deal.image_url}\n            alt={deal.title}\n            className=\"object-cover w-full h-full\"\n            loading=\"lazy\"\n          />\n          {!user && (\n            <div className=\"absolute inset-0 bg-black/50 flex items-center justify-center\">\n              <Badge variant=\"secondary\">Sign in to View</Badge>\n            </div>\n          )}\n          <div className=\"absolute top-2 right-2 flex gap-2\">\n            <Badge variant=\"secondary\" className=\"bg-white/90 text-black hover:bg-white/75\">\n              {deal.property_type}\n            </Badge>\n            <Badge variant=\"secondary\" className=\"bg-primary/90 text-white hover:bg-primary/75\">\n              {deal.deal_type}\n            </Badge>\n          </div>\n        </div>\n\n        <CardHeader>\n          <div>\n            <h3 className=\"text-lg font-semibold line-clamp-2 mb-2\">{deal.title}</h3>\n            <div className=\"flex items-center gap-1 text-sm text-muted-foreground\">\n              <MapPin className=\"h-4 w-4\" />\n              <span className=\"line-clamp-1\">{deal.location}</span>\n            </div>\n          </div>\n        </CardHeader>\n\n        <CardContent>\n          <div className=\"space-y-4\">\n            <p className=\"text-sm text-muted-foreground line-clamp-2\">\n              {deal.description}\n            </p>\n            \n            <div className=\"grid grid-cols-2 gap-4\">\n              <div className=\"space-y-1\">\n                <p className=\"text-sm text-muted-foreground\">Price</p>\n                <p className=\"text-lg font-semibold\">{formatCurrency(deal.price)}</p>\n              </div>\n              <div className=\"space-y-1\">\n                <p className=\"text-sm text-muted-foreground\">ROI</p>\n                <p className=\"text-lg font-semibold text-emerald-500\">\n                  {deal.roi_percentage}%\n                </p>\n              </div>\n            </div>\n            \n            <div className=\"pt-2 border-t\">\n              <div className=\"grid grid-cols-2 gap-4\">\n                <div className=\"space-y-1\">\n                  <p className=\"text-sm text-muted-foreground\">Investment Term</p>\n                  <p className=\"font-medium\">{deal.investment_term}</p>\n                </div>\n                <div className=\"space-y-1\">\n                  <p className=\"text-sm text-muted-foreground\">Expected Returns</p>\n                  <p className=\"font-medium text-emerald-500\">High Yield</p>\n                </div>\n              </div>\n            </div>\n\n            {user && showMessageButton && (\n              <Button\n                variant=\"outline\"\n                className=\"w-full\"\n                onClick={handleMessageClick}\n              >\n                <MessageCircle className=\"w-4 h-4 mr-2\" />\n                Enquire About This Deal\n              </Button>\n            )}\n          </div>\n        </CardContent>\n      </Card>\n\n      {user && (\n        <MessagesModal\n          isOpen={isMessageModalOpen}\n          onClose={() => setIsMessageModalOpen(false)}\n          receiverId=\"admin\"\n          dealId={deal.id}\n          deal={deal}\n        />\n      )}\n    </>\n  );\n} ","\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Select = SelectPrimitive.Root\n\nconst SelectGroup = SelectPrimitive.Group\n\nconst SelectValue = SelectPrimitive.Value\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n))\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n))\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n))\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"py-1.5 pl-8 pr-2 text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n}\n","import React, { useState } from \"react\";\nimport { Card, CardContent, CardFooter, CardHeader } from \"./ui/card\";\nimport { Button } from \"./ui/button\";\nimport { Textarea } from \"./ui/textarea\";\nimport { Label } from \"./ui/label\";\nimport { Input } from \"./ui/input\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"./ui/select\";\nimport { FileQuestion, Check, Clock, AlertTriangle, Download } from \"lucide-react\";\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"./ui/tabs\";\n\ninterface ResearchRequestsProps {\n  user?: any;\n  profile?: any;\n}\n\nconst ResearchRequests: React.FC<ResearchRequestsProps> = ({ user, profile }) => {\n  const [requestType, setRequestType] = useState<string>(\"property\");\n  const [requestDetails, setRequestDetails] = useState<string>(\"\");\n  const [requestPriority, setRequestPriority] = useState<string>(\"standard\");\n  const [isSubmitting, setIsSubmitting] = useState<boolean>(false);\n  const [submittedRequests, setSubmittedRequests] = useState<any[]>([\n    {\n      id: 1,\n      type: \"Market Analysis\",\n      details: \"Detailed analysis of the Leeds property market, focusing on rental yields and capital growth potential in different neighborhoods.\",\n      priority: \"high\",\n      status: \"in-progress\",\n      submittedAt: \"2024-05-01T10:30:00Z\",\n      estimatedCompletion: \"2024-05-08T10:30:00Z\"\n    },\n    {\n      id: 2,\n      type: \"Property\",\n      details: \"Research on the historical price trends and planning permissions for 123 High Street, Manchester, M1 1AA.\",\n      priority: \"standard\",\n      status: \"completed\",\n      submittedAt: \"2024-04-15T14:45:00Z\",\n      completedAt: \"2024-04-20T09:15:00Z\"\n    }\n  ]);\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    setIsSubmitting(true);\n    \n    // Simulate API call\n    setTimeout(() => {\n      const newRequest = {\n        id: submittedRequests.length + 1,\n        type: requestType === \"property\" ? \"Property\" : \"Market Analysis\",\n        details: requestDetails,\n        priority: requestPriority,\n        status: \"pending\",\n        submittedAt: new Date().toISOString(),\n        estimatedCompletion: new Date(Date.now() + 7 * 24 * 60 * 60 * 1000).toISOString()\n      };\n      \n      setSubmittedRequests([newRequest, ...submittedRequests]);\n      setRequestDetails(\"\");\n      setIsSubmitting(false);\n    }, 1500);\n  };\n\n  const isSubscriber = profile?.subscription_tier !== \"free\";\n  const canSubmitHighPriority = isSubscriber;\n  const requestsRemaining = isSubscriber ? \"Unlimited\" : \"2 / 3\";\n\n  const getStatusIcon = (status: string) => {\n    switch (status) {\n      case \"completed\":\n        return <Check className=\"h-5 w-5 text-green-500\" />;\n      case \"in-progress\":\n        return <Clock className=\"h-5 w-5 text-blue-500\" />;\n      case \"pending\":\n        return <Clock className=\"h-5 w-5 text-amber-500\" />;\n      default:\n        return <AlertTriangle className=\"h-5 w-5 text-red-500\" />;\n    }\n  };\n\n  const formatDate = (dateString: string) => {\n    const date = new Date(dateString);\n    return date.toLocaleDateString(\"en-GB\", {\n      day: \"numeric\",\n      month: \"short\",\n      year: \"numeric\"\n    });\n  };\n\n  return (\n    <div>\n      <Card className=\"mb-8\">\n        <CardHeader>\n          <h3 className=\"text-lg font-semibold\">Request Custom Research</h3>\n        </CardHeader>\n        <CardContent>\n          <form onSubmit={handleSubmit}>\n            <div className=\"space-y-4\">\n              <div>\n                <Label htmlFor=\"request-type\">Request Type</Label>\n                <Select \n                  value={requestType} \n                  onValueChange={setRequestType}\n                >\n                  <SelectTrigger id=\"request-type\">\n                    <SelectValue placeholder=\"Select request type\" />\n                  </SelectTrigger>\n                  <SelectContent>\n                    <SelectItem value=\"property\">Property Research</SelectItem>\n                    <SelectItem value=\"market\">Market Analysis</SelectItem>\n                  </SelectContent>\n                </Select>\n              </div>\n              \n              <div>\n                <Label htmlFor=\"request-details\">Details</Label>\n                <Textarea\n                  id=\"request-details\"\n                  placeholder=\"Please provide specific details about what you'd like us to research...\"\n                  rows={5}\n                  value={requestDetails}\n                  onChange={(e) => setRequestDetails(e.target.value)}\n                />\n              </div>\n              \n              <div>\n                <Label htmlFor=\"request-priority\">Priority</Label>\n                <Select \n                  value={requestPriority} \n                  onValueChange={setRequestPriority}\n                  disabled={!canSubmitHighPriority && requestPriority === \"high\"}\n                >\n                  <SelectTrigger id=\"request-priority\">\n                    <SelectValue placeholder=\"Select priority\" />\n                  </SelectTrigger>\n                  <SelectContent>\n                    <SelectItem value=\"standard\">Standard (7 days)</SelectItem>\n                    <SelectItem value=\"high\" disabled={!canSubmitHighPriority}>\n                      High Priority (3 days)\n                      {!canSubmitHighPriority && \" - Premium Feature\"}\n                    </SelectItem>\n                  </SelectContent>\n                </Select>\n              </div>\n            </div>\n          </form>\n        </CardContent>\n        <CardFooter className=\"flex flex-col sm:flex-row items-start sm:items-center justify-between border-t pt-4\">\n          <div className=\"text-sm text-muted-foreground mb-4 sm:mb-0\">\n            Requests remaining this month: <span className=\"font-medium\">{requestsRemaining}</span>\n          </div>\n          <Button \n            type=\"submit\" \n            onClick={handleSubmit} \n            disabled={!requestDetails.trim() || isSubmitting}\n          >\n            {isSubmitting ? \"Submitting...\" : \"Submit Request\"}\n          </Button>\n        </CardFooter>\n      </Card>\n\n      <Card>\n        <CardHeader>\n          <h3 className=\"text-lg font-semibold\">Your Research Requests</h3>\n        </CardHeader>\n        <CardContent>\n          {submittedRequests.length > 0 ? (\n            <div className=\"space-y-4\">\n              {submittedRequests.map((request) => (\n                <div key={request.id} className=\"p-4 border rounded-md\">\n                  <div className=\"flex justify-between items-start\">\n                    <div>\n                      <div className=\"flex items-center gap-2 mb-2\">\n                        <FileQuestion className=\"h-4 w-4\" />\n                        <h4 className=\"font-medium\">{request.type} Request</h4>\n                      </div>\n                      <p className=\"text-sm text-muted-foreground mb-3\">{request.details}</p>\n                      <div className=\"text-xs text-muted-foreground\">\n                        Submitted: {formatDate(request.submittedAt)}\n                      </div>\n                    </div>\n                    <div className=\"flex items-center gap-2\">\n                      {getStatusIcon(request.status)}\n                      <span className=\"text-sm font-medium capitalize\">\n                        {request.status.replace(\"-\", \" \")}\n                      </span>\n                    </div>\n                  </div>\n                  \n                  {request.status === 'in-progress' && (\n                    <div className=\"mt-4 pt-4 border-t text-xs text-muted-foreground\">\n                      Estimated completion: {formatDate(request.estimatedCompletion)}\n                    </div>\n                  )}\n                  \n                  {request.status === 'completed' && (\n                    <div className=\"mt-4 pt-4 border-t\">\n                      <Button variant=\"outline\" size=\"sm\" className=\"w-full sm:w-auto\">\n                        <Download className=\"h-4 w-4 mr-2\" />\n                        Download Report\n                      </Button>\n                    </div>\n                  )}\n                </div>\n              ))}\n            </div>\n          ) : (\n            <div className=\"text-center py-8\">\n              <FileQuestion className=\"h-12 w-12 mx-auto text-muted-foreground mb-4\" />\n              <h3 className=\"text-lg font-medium mb-2\">No requests yet</h3>\n              <p className=\"text-muted-foreground\">\n                You haven't submitted any research requests yet.\n              </p>\n            </div>\n          )}\n        </CardContent>\n      </Card>\n    </div>\n  );\n};\n\nexport default ResearchRequests; ","import React, { useEffect, useState } from \"react\";\nimport HeroSection from \"./HeroSection\";\nimport { useAuth } from \"../lib/auth\";\nimport ResearchReports from \"./ResearchReports\";\nimport { PageTransition } from \"./ui/page-transition\";\nimport { Button } from \"./ui/button\";\nimport { SubscriptionModal } from \"./SubscriptionModal\";\nimport { getDeals } from '../lib/deals';\nimport { DealCard } from './DealCard';\nimport { useNavigate } from 'react-router-dom';\nimport type { Deal } from '../lib/deals';\nimport { Layout } from \"./Layout\";\nimport { Card, CardContent } from \"./ui/card\";\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"./ui/tabs\";\nimport ResearchRequests from \"./ResearchRequests\";\n\n// Auth context checker wrapper\nconst AuthContextChecker = ({ children }: { children: React.ReactNode }) => {\n  try {\n    // Try to access auth context but don't use the result\n    useAuth();\n    // If we get here, auth context is available\n    return <>{children}</>;\n  } catch (error) {\n    // If auth context is not available, show a fallback\n    return (\n      <Layout>\n        <div className=\"min-h-screen flex flex-col items-center justify-center p-4\">\n          <Card className=\"p-6 max-w-md w-full\">\n            <h2 className=\"text-xl font-bold mb-4 text-center\">Authentication Error</h2>\n            <p className=\"text-muted-foreground mb-6 text-center\">\n              Unable to load authentication. Please refresh the page or try again later.\n            </p>\n            <Button \n              className=\"w-full\" \n              onClick={() => window.location.reload()}\n            >\n              Refresh Page\n            </Button>\n          </Card>\n        </div>\n      </Layout>\n    );\n  }\n};\n\nconst ResearchPage: React.FC = () => {\n  return (\n    <AuthContextChecker>\n      <ResearchPageContent />\n    </AuthContextChecker>\n  );\n};\n\n// Separate the main component content to ensure useAuth is only called when context is available\nconst ResearchPageContent: React.FC = () => {\n  const { user, profile, isLoading } = useAuth();\n  const navigate = useNavigate();\n  const [deals, setDeals] = useState<Deal[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [isSubscriptionModalOpen, setIsSubscriptionModalOpen] =\n    React.useState(false);\n  const [activeTab, setActiveTab] = React.useState(\"reports\");\n\n  // Remove the subscription check for now\n  const isPro = true; // Temporarily allow access to all users\n\n  useEffect(() => {\n    let mounted = true;\n\n    async function loadDeals() {\n      try {\n        const dealsData = await getDeals();\n        if (mounted) {\n          setDeals(dealsData);\n          setLoading(false);\n        }\n      } catch (error) {\n        console.error('Error loading deals:', error);\n        if (mounted) {\n          setLoading(false);\n        }\n      }\n    }\n\n    // Only load deals if we have a user and they're not in a loading state\n    if (user && !isLoading) {\n      loadDeals();\n    } else if (!isLoading && !user) {\n      navigate('/login');\n    }\n\n    return () => {\n      mounted = false;\n    };\n  }, [user, isLoading, navigate]);\n\n  // Show loading state while checking auth\n  if (isLoading) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center\">\n        <div>Loading...</div>\n      </div>\n    );\n  }\n\n  // If no user, don't render anything (navigation will handle redirect)\n  if (!user) {\n    return null;\n  }\n\n  return (\n    <Layout>\n      <PageTransition>\n        <div className=\"min-h-screen bg-neutral\">\n          <HeroSection\n            title=\"Research & Analysis\"\n            subtitle=\"Discover in-depth market insights and property analysis\"\n            showSearch={false}\n            showStats={false}\n            height=\"h-[400px]\"\n            image=\"/research-hero.jpg\"\n          />\n          <main className=\"container mx-auto px-4 py-8\">\n            <div className=\"max-w-7xl mx-auto space-y-8\">\n              <div className=\"text-center mb-12\">\n                <h1 className=\"text-4xl font-bold mb-4 text-primary\">Latest Research</h1>\n                <p className=\"text-muted-foreground max-w-2xl mx-auto\">\n                  Stay informed with our comprehensive research reports and expert\n                  analysis\n                </p>\n              </div>\n              {isPro ? (\n                <Tabs\n                  defaultValue=\"reports\"\n                  value={activeTab}\n                  onValueChange={setActiveTab}\n                  className=\"mb-8\"\n                >\n                  <TabsList className=\"mb-4\">\n                    <TabsTrigger value=\"reports\">Research Reports</TabsTrigger>\n                    <TabsTrigger value=\"requests\">Research Requests</TabsTrigger>\n                  </TabsList>\n\n                  <TabsContent value=\"reports\">\n                    <ResearchReports user={user} profile={profile} />\n                  </TabsContent>\n\n                  <TabsContent value=\"requests\">\n                    <ResearchRequests user={user} profile={profile} />\n                  </TabsContent>\n                </Tabs>\n              ) : (\n                <div className=\"text-center py-12\">\n                  <h2 className=\"text-2xl font-semibold mb-4 text-accent\">\n                    Pro Plan Required\n                  </h2>\n                  <p className=\"text-muted-foreground mb-6\">\n                    Access to research reports is available exclusively to Pro and\n                    Premium subscribers.\n                  </p>\n                  <Button onClick={() => setIsSubscriptionModalOpen(true)} className=\"bg-primary text-white\">\n                    Upgrade to Pro\n                  </Button>\n                </div>\n              )}\n            </div>\n\n            {loading ? (\n              <div className=\"text-center py-8\">Loading deals...</div>\n            ) : (\n              <div className=\"mt-12\">\n                <h2 className=\"text-2xl font-bold mb-6\">Latest Deals</h2>\n                <div className=\"grid gap-6 md:grid-cols-2 lg:grid-cols-3\">\n                  {deals.map((deal) => (\n                    <DealCard \n                      key={deal.id} \n                      deal={deal}\n                      isSubscriber={profile?.subscription_tier !== 'free'}\n                    />\n                  ))}\n                </div>\n              </div>\n            )}\n          </main>\n\n          <SubscriptionModal\n            isOpen={isSubscriptionModalOpen}\n            onClose={() => setIsSubscriptionModalOpen(false)}\n          />\n        </div>\n      </PageTransition>\n    </Layout>\n  );\n};\n\nexport default ResearchPage;\n","import React from \"react\";\nimport { Layout } from \"./Layout\";\nimport HeroSection from \"./HeroSection\";\nimport { useAuth } from \"../lib/auth\";\nimport { Card, CardContent, CardHeader } from \"./ui/card\";\nimport { Button } from \"./ui/button\";\nimport { ArrowRight, Calendar, Clock, Tag } from \"lucide-react\";\nimport { PageTransition } from \"./ui/page-transition\";\n\nexport default function BlogPage() {\n  const { user: _, profile: __ } = useAuth();\n\n  const blogPosts = [\n    {\n      title: \"Understanding Property Market Cycles\",\n      excerpt:\n        \"A comprehensive guide to property market cycles and how to identify market phases for optimal investment timing.\",\n      category: \"Market Analysis\",\n      date: \"2024-03-20\",\n      readTime: \"8 min read\",\n      image:\n        \"https://images.unsplash.com/photo-1460472178825-e5240623afd5?ixlib=rb-4.0.3\",\n    },\n    {\n      title: \"Buy-to-Let Investment Strategy Guide\",\n      excerpt:\n        \"Expert insights into creating a successful buy-to-let investment strategy in today's market conditions.\",\n      category: \"Investment\",\n      date: \"2024-03-18\",\n      readTime: \"10 min read\",\n      image:\n        \"https://images.unsplash.com/photo-1560518883-ce09059eeffa?ixlib=rb-4.0.3\",\n    },\n    {\n      title: \"Property Tax Changes in 2024\",\n      excerpt:\n        \"Stay updated with the latest property tax regulations and how they affect property investors and homeowners.\",\n      category: \"Legal\",\n      date: \"2024-03-15\",\n      readTime: \"6 min read\",\n      image:\n        \"https://images.unsplash.com/photo-1554224155-8d04cb21cd6c?ixlib=rb-4.0.3\",\n    },\n  ];\n\n  return (\n    <PageTransition>\n      <Layout>\n        <HeroSection\n          title=\"Property Investment Blog\"\n          subtitle=\"Expert insights and analysis on the UK property market\"\n          backgroundImage=\"https://images.unsplash.com/photo-1542744173-8e7e53415bb0?ixlib=rb-4.0.3\"\n          showSearch={false}\n          showStats={false}\n          height=\"h-[400px]\"\n        />\n        <main className=\"container mx-auto px-4 py-8 pt-24 sm:pt-8\">\n          <div className=\"max-w-7xl mx-auto space-y-8\">\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n              {blogPosts.map((post, index) => (\n                <Card\n                  key={index}\n                  className=\"flex flex-col h-full hover:shadow-lg transition-shadow\"\n                >\n                  <div className=\"relative h-48 w-full overflow-hidden rounded-t-lg\">\n                    <img\n                      src={post.image}\n                      alt={post.title}\n                      className=\"w-full h-full object-cover\"\n                    />\n                  </div>\n                  <CardHeader className=\"flex flex-row items-center gap-2\">\n                    <Tag className=\"w-4 h-4\" />\n                    <span className=\"text-sm text-muted-foreground\">\n                      {post.category}\n                    </span>\n                  </CardHeader>\n                  <CardContent className=\"flex-1 flex flex-col\">\n                    <h3 className=\"text-xl font-semibold mb-2\">{post.title}</h3>\n                    <p className=\"text-muted-foreground mb-4 flex-1\">\n                      {post.excerpt}\n                    </p>\n                    <div className=\"flex items-center justify-between mt-4\">\n                      <div className=\"flex items-center gap-4 text-sm text-muted-foreground\">\n                        <div className=\"flex items-center gap-1\">\n                          <Calendar className=\"w-4 h-4\" />\n                          <span>\n                            {new Date(post.date).toLocaleDateString()}\n                          </span>\n                        </div>\n                        <div className=\"flex items-center gap-1\">\n                          <Clock className=\"w-4 h-4\" />\n                          <span>{post.readTime}</span>\n                        </div>\n                      </div>\n                      <Button\n                        variant=\"ghost\"\n                        className=\"group hover:text-primary\"\n                        onClick={() => {\n                          window.location.href = `/blog/${post.title.toLowerCase().replace(/ /g, \"-\")}`;\n                        }}\n                      >\n                        Read More\n                        <ArrowRight className=\"w-4 h-4 ml-2 group-hover:translate-x-1 transition-transform\" />\n                      </Button>\n                    </div>\n                  </CardContent>\n                </Card>\n              ))}\n            </div>\n          </div>\n        </main>\n      </Layout>\n    </PageTransition>\n  );\n}\n","import React from \"react\";\nimport { Card, CardContent, CardHeader } from \"./ui/card\";\nimport { Button } from \"./ui/button\";\nimport { Input } from \"./ui/input\";\nimport { Label } from \"./ui/label\";\nimport { Textarea } from \"./ui/textarea\";\nimport {\n  Mail,\n  Phone,\n  MessageCircle,\n  FileText,\n  HelpCircle,\n  Book,\n} from \"lucide-react\";\nimport { Layout } from \"./Layout\";\nimport HeroSection from \"./HeroSection\";\nimport { PageTransition } from \"./ui/page-transition\";\n\nexport default function HelpSupportPage() {\n  const supportCategories = [\n    {\n      title: \"Getting Started\",\n      icon: <Book className=\"w-5 h-5\" />,\n      description: \"Learn the basics of using our platform\",\n      content: [\n        \"How to search for properties\",\n        \"Understanding market insights\",\n        \"Setting up your account\",\n        \"Subscription plans overview\",\n      ],\n    },\n    {\n      title: \"Account & Billing\",\n      icon: <FileText className=\"w-5 h-5\" />,\n      description: \"Manage your account and subscription\",\n      content: [\n        \"Updating account details\",\n        \"Subscription management\",\n        \"Billing history\",\n        \"Payment methods\",\n      ],\n    },\n    {\n      title: \"Technical Support\",\n      icon: <HelpCircle className=\"w-5 h-5\" />,\n      description: \"Get help with technical issues\",\n      content: [\n        \"Troubleshooting guide\",\n        \"System requirements\",\n        \"Known issues\",\n        \"Browser compatibility\",\n      ],\n    },\n  ];\n\n  const contactMethods = [\n    {\n      icon: <Mail className=\"w-5 h-5\" />,\n      title: \"Email Support\",\n      description: \"Get help via email\",\n      action: \"support@myvge.co.uk\",\n      buttonText: \"Send Email\",\n      onClick: () => (window.location.href = \"mailto:support@myvge.co.uk\"),\n    },\n    {\n      icon: <Phone className=\"w-5 h-5\" />,\n      title: \"Phone Support\",\n      description: \"Speak to our team\",\n      action: \"0800 123 4567\",\n      buttonText: \"Call Now\",\n      onClick: () => (window.location.href = \"tel:08001234567\"),\n    },\n    {\n      icon: <MessageCircle className=\"w-5 h-5\" />,\n      title: \"Live Chat\",\n      description: \"Chat with our support team\",\n      action: \"Available 24/7\",\n      buttonText: \"Start Chat\",\n      onClick: () => {\n        const event = new CustomEvent(\"open-messages\", {\n          detail: { receiverId: \"support\" },\n        });\n        window.dispatchEvent(event);\n      },\n    },\n  ];\n\n  return (\n    <PageTransition>\n      <Layout>\n        <HeroSection\n          title=\"Help & Support Center\"\n          subtitle=\"Get the assistance you need with our comprehensive support resources\"\n          backgroundImage=\"https://images.unsplash.com/photo-1486406146926-c627a92ad1ab?ixlib=rb-4.0.3\"\n          showSearch={false}\n          showStats={false}\n          height=\"h-[400px]\"\n        />\n        <main className=\"container mx-auto px-4 py-8\">\n          <div className=\"max-w-7xl mx-auto space-y-12\">\n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n              {supportCategories.map((category, index) => (\n                <Card key={index} className=\"hover:shadow-lg transition-shadow\">\n                  <CardHeader className=\"flex flex-row items-center gap-2\">\n                    {category.icon}\n                    <div>\n                      <h3 className=\"font-semibold\">{category.title}</h3>\n                      <p className=\"text-sm text-muted-foreground\">\n                        {category.description}\n                      </p>\n                    </div>\n                  </CardHeader>\n                  <CardContent>\n                    <ul className=\"space-y-2\">\n                      {category.content.map((item, i) => (\n                        <li key={i} className=\"text-sm\">\n                          • {item}\n                        </li>\n                      ))}\n                    </ul>\n                  </CardContent>\n                </Card>\n              ))}\n            </div>\n\n            <div className=\"bg-card shadow rounded-lg p-8\">\n              <div className=\"text-center mb-8\">\n                <h2 className=\"text-2xl font-bold mb-2\">Contact Support</h2>\n                <p className=\"text-muted-foreground\">\n                  Choose your preferred method of contact\n                </p>\n              </div>\n\n              <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n                {contactMethods.map((method, index) => (\n                  <Card\n                    key={index}\n                    className=\"hover:shadow-lg transition-shadow\"\n                  >\n                    <CardContent className=\"p-6 text-center\">\n                      <div className=\"mb-4 flex justify-center\">\n                        {method.icon}\n                      </div>\n                      <h3 className=\"font-semibold mb-2\">{method.title}</h3>\n                      <p className=\"text-sm text-muted-foreground mb-2\">\n                        {method.description}\n                      </p>\n                      <p className=\"text-sm font-medium mb-4\">\n                        {method.action}\n                      </p>\n                      <Button onClick={method.onClick} className=\"w-full\">\n                        {method.buttonText}\n                      </Button>\n                    </CardContent>\n                  </Card>\n                ))}\n              </div>\n            </div>\n          </div>\n        </main>\n      </Layout>\n    </PageTransition>\n  );\n}\n","import React from \"react\";\nimport { Button } from \"./ui/button\";\nimport { Input } from \"./ui/input\";\nimport { Tabs, TabsContent } from \"./ui/tabs\";\nimport {\n  MessageCircle,\n  Send,\n  X,\n  Users,\n} from \"lucide-react\";\nimport { popularQuestions } from \"../lib/chat\";\nimport { useAuth } from \"../lib/auth\";\nimport { Avatar, AvatarFallback, AvatarImage } from \"./ui/avatar\";\nimport { supabase } from \"../lib/supabase\";\nimport { useNavigate } from \"react-router-dom\";\n\ninterface Message {\n  text: string;\n  isUser: boolean;\n  sender?: {\n    full_name: string;\n    email: string;\n  };\n  timestamp?: string;\n}\n\ninterface Contact {\n  id: string;\n  full_name: string;\n  email: string;\n  last_message?: string;\n  unread_count?: number;\n}\n\nconst formatMessage = (text: string) => {\n  // Replace **bold** with styled spans\n  let formattedText = text.replace(\n    /\\*\\*(.*?)\\*\\*/g,\n    '<span class=\"font-bold\">$1</span>'\n  );\n  \n  // Replace *italic* with styled spans\n  formattedText = formattedText.replace(\n    /\\*(.*?)\\*/g,\n    '<span class=\"italic\">$1</span>'\n  );\n  \n  // Replace bullet points\n  formattedText = formattedText.replace(\n    /^- (.+)$/gm,\n    '<span class=\"block ml-2\">• $1</span>'\n  );\n  \n  // Replace numbered lists\n  formattedText = formattedText.replace(\n    /^\\d+\\. (.+)$/gm,\n    '<span class=\"block ml-2\">$&</span>'\n  );\n\n  // Split by newlines and wrap in spans\n  return formattedText.split('\\n').map((line) => (\n    line ? `<span class=\"block\">${line}</span>` : '<span class=\"block h-2\"></span>'\n  )).join('');\n};\n\nconst GEMINI_API_KEY = import.meta.env.VITE_GEMINI_API_KEY;\nconst GEMINI_API_URL = \"https://generativelanguage.googleapis.com/v1beta/models/gemini-pro:generateContent\";\n\nexport function ChatBot() {\n  const { user, profile } = useAuth();\n  const [isOpen, setIsOpen] = React.useState(false);\n  const [activeTab, setActiveTab] = React.useState(\"ai\");\n  const [aiMessages, setAiMessages] = React.useState<Message[]>([]);\n  const [supportMessages, setSupportMessages] = React.useState<Message[]>([]);\n  const [directMessages, setDirectMessages] = React.useState<Message[]>([]);\n  const [input, setInput] = React.useState(\"\");\n  const [isLoading, setIsLoading] = React.useState(false);\n  const [contacts, setContacts] = React.useState<Contact[]>([]);\n  const [selectedContact, setSelectedContact] = React.useState<Contact | null>(\n    null,\n  );\n  const scrollRef = React.useRef<HTMLDivElement>(null);\n  const navigate = useNavigate();\n\n  // Load contacts for direct messaging\n  React.useEffect(() => {\n    if (user) {\n      loadContacts();\n\n      // Listen for open-messages event\n      const handleOpenMessages = (e: CustomEvent) => {\n        setIsOpen(true);\n        setActiveTab(\"messages\");\n        const receiverId = e.detail.receiverId;\n        const contact = contacts.find((c) => c.id === receiverId);\n        if (contact) {\n          setSelectedContact(contact);\n        }\n      };\n\n      window.addEventListener(\n        \"open-messages\",\n        handleOpenMessages as EventListener,\n      );\n      return () =>\n        window.removeEventListener(\n          \"open-messages\",\n          handleOpenMessages as EventListener,\n        );\n    }\n  }, [user, contacts]);\n\n  const loadContacts = async () => {\n    try {\n      const { data: messages } = await supabase\n        .from(\"messages\")\n        .select(\n          `\n          *,\n          sender:profiles!messages_sender_id_fkey(id, full_name, email),\n          receiver:profiles!messages_receiver_id_fkey(id, full_name, email)\n        `,\n        )\n        .or(`sender_id.eq.${user?.id},receiver_id.eq.${user?.id}`)\n        .order(\"created_at\", { ascending: false });\n\n      if (!messages) return;\n\n      // Create unique contacts list\n      const uniqueContacts = new Map<string, Contact>();\n      messages.forEach((msg) => {\n        const contact = msg.sender.id === user?.id ? msg.receiver : msg.sender;\n        if (!uniqueContacts.has(contact.id)) {\n          uniqueContacts.set(contact.id, {\n            id: contact.id,\n            full_name: contact.full_name,\n            email: contact.email,\n            last_message: msg.content,\n            unread_count: msg.receiver_id === user?.id && !msg.is_read ? 1 : 0,\n          });\n        }\n      });\n\n      setContacts(Array.from(uniqueContacts.values()));\n    } catch (error) {\n      console.error(\"Error loading contacts:\", error);\n    }\n  };\n\n  const handleSend = async (text: string) => {\n    if (!text.trim()) return;\n\n    if (activeTab === \"ai\") {\n      // AI chat allowed without sign in\n      setAiMessages((prev) => [...prev, { text, isUser: true }]);\n      setInput(\"\");\n      setIsLoading(true);\n\n      try {\n        // Get AI response without storing in database\n        const aiResponse = await fetch(\n          `${GEMINI_API_URL}?key=${GEMINI_API_KEY}`,\n          {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({\n              contents: [{\n                parts: [{\n                  text: text\n                }]\n              }]\n            }),\n          }\n        );\n\n        if (!aiResponse.ok) {\n          throw new Error(`AI API error: ${aiResponse.status}`);\n        }\n\n        const aiData = await aiResponse.json();\n        const response = aiData.candidates[0].content.parts[0].text;\n\n        // Only store messages if user is signed in\n        if (user) {\n          const conversationId = `ai_${user.id}_${Date.now()}`;\n          \n          await supabase.from(\"messages\").insert([\n            {\n              sender_id: user.id,\n              receiver_id: user.id,\n              content: text,\n              is_support: false,\n              conversation_id: conversationId\n            },\n            {\n              sender_id: null,\n              receiver_id: user.id,\n              content: response,\n              is_support: true,\n              conversation_id: conversationId\n            }\n          ]);\n        }\n\n        setAiMessages((prev) => [...prev, { text: response, isUser: false }]);\n      } catch (error) {\n        console.error(\"Error in AI chat:\", error);\n        setAiMessages((prev) => [\n          ...prev,\n          { text: \"Sorry, I encountered an error. Please try again.\", isUser: false }\n        ]);\n      } finally {\n        setIsLoading(false);\n      }\n    } else if (!user) {\n      // Require sign in for support and direct messages\n      setAiMessages((prev) => [\n        ...prev,\n        { text: \"Please sign in to use support and direct messaging features.\", isUser: false }\n      ]);\n      return;\n    } else if (activeTab === \"support\") {\n      // Handle support messages\n      setSupportMessages((prev) => [...prev, { text, isUser: true }]);\n      setInput(\"\");\n\n      try {\n        const supportConversationId = `support_${user.id}_${Date.now()}`;\n\n        // Insert user's support message\n        const { error: userMsgError } = await supabase.from(\"messages\").insert({\n          sender_id: user.id,\n          receiver_id: 'support',\n          content: text,\n          is_support: true,\n          conversation_id: supportConversationId\n        });\n\n        if (userMsgError) throw userMsgError;\n\n        // Insert automated support response\n        const autoResponse = \"Thank you for your message. Our support team will get back to you soon.\";\n        const { error: supportError } = await supabase.from(\"messages\").insert({\n          sender_id: null,\n          receiver_id: user.id,\n          content: autoResponse,\n          is_support: true,\n          conversation_id: supportConversationId\n        });\n\n        if (supportError) throw supportError;\n\n        setSupportMessages((prev) => [\n          ...prev,\n          { text: autoResponse, isUser: false }\n        ]);\n      } catch (error) {\n        console.error(\"Error handling support message:\", error);\n        setSupportMessages((prev) => [\n          ...prev,\n          { text: \"Sorry, there was an error sending your message. Please try again.\", isUser: false }\n        ]);\n      }\n    } else {\n      // Direct Message or Support\n      if (!user || !selectedContact) return;\n\n      try {\n        console.log(\"Sending message to Supabase:\", { // Add this line\n          sender_id: user.id,\n          receiver_id: selectedContact.id,\n          content: text,\n          is_support: activeTab === \"support\",\n        });\n        const { data, error } = await supabase.from(\"messages\").insert([\n          {\n            sender_id: user.id,\n            receiver_id: selectedContact.id,\n            content: text,\n            is_support: activeTab === \"support\",\n          },\n        ]);\n\n        if (error) {\n          console.error(\"Supabase insert error:\", error); // Add this line\n          throw error;\n        }\n\n        console.log(\"Supabase insert success:\", data); // Add this line\n\n        setDirectMessages((prev) => [\n          ...prev,\n          {\n            text,\n            isUser: true,\n            sender: {\n              full_name: profile?.full_name || \"\",\n              email: profile?.email || \"\",\n            },\n            timestamp: new Date().toISOString(),\n          },\n        ]);\n        setInput(\"\");\n      } catch (error) {\n        console.error(\"Error sending message:\", error);\n      }\n    }\n  };\n\n  const scrollToBottom = () => {\n    if (scrollRef.current) {\n      scrollRef.current.scrollTop = scrollRef.current.scrollHeight;\n    }\n  };\n\n  React.useEffect(() => {\n    scrollToBottom();\n  }, [aiMessages, supportMessages, directMessages]);\n\n  React.useEffect(() => {\n    scrollToBottom();\n  }, [isLoading]);\n\n  // Subscribe to new messages\n  React.useEffect(() => {\n    if (!user || !selectedContact) return;\n\n    const subscription = supabase\n      .channel(`messages:${user.id}:${selectedContact.id}`)\n      .on(\n        \"postgres_changes\",\n        {\n          event: \"INSERT\",\n          schema: \"public\",\n          table: \"messages\",\n          filter: `or(and(sender_id.eq.${user.id},receiver_id.eq.${selectedContact.id}),and(sender_id.eq.${selectedContact.id},receiver_id.eq.${user.id}))`,\n        },\n        (payload) => {\n          console.log(\"Realtime message received:\", payload); // Add this line\n          const newMessage = payload.new;\n          if (newMessage.sender_id !== user.id) {\n            setDirectMessages((prev) => [\n              ...prev,\n              {\n                text: newMessage.content,\n                isUser: false,\n                sender: selectedContact,\n                timestamp: newMessage.created_at,\n              },\n            ]);\n          }\n        },\n      )\n      .subscribe();\n\n    return () => {\n      subscription.unsubscribe();\n    };\n  }, [user, selectedContact]);\n\n  return (\n    <>\n      <div className={`fixed bottom-4 right-4 z-50 ${isOpen ? 'w-96' : 'w-auto'}`}>\n        {isOpen ? (\n          <div className=\"bg-background border rounded-lg shadow-lg\">\n            <div className=\"p-4 border-b flex justify-between items-center\">\n              <h2 className=\"font-semibold\">AI Assistant</h2>\n              <div className=\"flex gap-2\">\n                <Button\n                  variant=\"ghost\"\n                  size=\"icon\"\n                  onClick={() => navigate('/messages')}\n                  title=\"Chat with Users\"\n                >\n                  <Users className=\"h-4 w-4\" />\n                </Button>\n                <Button\n                  variant=\"ghost\"\n                  size=\"icon\"\n                  onClick={() => setIsOpen(false)}\n                >\n                  <X className=\"h-4 w-4\" />\n                </Button>\n              </div>\n            </div>\n\n            <Tabs defaultValue={activeTab} onValueChange={setActiveTab}>\n              <TabsContent value=\"ai\" className=\"m-0 bg-white\">\n                <div\n                  ref={scrollRef}\n                  className=\"h-96 p-4 space-y-4 overflow-y-auto\"\n                >\n                  {aiMessages.length === 0 ? (\n                    <div className=\"space-y-4\">\n                      <p className=\"text-sm text-muted-foreground\">\n                        Hello! I'm your property assistant. Ask me anything\n                        about property investment, or try one of these popular\n                        questions:\n                      </p>\n                      <div className=\"flex flex-wrap gap-2\">\n                        {popularQuestions.map((question, index) => (\n                          <Button\n                            key={index}\n                            variant=\"outline\"\n                            size=\"sm\"\n                            className=\"text-xs\"\n                            onClick={() => handleSend(question)}\n                          >\n                            {question}\n                          </Button>\n                        ))}\n                      </div>\n                    </div>\n                  ) : (\n                    aiMessages.map((message, index) => (\n                      <div\n                        key={index}\n                        className={`flex ${message.isUser ? \"justify-end\" : \"justify-start\"}`}\n                      >\n                        <div\n                          className={`max-w-[80%] rounded-lg p-3 ${\n                            message.isUser\n                              ? \"bg-primary text-primary-foreground\"\n                              : \"bg-muted\"\n                          }`}\n                        >\n                          <p \n                            className=\"text-sm whitespace-pre-wrap\"\n                            dangerouslySetInnerHTML={{\n                              __html: message.isUser ? message.text : formatMessage(message.text)\n                            }}\n                          />\n                        </div>\n                      </div>\n                    ))\n                  )}\n                  {isLoading && (\n                    <div className=\"flex justify-start\">\n                      <div className=\"max-w-[80%] rounded-lg p-3 bg-muted\">\n                        <p className=\"text-sm\">Typing...</p>\n                      </div>\n                    </div>\n                  )}\n                </div>\n                <div className=\"p-4 border-t\">\n                  <div className=\"flex gap-2\">\n                    <Input\n                      value={input}\n                      onChange={(e) => setInput(e.target.value)}\n                      placeholder=\"Ask me anything about property...\"\n                      onKeyPress={(e) => {\n                        if (e.key === \"Enter\") {\n                          handleSend(input);\n                        }\n                      }}\n                    />\n                    <Button\n                      onClick={() => handleSend(input)}\n                      disabled={!input.trim()}\n                    >\n                      <Send className=\"h-4 w-4\" />\n                    </Button>\n                  </div>\n                </div>\n              </TabsContent>\n\n              <TabsContent value=\"messages\" className=\"m-0 bg-white\">\n                <div\n                  ref={scrollRef}\n                  className=\"h-96 p-4 space-y-4 overflow-y-auto\"\n                >\n                  {!user ? (\n                    <div className=\"text-center p-4\">\n                      <p className=\"text-sm text-muted-foreground mb-2\">\n                        Please sign in to view messages\n                      </p>\n                    </div>\n                  ) : !selectedContact ? (\n                    <div className=\"space-y-4\">\n                      {contacts.map((contact) => (\n                        <div\n                          key={contact.id}\n                          className=\"flex items-center justify-between p-2 hover:bg-muted rounded-lg cursor-pointer\"\n                          onClick={() => setSelectedContact(contact)}\n                        >\n                          <div className=\"flex items-center gap-2\">\n                            <Avatar className=\"h-8 w-8\">\n                              <AvatarImage\n                                src={`https://ui-avatars.com/api/?name=${encodeURIComponent(contact.full_name)}&background=random`}\n                                alt={contact.full_name}\n                              />\n                              <AvatarFallback>\n                                {contact.full_name\n                                  ?.split(\" \")\n                                  .map((n) => n[0])\n                                  .join(\"\")}\n                              </AvatarFallback>\n                            </Avatar>\n                            <div>\n                              <p className=\"font-medium\">\n                                {contact.full_name}\n                              </p>\n                              <p className=\"text-sm text-muted-foreground\">\n                                {contact.last_message}\n                              </p>\n                            </div>\n                          </div>\n                          {contact.unread_count && contact.unread_count > 0 && (\n                            <span className=\"bg-primary text-primary-foreground text-xs px-2 py-1 rounded-full\">\n                              {contact.unread_count}\n                            </span>\n                          )}\n                        </div>\n                      ))}\n                    </div>\n                  ) : (\n                    <div className=\"space-y-4\">\n                      {directMessages.map((message, index) => (\n                        <div\n                          key={index}\n                          className={`flex ${message.isUser ? \"justify-end\" : \"justify-start\"}`}\n                        >\n                          <div\n                            className={`max-w-[80%] rounded-lg p-3 ${message.isUser ? \"bg-primary text-primary-foreground\" : \"bg-muted\"}`}\n                          >\n                            <p className=\"text-sm\">{message.text}</p>\n                          </div>\n                        </div>\n                      ))}\n                    </div>\n                  )}\n                </div>\n\n                {selectedContact && (\n                  <div className=\"p-4 border-t\">\n                    <div className=\"flex gap-2\">\n                      <Input\n                        value={input}\n                        onChange={(e) => setInput(e.target.value)}\n                        placeholder=\"Type a message...\"\n                        onKeyPress={(e) => {\n                          if (e.key === \"Enter\") {\n                            handleSend(input);\n                          }\n                        }}\n                      />\n                      <Button\n                        onClick={() => handleSend(input)}\n                        disabled={!input.trim()}\n                      >\n                        <Send className=\"h-4 w-4\" />\n                      </Button>\n                    </div>\n                  </div>\n                )}\n              </TabsContent>\n\n              <TabsContent value=\"support\" className=\"m-0 bg-white\">\n                <div\n                  ref={scrollRef}\n                  className=\"h-96 p-4 space-y-4 overflow-y-auto\"\n                >\n                  {supportMessages.length === 0 ? (\n                    <div className=\"space-y-4\">\n                      <p className=\"text-sm text-muted-foreground\">\n                        Welcome to support! How can we help you today?\n                      </p>\n                    </div>\n                  ) : (\n                    supportMessages.map((message, index) => (\n                      <div\n                        key={index}\n                        className={`flex ${message.isUser ? \"justify-end\" : \"justify-start\"}`}\n                      >\n                        <div\n                          className={`max-w-[80%] rounded-lg p-3 ${message.isUser ? \"bg-primary text-primary-foreground\" : \"bg-muted\"}`}\n                        >\n                          <p className=\"text-sm\">{message.text}</p>\n                        </div>\n                      </div>\n                    ))\n                  )}\n                </div>\n\n                <div className=\"p-4 border-t\">\n                  <div className=\"flex gap-2\">\n                    <Input\n                      value={input}\n                      onChange={(e) => setInput(e.target.value)}\n                      placeholder=\"Type your support question...\"\n                      onKeyPress={(e) => {\n                        if (e.key === \"Enter\") {\n                          handleSend(input);\n                        }\n                      }}\n                    />\n                    <Button\n                      onClick={() => handleSend(input)}\n                      disabled={!input.trim()}\n                    >\n                      <Send className=\"h-4 w-4\" />\n                    </Button>\n                  </div>\n                </div>\n              </TabsContent>\n            </Tabs>\n          </div>\n        ) : (\n          <Button\n            onClick={() => setIsOpen(true)}\n            className=\"rounded-full h-12 w-12 flex items-center justify-center\"\n          >\n            <MessageCircle className=\"h-6 w-6\" />\n          </Button>\n        )}\n      </div>\n    </>\n  );\n}\n","import { useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { supabase } from \"../lib/supabase\";\n\nexport default function AuthCallback() {\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    supabase.auth.onAuthStateChange((event, session) => {\n      console.log(\"Auth state change:\", event, session); // Add this line\n      if (event === \"SIGNED_IN\") {\n        navigate(\"/dashboard\");\n      }\n    });\n\n    // Handle the initial session\n    const handleInitialSession = async () => {\n      const {\n        data: { session },\n      } = await supabase.auth.getSession();\n      console.log(\"Initial session:\", session); // Add this line\n      if (session) {\n        navigate(\"/dashboard\");\n      } else {\n        navigate(\"/\");\n      }\n    };\n\n    handleInitialSession();\n  }, [navigate]);\n\n  return (\n    <div className=\"min-h-screen flex items-center justify-center\">\n      <div className=\"text-center\">\n        <h2 className=\"text-2xl font-semibold mb-2\">Authenticating...</h2>\n        <p className=\"text-muted-foreground\">\n          Please wait while we verify your credentials.\n        </p>\n      </div>\n    </div>\n  );\n}\n","import HeroSection from \"./HeroSection\";\nimport { Layout } from \"./Layout\";\nimport { PageTransition } from \"./ui/page-transition\";\nimport { Button } from \"./ui/button\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"./ui/card\";\nimport { Badge } from \"./ui/badge\";\nimport { Brain, Building2, BarChart3, Home, MessageSquare, Shield } from \"lucide-react\";\n\nconst aiFeatures = [\n  {\n    title: \"AI Property Analysis\",\n    description: \"Advanced AI algorithms analyze market trends, rental rates, and property conditions to optimize your investment returns.\",\n    icon: Brain,\n    badge: \"AI-Powered\"\n  },\n  {\n    title: \"Smart Tenant Matching\",\n    description: \"AI-driven tenant screening and matching system to find the perfect tenants for your properties.\",\n    icon: Home,\n    badge: \"Smart Match\"\n  },\n  {\n    title: \"Predictive Maintenance\",\n    description: \"AI predicts maintenance needs before they become issues, saving you time and money.\",\n    icon: Building2,\n    badge: \"Predictive\"\n  },\n  {\n    title: \"Automated Reporting\",\n    description: \"AI-generated insights and reports on property performance, maintenance history, and financial metrics.\",\n    icon: BarChart3,\n    badge: \"Automated\"\n  },\n  {\n    title: \"AI Chat Support\",\n    description: \"24/7 AI-powered chat support for tenants and property owners.\",\n    icon: MessageSquare,\n    badge: \"24/7 Support\"\n  },\n  {\n    title: \"Smart Security\",\n    description: \"AI-enhanced security monitoring and access control systems.\",\n    icon: Shield,\n    badge: \"Enhanced\"\n  }\n];\n\nconst managementServices = [\n  {\n    title: \"Tenant Screening\",\n    description: \"Comprehensive tenant screening with AI-powered background checks and risk assessment.\",\n  },\n  {\n    title: \"Rent Collection\",\n    description: \"Smart rent collection with predictive payment analysis and automated reminders.\",\n  },\n  {\n    title: \"Property Maintenance\",\n    description: \"AI-driven maintenance scheduling and vendor management.\",\n  },\n  {\n    title: \"Financial Reporting\",\n    description: \"Advanced financial analytics with AI-powered forecasting and recommendations.\",\n  },\n];\n\nexport default function PropertyManagementPage() {\n  return (\n    <PageTransition>\n      <Layout>\n        <HeroSection\n          title=\"AI-Powered Property Management\"\n          subtitle=\"Experience the future of property management with our advanced AI solutions.\"\n          backgroundImage=\"https://images.unsplash.com/photo-1568605114967-8130f3a36994?ixlib=rb-4.0.3\"\n          showSearch={false}\n          showStats={false}\n          height=\"h-[400px]\"\n        />\n        <main className=\"container mx-auto px-4 py-8 pt-24\">\n          <div className=\"max-w-6xl mx-auto space-y-16\">\n            <div className=\"text-center\">\n              <h1 className=\"text-3xl font-bold mb-2\">\n                Next-Generation Property Management\n              </h1>\n              <p className=\"text-muted-foreground max-w-2xl mx-auto\">\n                Leveraging artificial intelligence to revolutionize property management and maximize your investment returns.\n              </p>\n            </div>\n\n            {/* AI Features Grid */}\n            <section className=\"space-y-8\">\n              <h2 className=\"text-2xl font-semibold text-center\">AI-Powered Features</h2>\n              <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n                {aiFeatures.map((feature, index) => (\n                  <Card key={index} className=\"hover:shadow-lg transition-shadow\">\n                    <CardHeader>\n                      <div className=\"flex items-center justify-between mb-2\">\n                        <feature.icon className=\"h-6 w-6 text-primary\" />\n                        <Badge variant=\"secondary\">{feature.badge}</Badge>\n                      </div>\n                      <CardTitle className=\"text-xl\">{feature.title}</CardTitle>\n                    </CardHeader>\n                    <CardContent>\n                      <p className=\"text-muted-foreground\">{feature.description}</p>\n                    </CardContent>\n                  </Card>\n                ))}\n              </div>\n            </section>\n\n            {/* Traditional Services with AI Enhancement */}\n            <section className=\"space-y-8\">\n              <h2 className=\"text-2xl font-semibold text-center\">Core Services Enhanced by AI</h2>\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                {managementServices.map((service, index) => (\n                  <Card key={index} className=\"hover:shadow-lg transition-shadow\">\n                    <CardHeader>\n                      <CardTitle>{service.title}</CardTitle>\n                    </CardHeader>\n                    <CardContent>\n                      <p className=\"text-muted-foreground\">{service.description}</p>\n                    </CardContent>\n                  </Card>\n                ))}\n              </div>\n            </section>\n\n            <section className=\"space-y-8 bg-muted p-8 rounded-lg\">\n              <h2 className=\"text-2xl font-semibold text-center\">Why Choose Our AI-Powered Management?</h2>\n              <div className=\"prose prose-lg max-w-none\">\n                <ul className=\"list-disc pl-6 space-y-2\">\n                  <li>Reduce operational costs by up to 30% with AI automation</li>\n                  <li>Minimize vacancy rates with smart tenant matching</li>\n                  <li>Prevent maintenance issues before they occur</li>\n                  <li>Get real-time insights and predictive analytics</li>\n                  <li>24/7 automated support for tenants</li>\n                  <li>Enhanced security and risk management</li>\n                </ul>\n              </div>\n            </section>\n\n            <section className=\"text-center space-y-6\">\n              <h2 className=\"text-2xl font-semibold\">Ready to Transform Your Property Management?</h2>\n              <p className=\"text-muted-foreground max-w-2xl mx-auto\">\n                Experience the power of AI-driven property management. Contact us to learn how we can help optimize your property portfolio.\n              </p>\n              <Button size=\"lg\" className=\"px-8\">\n                Schedule a Demo\n              </Button>\n            </section>\n          </div>\n        </main>\n      </Layout>\n    </PageTransition>\n  );\n}\n","import * as React from \"react\"\nimport * as SliderPrimitive from \"@radix-ui/react-slider\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Slider = React.forwardRef<\n  React.ElementRef<typeof SliderPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SliderPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <SliderPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex w-full touch-none select-none items-center\",\n      className\n    )}\n    {...props}\n  >\n    <SliderPrimitive.Track className=\"relative h-1.5 w-full grow overflow-hidden rounded-full bg-primary/20\">\n      <SliderPrimitive.Range className=\"absolute h-full bg-primary\" />\n    </SliderPrimitive.Track>\n    <SliderPrimitive.Thumb className=\"block h-4 w-4 rounded-full border border-primary/50 bg-background shadow transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50\" />\n  </SliderPrimitive.Root>\n))\nSlider.displayName = SliderPrimitive.Root.displayName\n\nexport { Slider }\n","// Import type only to avoid build issues\nimport type { GoogleGenerativeAI } from \"@google/generative-ai\";\n\nlet genAI: GoogleGenerativeAI;\n\nasync function initializeAI() {\n  if (!genAI) {\n    const { GoogleGenerativeAI } = await import(\"@google/generative-ai\");\n    genAI = new GoogleGenerativeAI(import.meta.env.VITE_GEMINI_API_KEY);\n  }\n  return genAI;\n}\n\nfunction sanitizeJsonString(str: string): string {\n  // Find the first { and last } to extract just the JSON object\n  const start = str.indexOf('{');\n  const end = str.lastIndexOf('}') + 1;\n  if (start === -1 || end === 0) throw new Error(\"Invalid JSON response\");\n  return str.slice(start, end);\n}\n\nexport async function getInvestmentAnalysis(propertyType: string, budget: number) {\n  const ai = await initializeAI();\n  const model = ai.getGenerativeModel({ model: \"gemini-pro\" });\n\n  const prompt = `\n    You are a UK property investment expert. Analyze investment opportunities for ${propertyType} properties with a budget of £${budget}.\n    Respond with a JSON object containing ONLY these exact fields:\n    {\n      \"analysis\": \"Brief overview of the investment opportunity\",\n      \"roi_range\": \"Expected ROI range as a percentage\",\n      \"risks\": [\"Risk 1\", \"Risk 2\", \"Risk 3\"],\n      \"opportunities\": [\"Opportunity 1\", \"Opportunity 2\", \"Opportunity 3\"],\n      \"market_trends\": [\"Trend 1\", \"Trend 2\", \"Trend 3\"]\n    }\n    Ensure each array has exactly 3 items and all fields are present.\n  `;\n\n  try {\n    const result = await model.generateContent(prompt);\n    const response = await result.response;\n    const text = sanitizeJsonString(response.text().trim());\n    console.log('Raw Analysis Response:', text);\n    \n    const parsedData = JSON.parse(text);\n    \n    // Validate the response structure\n    if (!parsedData.analysis || !parsedData.roi_range || \n        !Array.isArray(parsedData.risks) || !Array.isArray(parsedData.opportunities) || \n        !Array.isArray(parsedData.market_trends)) {\n      throw new Error('Invalid response format');\n    }\n\n    return {\n      analysis: parsedData.analysis,\n      roi_range: parsedData.roi_range,\n      risks: parsedData.risks.slice(0, 3),\n      opportunities: parsedData.opportunities.slice(0, 3),\n      market_trends: parsedData.market_trends.slice(0, 3)\n    };\n  } catch (error) {\n    console.error(\"Error in getInvestmentAnalysis:\", error);\n    return {\n      analysis: `Analysis for ${propertyType} properties with £${budget} budget is currently unavailable`,\n      roi_range: \"8-12%\",\n      risks: [\n        \"Market volatility\",\n        \"Economic uncertainty\",\n        \"Property condition risks\"\n      ],\n      opportunities: [\n        \"Value appreciation potential\",\n        \"Rental income opportunities\",\n        \"Development possibilities\"\n      ],\n      market_trends: [\n        \"Rising demand in key areas\",\n        \"Stable price growth\",\n        \"Infrastructure development\"\n      ]\n    };\n  }\n}\n\nexport async function getMarketPredictions(location: string) {\n  const ai = await initializeAI();\n  const model = ai.getGenerativeModel({ model: \"gemini-pro\" });\n\n  const prompt = `\n    You are a UK property market expert. Predict property market trends for ${location} in the next 12 months.\n    Respond ONLY with a JSON object in this exact format:\n    {\n      \"price_prediction\": \"2-3 sentence prediction of price movements\",\n      \"demand_factors\": [\"3 specific demand factors\"],\n      \"recommendations\": [\"3 specific investment recommendations\"]\n    }\n  `;\n\n  try {\n    const result = await model.generateContent(prompt);\n    const response = await result.response;\n    const text = sanitizeJsonString(response.text().trim());\n    console.log('Raw Predictions Response:', text);\n    return JSON.parse(text);\n  } catch (error) {\n    console.error(\"Error in getMarketPredictions:\", error);\n    return {\n      price_prediction: \"Market prediction currently unavailable\",\n      demand_factors: [\"Population growth\", \"Economic development\", \"Infrastructure improvements\"],\n      recommendations: [\"Research thoroughly\", \"Consider long-term potential\", \"Evaluate local amenities\"]\n    };\n  }\n}\n\nexport async function getInvestmentStrategy(investorProfile: any) {\n  const ai = await initializeAI();\n  const model = ai.getGenerativeModel({ model: \"gemini-pro\" });\n\n  const prompt = `\n    You are a UK property investment advisor. Create a strategy for a ${investorProfile.experience} investor with £${investorProfile.budget} budget and ${investorProfile.riskTolerance} risk tolerance.\n    Respond ONLY with a JSON object in this exact format:\n    {\n      \"strategy\": \"2-3 sentence overview of recommended strategy\",\n      \"portfolio_allocation\": \"Suggested portfolio breakdown percentages\",\n      \"timeline\": \"Recommended investment timeline\",\n      \"expected_returns\": \"Projected returns overview\"\n    }\n  `;\n\n  try {\n    const result = await model.generateContent(prompt);\n    const response = await result.response;\n    const text = sanitizeJsonString(response.text().trim());\n    console.log('Raw Strategy Response:', text);\n    return JSON.parse(text);\n  } catch (error) {\n    console.error(\"Error in getInvestmentStrategy:\", error);\n    return {\n      strategy: \"Investment strategy currently unavailable\",\n      portfolio_allocation: \"Residential: 60%, Commercial: 30%, Cash: 10%\",\n      timeline: \"5-10 years recommended holding period\",\n      expected_returns: \"8-12% annual return potential\"\n    };\n  }\n}\n\nexport async function getPropertyAnalysis(property: any) {\n  const ai = await initializeAI();\n  const model = ai.getGenerativeModel({ model: \"gemini-pro\" });\n\n  const prompt = `\n    As a UK property expert, analyze this property:\n    Property Type: ${property.property_type}\n    Details: ${property.bedroom} bedrooms, ${property.bathroom} bathrooms\n    Size: ${property.square_footage} sq ft\n    Location: ${property.city}\n    Price: £${property.price}\n\n    Respond with a JSON object in exactly this format:\n    {\n      \"market_value_analysis\": \"Brief analysis of the property's market value\",\n      \"investment_potential\": \"Analysis of investment potential\",\n      \"key_advantages\": [\"Advantage 1\", \"Advantage 2\", \"Advantage 3\"],\n      \"considerations\": [\"Consideration 1\", \"Consideration 2\", \"Consideration 3\"],\n      \"recommendation\": \"Brief recommendation\"\n    }\n    Keep the response strictly in this JSON format with no additional text.\n  `;\n\n  try {\n    console.log('Sending prompt to Gemini:', prompt);\n    const result = await model.generateContent(prompt);\n    const response = await result.response;\n    const text = response.text().trim();\n    console.log('Raw Gemini response:', text);\n    \n    // Clean and parse the response\n    const cleanedText = sanitizeJsonString(text);\n    console.log('Cleaned response:', cleanedText);\n    \n    const parsedData = JSON.parse(cleanedText);\n    \n    // Validate the response structure\n    if (!parsedData.market_value_analysis || \n        !parsedData.investment_potential || \n        !Array.isArray(parsedData.key_advantages) || \n        !Array.isArray(parsedData.considerations) || \n        !parsedData.recommendation) {\n      console.error('Invalid response structure:', parsedData);\n      throw new Error('Invalid response structure from AI');\n    }\n\n    return {\n      market_value_analysis: parsedData.market_value_analysis,\n      investment_potential: parsedData.investment_potential,\n      key_advantages: parsedData.key_advantages.slice(0, 3),\n      considerations: parsedData.considerations.slice(0, 3),\n      recommendation: parsedData.recommendation\n    };\n  } catch (error) {\n    console.error(\"Error in getPropertyAnalysis:\", error);\n    console.error(\"Property data:\", property);\n    \n    // More specific fallback data based on the property\n    return {\n      market_value_analysis: `This ${property.property_type} property in ${property.city} requires detailed market analysis.`,\n      investment_potential: `${property.bedroom} bedroom property with potential for rental or resale value appreciation.`,\n      key_advantages: [\n        `${property.bedroom} bedrooms suitable for the local market`,\n        `${property.square_footage} sq ft offering good space`,\n        `Located in ${property.city}`\n      ],\n      considerations: [\n        \"Current market conditions\",\n        \"Property condition assessment needed\",\n        \"Local area development plans\"\n      ],\n      recommendation: `Consider viewing this ${property.property_type} property for a detailed assessment.`\n    };\n  }\n} ","import React from \"react\";\nimport { Layout } from \"./Layout\";\nimport { PageTransition } from \"./ui/page-transition\";\nimport HeroSection from \"./HeroSection\";\nimport { Button } from \"./ui/button\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"./ui/card\";\nimport { Input } from \"./ui/input\";\nimport { \n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from \"./ui/select\";\nimport { Slider } from \"./ui/slider\";\nimport { \n  getInvestmentAnalysis, \n  getMarketPredictions, \n  getInvestmentStrategy \n} from \"../lib/ai-utils\";\nimport { Loader2, TrendingUp, Brain, BarChart3 } from \"lucide-react\";\n\ntype PropertyType = \"residential\" | \"commercial\" | \"industrial\";\n\nexport default function InvestmentOpportunitiesPage() {\n  const [loading, setLoading] = React.useState(false);\n  const [error, setError] = React.useState<string | null>(null);\n  const [propertyType, setPropertyType] = React.useState<PropertyType>(\"residential\");\n  const [budget, setBudget] = React.useState(250000);\n  const [location, setLocation] = React.useState(\"London\");\n  const [analysis, setAnalysis] = React.useState<any>(null);\n  const [predictions, setPredictions] = React.useState<any>(null);\n  const [strategy, setStrategy] = React.useState<any>(null);\n\n  const investorProfile = {\n    experience: \"intermediate\",\n    budget: budget,\n    riskTolerance: \"moderate\"\n  };\n\n  const handleAnalyze = async () => {\n    setLoading(true);\n    setError(null);\n    \n    try {\n      // Execute each API call separately for better error handling\n      const analysisData = await getInvestmentAnalysis(propertyType, budget);\n      if (!analysisData || typeof analysisData !== 'object') {\n        throw new Error('Invalid analysis data received');\n      }\n      setAnalysis(analysisData);\n\n      const predictionsData = await getMarketPredictions(location);\n      if (!predictionsData || typeof predictionsData !== 'object') {\n        throw new Error('Invalid predictions data received');\n      }\n      setPredictions(predictionsData);\n\n      const strategyData = await getInvestmentStrategy(investorProfile);\n      if (!strategyData || typeof strategyData !== 'object') {\n        throw new Error('Invalid strategy data received');\n      }\n      setStrategy(strategyData);\n\n    } catch (error) {\n      console.error(\"Error in analysis:\", error);\n      setError(error instanceof Error ? error.message : \"Failed to generate analysis. Please try again.\");\n      // Clear any partial results\n      setAnalysis(null);\n      setPredictions(null);\n      setStrategy(null);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <PageTransition>\n      <Layout>\n        <HeroSection\n          title=\"AI-Powered Investment Analysis\"\n          subtitle=\"Make data-driven investment decisions with our advanced AI analytics\"\n          showSearch={false}\n          height=\"h-[400px]\"\n          onSearch={() => {}}\n        />\n        \n        <main className=\"container mx-auto px-4 py-8 pt-24\">\n          <div className=\"max-w-7xl mx-auto space-y-12\">\n            {/* Analysis Controls */}\n            <section className=\"bg-card p-6 rounded-lg shadow-lg\">\n              <h2 className=\"text-2xl font-bold mb-6\">Investment Analysis</h2>\n              <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n                <div className=\"space-y-2\">\n                  <label className=\"text-sm font-medium\">Property Type</label>\n                  <Select \n                    defaultValue={propertyType}\n                    onValueChange={(value: PropertyType) => setPropertyType(value)}\n                  >\n                    <SelectTrigger className=\"w-full\">\n                      <SelectValue placeholder=\"Select property type\" />\n                    </SelectTrigger>\n                    <SelectContent>\n                      <SelectItem value=\"residential\">Residential</SelectItem>\n                      <SelectItem value=\"commercial\">Commercial</SelectItem>\n                      <SelectItem value=\"industrial\">Industrial</SelectItem>\n                    </SelectContent>\n                  </Select>\n                </div>\n                \n                <div className=\"space-y-2\">\n                  <label className=\"text-sm font-medium\">Location</label>\n                  <Input\n                    type=\"text\"\n                    value={location}\n                    onChange={(e) => setLocation(e.target.value)}\n                    placeholder=\"Enter location\"\n                  />\n                </div>\n                \n                <div className=\"space-y-2\">\n                  <label className=\"text-sm font-medium\">Budget: £{budget.toLocaleString()}</label>\n                  <Slider\n                    value={[budget]}\n                    onValueChange={(value) => setBudget(value[0])}\n                    min={100000}\n                    max={1000000}\n                    step={50000}\n                  />\n                </div>\n              </div>\n              \n              <Button\n                onClick={handleAnalyze}\n                disabled={loading}\n                className=\"mt-6\"\n                size=\"lg\"\n              >\n                {loading ? (\n                  <>\n                    <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />\n                    Analyzing...\n                  </>\n                ) : (\n                  'Analyze Investment Opportunity'\n                )}\n              </Button>\n            </section>\n\n            {/* Analysis Results */}\n            {error && (\n              <div className=\"bg-destructive/10 text-destructive p-4 rounded-lg\">\n                {error}\n              </div>\n            )}\n            \n            {analysis && predictions && strategy && !error && (\n              <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n                {/* Market Analysis */}\n                <Card>\n                  <CardHeader>\n                    <TrendingUp className=\"h-6 w-6 text-primary mb-2\" />\n                    <CardTitle>Market Analysis</CardTitle>\n                  </CardHeader>\n                  <CardContent className=\"space-y-4\">\n                    <div>\n                      <h4 className=\"font-semibold\">Analysis</h4>\n                      <p className=\"text-sm text-muted-foreground\">\n                        {analysis.analysis || \"Analysis not available\"}\n                      </p>\n                    </div>\n                    <div>\n                      <h4 className=\"font-semibold\">ROI Range</h4>\n                      <p className=\"text-sm text-muted-foreground\">\n                        {analysis.roi_range || \"ROI range not available\"}\n                      </p>\n                    </div>\n                    <div>\n                      <h4 className=\"font-semibold\">Risks</h4>\n                      <ul className=\"list-disc pl-4 text-sm text-muted-foreground\">\n                        {Array.isArray(analysis.risks) ? (\n                          analysis.risks.map((risk: string, i: number) => (\n                            <li key={i}>{risk}</li>\n                          ))\n                        ) : (\n                          <li>Risks data not available</li>\n                        )}\n                      </ul>\n                    </div>\n                    <div>\n                      <h4 className=\"font-semibold\">Market Trends</h4>\n                      <ul className=\"list-disc pl-4 text-sm text-muted-foreground\">\n                        {Array.isArray(analysis.market_trends) ? (\n                          analysis.market_trends.map((trend: string, i: number) => (\n                            <li key={i}>{trend}</li>\n                          ))\n                        ) : (\n                          <li>Market trends not available</li>\n                        )}\n                      </ul>\n                    </div>\n                  </CardContent>\n                </Card>\n\n                {/* Market Predictions */}\n                <Card>\n                  <CardHeader>\n                    <Brain className=\"h-6 w-6 text-primary mb-2\" />\n                    <CardTitle>AI Predictions</CardTitle>\n                  </CardHeader>\n                  <CardContent className=\"space-y-2\">\n                    <div>\n                      <h4 className=\"font-semibold\">Price Trend</h4>\n                      <p className=\"text-sm text-muted-foreground\">\n                        {predictions.price_prediction || \"Price prediction not available\"}\n                      </p>\n                    </div>\n                    <div>\n                      <h4 className=\"font-semibold\">Demand Factors</h4>\n                      <ul className=\"list-disc pl-4 text-sm text-muted-foreground\">\n                        {Array.isArray(predictions.demand_factors) ? (\n                          predictions.demand_factors.map((factor: string, i: number) => (\n                            <li key={i}>{factor}</li>\n                          ))\n                        ) : (\n                          <li>Demand factors not available</li>\n                        )}\n                      </ul>\n                    </div>\n                  </CardContent>\n                </Card>\n\n                {/* Investment Strategy */}\n                <Card>\n                  <CardHeader>\n                    <BarChart3 className=\"h-6 w-6 text-primary mb-2\" />\n                    <CardTitle>Recommended Strategy</CardTitle>\n                  </CardHeader>\n                  <CardContent className=\"space-y-2\">\n                    <div>\n                      <h4 className=\"font-semibold\">Portfolio Allocation</h4>\n                      <p className=\"text-sm text-muted-foreground\">\n                        {strategy.portfolio_allocation || \"Portfolio allocation not available\"}\n                      </p>\n                    </div>\n                    <div>\n                      <h4 className=\"font-semibold\">Expected Returns</h4>\n                      <p className=\"text-sm text-muted-foreground\">\n                        {strategy.expected_returns || \"Expected returns not available\"}\n                      </p>\n                    </div>\n                    <div>\n                      <h4 className=\"font-semibold\">Timeline</h4>\n                      <p className=\"text-sm text-muted-foreground\">\n                        {strategy.timeline || \"Timeline not available\"}\n                      </p>\n                    </div>\n                  </CardContent>\n                </Card>\n              </div>\n            )}\n          </div>\n        </main>\n      </Layout>\n    </PageTransition>\n  );\n}\n","import React from \"react\";\nimport Header from \"./Header\";\nimport HeroSection from \"./HeroSection\";\nimport { Layout } from \"./Layout\";\nimport { PageTransition } from \"./ui/page-transition\";\nimport { Button } from \"./ui/button\";\n\nexport default function AboutUsPage() {\n  return (\n    <PageTransition>\n      <Layout>\n        <HeroSection\n          title=\"About MyVGE\"\n          subtitle=\"Learn more about our mission and our team\"\n          backgroundImage=\"https://images.unsplash.com/photo-1507585495646-50c2b6dbd483?ixlib=rb-4.0.3\"\n          showSearch={false}\n          showStats={false}\n          height=\"h-[400px]\"\n        />\n        <main className=\"container mx-auto px-4 py-8 pt-24\">\n          <div className=\"max-w-4xl mx-auto space-y-8\">\n            <div className=\"text-center\">\n              <h1 className=\"text-3xl font-bold mb-2\">Our Story</h1>\n              <p className=\"text-muted-foreground\">\n                MyVGE is dedicated to providing property investors with the\n                tools and insights they need to succeed.\n              </p>\n            </div>\n\n            <section className=\"space-y-4\">\n              <h2 className=\"text-2xl font-semibold\">Our Mission</h2>\n              <p>\n                To empower property investors with comprehensive data, expert\n                analysis, and innovative tools to make informed decisions and\n                achieve their financial goals. We are committed to ethical\n                practices, diversity, and transparency in all our operations.\n              </p>\n            </section>\n\n            <section className=\"space-y-4\">\n              <h2 className=\"text-2xl font-semibold\">Our Values</h2>\n              <ul className=\"list-disc list-inside\">\n                <li>\n                  **Ethical Practices:** We adhere to the highest ethical\n                  standards in all our dealings, ensuring fairness and\n                  integrity.\n                </li>\n                <li>\n                  **Diversity:** We embrace diversity and inclusion, fostering\n                  a welcoming environment for all.\n                </li>\n                <li>\n                  **Transparency:** We are committed to open and honest\n                  communication, providing clear and accurate information to our\n                  users.\n                </li>\n              </ul>\n            </section>\n\n            <section className=\"space-y-4\">\n              <h2 className=\"text-2xl font-semibold\">Our Team</h2>\n              <p>\n                Our team consists of experienced property professionals, data\n                scientists, and technology experts who are passionate about\n                helping investors navigate the complexities of the real estate\n                market. We are a diverse group of individuals with a shared\n                commitment to excellence.\n              </p>\n            </section>\n\n            <section className=\"space-y-4\">\n              <h2 className=\"text-2xl font-semibold\">Contact Us</h2>\n              <p>\n                We'd love to hear from you! Contact us to learn more about our\n                services or to discuss your investment needs.\n              </p>\n              <Button>Contact Us</Button>\n            </section>\n          </div>\n        </main>\n      </Layout>\n    </PageTransition>\n  );\n}\n","import React from \"react\";\nimport {\n  Dialog,\n  DialogContent,\n  DialogHeader,\n  DialogTitle,\n} from \"./ui/dialog\";\nimport { Deal } from \"../lib/deals\";\nimport { Badge } from \"./ui/badge\";\nimport { formatCurrency } from \"../lib/utils\";\nimport { MapPin } from \"lucide-react\";\n\ninterface DealModalProps {\n  isOpen: boolean;\n  onClose: () => void;\n  deal: Deal | null;\n  isSubscriber: boolean;\n}\n\nexport const DealModal: React.FC<DealModalProps> = ({ isOpen, onClose, deal, isSubscriber }) => {\n  if (!deal) return null;\n\n  return (\n    <Dialog open={isOpen} onOpenChange={onClose}>\n      <DialogContent className=\"max-w-3xl w-[95vw] max-h-[90vh] overflow-y-auto p-4 sm:p-6\">\n        <DialogHeader>\n          <DialogTitle className=\"flex flex-col sm:flex-row sm:items-start sm:justify-between gap-2 sm:gap-4\">\n            <span className=\"text-lg sm:text-xl font-bold break-words pr-4\">{deal.title}</span>\n            <div className=\"flex gap-2 flex-wrap\">\n              <Badge className=\"text-xs\">{deal.property_type}</Badge>\n              <Badge variant=\"secondary\" className=\"text-xs\">{deal.deal_type}</Badge>\n            </div>\n          </DialogTitle>\n        </DialogHeader>\n\n        {/* Image */}\n        <div className=\"relative aspect-video mb-3 sm:mb-4 overflow-hidden rounded-lg\">\n          <img\n            src={deal.image_url}\n            alt={deal.title}\n            className=\"w-full h-full object-cover\"\n          />\n        </div>\n\n        {/* Location */}\n        <div className=\"flex items-center gap-2 mb-3 sm:mb-4 text-sm sm:text-base text-muted-foreground\">\n          <MapPin className=\"h-4 w-4 flex-shrink-0\" />\n          <span className=\"break-words\">{deal.location}</span>\n        </div>\n\n        {/* Description */}\n        <div className=\"mb-4 sm:mb-6\">\n          <h3 className=\"text-base sm:text-lg font-semibold mb-2\">Description</h3>\n          <p className=\"text-xs sm:text-sm text-muted-foreground\">{deal.description}</p>\n        </div>\n\n        {/* Financial Details */}\n        <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-3 sm:gap-4 mb-4 sm:mb-6\">\n          <div>\n            <h3 className=\"text-sm sm:text-base font-semibold mb-1 sm:mb-2\">Price</h3>\n            <p className=\"text-base sm:text-lg\">{formatCurrency(deal.price)}</p>\n          </div>\n          <div>\n            <h3 className=\"text-sm sm:text-base font-semibold mb-1 sm:mb-2\">ROI</h3>\n            <p className=\"text-base sm:text-lg text-emerald-500\">{deal.roi_percentage}%</p>\n          </div>\n          <div>\n            <h3 className=\"text-sm sm:text-base font-semibold mb-1 sm:mb-2\">Investment Term</h3>\n            <p className=\"text-base sm:text-lg\">{deal.investment_term}</p>\n          </div>\n          <div>\n            <h3 className=\"text-sm sm:text-base font-semibold mb-1 sm:mb-2\">Property Type</h3>\n            <p className=\"text-base sm:text-lg\">{deal.property_type}</p>\n          </div>\n        </div>\n\n        {/* Additional Details */}\n        <div className=\"space-y-3 sm:space-y-4\">\n          <div>\n            <h3 className=\"text-sm sm:text-base font-semibold mb-1 sm:mb-2\">Deal Type</h3>\n            <Badge variant=\"outline\" className=\"text-xs sm:text-sm\">{deal.deal_type}</Badge>\n          </div>\n          <div>\n            <h3 className=\"text-sm sm:text-base font-semibold mb-1 sm:mb-2\">Location</h3>\n            <p className=\"text-xs sm:text-sm text-muted-foreground break-words\">{deal.location}</p>\n          </div>\n        </div>\n      </DialogContent>\n    </Dialog>\n  );\n}; ","import { useEffect, useState } from \"react\";\nimport { useAuth } from \"../lib/auth\";\nimport { getDeals } from \"../lib/deals\";\nimport type { Deal } from \"../lib/deals\";\nimport { DealCard } from \"./DealCard\";\nimport { DealModal } from \"./DealModal\";\nimport { Layout } from \"./Layout\";\nimport { PageTransition } from \"./ui/page-transition\";\nimport HeroSection from \"./HeroSection\";\nimport { Button } from \"./ui/button\";\nimport { Card } from \"./ui/card\";\nimport { LogIn, UserPlus } from \"lucide-react\";\n\ninterface DealsPageProps {\n  onSignIn?: () => void;\n  onSignUp?: () => void;\n}\n\n// Auth context checker wrapper\nconst AuthContextChecker = ({ children }: { children: React.ReactNode }) => {\n  try {\n    // Try to access auth context but don't use the result\n    useAuth();\n    // If we get here, auth context is available\n    return <>{children}</>;\n  } catch (error) {\n    // If auth context is not available, show a fallback\n    return (\n      <Layout>\n        <div className=\"min-h-screen flex flex-col items-center justify-center p-4\">\n          <Card className=\"p-6 max-w-md w-full\">\n            <h2 className=\"text-xl font-bold mb-4 text-center\">Authentication Error</h2>\n            <p className=\"text-muted-foreground mb-6 text-center\">\n              Unable to load authentication. Please refresh the page or try again later.\n            </p>\n            <Button \n              className=\"w-full\" \n              onClick={() => window.location.reload()}\n            >\n              Refresh Page\n            </Button>\n          </Card>\n        </div>\n      </Layout>\n    );\n  }\n};\n\nexport default function DealsPage({ onSignIn, onSignUp }: DealsPageProps) {\n  // Wrap the component content in the auth checker\n  return (\n    <AuthContextChecker>\n      <DealsPageContent onSignIn={onSignIn} onSignUp={onSignUp} />\n    </AuthContextChecker>\n  );\n}\n\n// Separate the main component content to ensure useAuth is only called when context is available\nfunction DealsPageContent({ onSignIn, onSignUp }: DealsPageProps) {\n  const { user, profile, isLoading } = useAuth();\n  const [deals, setDeals] = useState<Deal[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [selectedDeal, setSelectedDeal] = useState<Deal | null>(null);\n\n  useEffect(() => {\n    let mounted = true;\n\n    async function loadDeals() {\n      try {\n        const dealsData = await getDeals();\n        if (mounted) {\n          setDeals(dealsData);\n          setLoading(false);\n        }\n      } catch (error) {\n        console.error('Error loading deals:', error);\n        if (mounted) {\n          setLoading(false);\n        }\n      }\n    }\n\n    loadDeals(); // Load deals regardless of auth state\n\n    return () => {\n      mounted = false;\n    };\n  }, []); // Remove user and isLoading from dependencies\n\n  // Show loading state\n  if (isLoading) {\n    return (\n      <Layout>\n        <div className=\"min-h-screen flex items-center justify-center\">\n          <div>Loading...</div>\n        </div>\n      </Layout>\n    );\n  }\n\n  return (\n    <Layout>\n      <PageTransition>\n        <div className=\"min-h-screen bg-neutral\">\n          <HeroSection\n            title=\"Property Deals\"\n            subtitle=\"Discover exclusive property investment opportunities\"\n            showSearch={true}\n            showStats={false}\n            height=\"h-[400px]\"\n            image=\"/deals-hero.jpg\"\n          />\n\n          <main className=\"container mx-auto px-4 py-8\">\n            {loading ? (\n              <div className=\"text-center py-8\">Loading deals...</div>\n            ) : !user ? (\n              // Paywall for non-authenticated users\n              <div className=\"max-w-4xl mx-auto\">\n                <Card className=\"p-8 text-center mb-8\">\n                  <h2 className=\"text-2xl font-bold mb-4\">Sign in to View Full Deal Details</h2>\n                  <p className=\"text-muted-foreground mb-8\">\n                    Get access to exclusive property deals and investment opportunities. \n                    Create an account or sign in to view all available deals.\n                  </p>\n                  <div className=\"flex justify-center gap-4\">\n                    <Button \n                      onClick={onSignIn}\n                      className=\"flex items-center gap-2\"\n                    >\n                      <LogIn className=\"w-4 w-4\" />\n                      Sign In\n                    </Button>\n                    <Button \n                      variant=\"outline\"\n                      onClick={onSignUp}\n                      className=\"flex items-center gap-2\"\n                    >\n                      <UserPlus className=\"w-4 w-4\" />\n                      Create Account\n                    </Button>\n                  </div>\n                </Card>\n\n                {/* Show preview of deals */}\n                <div className=\"grid gap-6 md:grid-cols-2 lg:grid-cols-3\">\n                  {deals.map((deal) => (\n                    <DealCard \n                      key={deal.id} \n                      deal={deal}\n                      isSubscriber={false}\n                      onClick={onSignIn}\n                      user={null}\n                    />\n                  ))}\n                </div>\n              </div>\n            ) : (\n              // Full access for authenticated users\n              <div className=\"grid gap-6 md:grid-cols-2 lg:grid-cols-3\">\n                {deals.map((deal) => (\n                  <DealCard \n                    key={deal.id} \n                    deal={deal}\n                    isSubscriber={profile?.subscription_tier !== 'free'}\n                    onClick={() => setSelectedDeal(deal)}\n                    user={user}\n                  />\n                ))}\n              </div>\n            )}\n          </main>\n\n          <DealModal\n            isOpen={!!selectedDeal}\n            onClose={() => setSelectedDeal(null)}\n            deal={selectedDeal}\n            isSubscriber={profile?.subscription_tier !== 'free'}\n          />\n        </div>\n      </PageTransition>\n    </Layout>\n  );\n} ","import React, { useEffect, useState, useRef } from 'react';\nimport { useAuth } from '../lib/auth';\nimport { Layout } from '../components/Layout';\nimport { \n  getConversations, \n  getMessages, \n  sendMessage, \n  subscribeToMessages,\n  searchUsers as searchUsersApi,\n  Conversation,\n  MessageWithProfiles,\n  User\n} from '../lib/messages';\nimport { Card, CardContent, CardHeader, CardTitle } from '../components/ui/card';\nimport { Input } from '../components/ui/input';\nimport { Button } from '../components/ui/button';\nimport { Avatar, AvatarFallback, AvatarImage } from '../components/ui/avatar';\nimport { ScrollArea } from '../components/ui/scroll-area';\nimport { Alert, AlertDescription, AlertTitle } from '../components/ui/alert';\nimport { LoadingSpinner } from '../components/ui/loading-spinner';\nimport { formatDistanceToNow } from 'date-fns';\nimport { Send, Search, Plus, ArrowLeft, MessageSquare, UserPlus, Users, Loader2 } from 'lucide-react';\nimport {\n  Dialog,\n  DialogContent,\n  DialogHeader,\n  DialogTitle,\n  DialogTrigger,\n  DialogDescription,\n} from '../components/ui/dialog';\nimport { PageTransition } from '../components/ui/page-transition';\nimport { cn } from '../lib/utils';\nimport useSWR from 'swr';\nimport { supabase } from '../lib/supabase';\n\nexport default function Messages() {\n  const { user: authUser } = useAuth();\n  const [conversations, setConversations] = useState<Conversation[]>([]);\n  const [selectedConversation, setSelectedConversation] = useState<string | null>(null);\n  const [messages, setMessages] = useState<MessageWithProfiles[]>([]);\n  const [newMessage, setNewMessage] = useState('');\n  const [isLoading, setIsLoading] = useState(true);\n  const [isMessagesLoading, setIsMessagesLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [searchResults, setSearchResults] = useState<any[]>([]);\n  const [isSearching, setIsSearching] = useState(false);\n  const [isNewChatOpen, setIsNewChatOpen] = useState(false);\n  const [isMobileView, setIsMobileView] = useState(false);\n  const [mobileShowMessages, setMobileShowMessages] = useState(false);\n  const messagesEndRef = useRef<HTMLDivElement>(null);\n  const { data: session } = useSWR(\"session\", async () => {\n    const { data } = await supabase.auth.getSession();\n    console.log(\"SWR session check:\", { hasSession: !!data.session, sessionUser: data.session?.user?.id });\n    return data.session;\n  });\n\n  // Authentication state detection\n  const isAuthenticated = !!authUser || !!session;\n  \n  useEffect(() => {\n    console.log(\"Authentication state:\", { \n      authUser: !!authUser, \n      authUserId: authUser?.id,\n      session: !!session, \n      sessionUserId: session?.user?.id,\n      isAuthenticated\n    });\n  }, [authUser, session, isAuthenticated]);\n\n  // Determine if we're in mobile view\n  useEffect(() => {\n    const handleResize = () => {\n      setIsMobileView(window.innerWidth < 768);\n    };\n\n    handleResize(); // Set initial value\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  // Toggle mobile view when conversation is selected\n  useEffect(() => {\n    if (isMobileView && selectedConversation) {\n      setMobileShowMessages(true);\n    }\n  }, [selectedConversation, isMobileView]);\n\n  // Load initial conversations when authenticated\n  useEffect(() => {\n    if (isAuthenticated) {\n      console.log(\"User is authenticated, loading conversations\");\n      loadConversations();\n      const subscription = subscribeToMessages((message) => {\n        // When a new message arrives\n        if (message.sender_id === selectedConversation || \n            message.receiver_id === selectedConversation) {\n          // Add it to the current messages if it belongs to the selected conversation\n          setMessages(prev => [...prev, message]);\n        }\n        // Refresh conversations list to update last messages\n        loadConversations();\n      });\n\n      return () => {\n        subscription?.unsubscribe();\n      };\n    } else {\n      console.log(\"User is not authenticated\");\n      setError(\"Please sign in to view your messages\");\n      setIsLoading(false);\n    }\n  }, [isAuthenticated, selectedConversation]);\n\n  // Listen for auth state changes from Supabase directly\n  useEffect(() => {\n    const { data: authListener } = supabase.auth.onAuthStateChange((event, session) => {\n      console.log(\"Auth state change detected:\", event, !!session);\n      if (session && (event === 'SIGNED_IN' || event === 'INITIAL_SESSION')) {\n        console.log(\"Auth event triggered conversation loading\");\n        setError(null);\n        loadConversations();\n      }\n    });\n\n    return () => {\n      authListener.subscription.unsubscribe();\n    };\n  }, []);\n\n  // Load messages when conversation is selected\n  useEffect(() => {\n    if (selectedConversation) {\n      loadMessages(selectedConversation);\n    }\n  }, [selectedConversation]);\n\n  // Auto-scroll to bottom when messages change\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n\n  // Load all users when the new chat dialog opens\n  useEffect(() => {\n    if (isNewChatOpen) {\n      searchUsers('');\n    }\n  }, [isNewChatOpen]);\n\n  const loadConversations = async () => {\n    try {\n      setIsLoading(true);\n      const activeUser = session?.user || authUser;\n      \n      if (!activeUser?.id) {\n        console.log(\"No active user found for loading conversations\");\n        setConversations([]);\n        return;\n      }\n      \n      console.log(`Loading conversations for user: ${activeUser.id}`);\n      const data = await getConversations();\n      console.log(\"Loaded conversations:\", data);\n      setConversations(data);\n      setError(null);\n    } catch (error) {\n      console.error(\"Error getting conversations:\", error);\n      setError(\"Failed to load conversations. Please try again.\");\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const loadMessages = async (userId: string) => {\n    try {\n      setIsMessagesLoading(true);\n      const msgs = await getMessages(userId);\n      setMessages(msgs);\n    } catch (err) {\n      console.error('Error loading messages:', err);\n    } finally {\n      setIsMessagesLoading(false);\n    }\n  };\n\n  const handleSendMessage = async (e: React.FormEvent) => {\n    e.preventDefault();\n    if (!selectedConversation || !newMessage.trim()) return;\n\n    try {\n      const message = await sendMessage(selectedConversation, newMessage.trim());\n      if (message) {\n        // Message will be added by the subscription\n        setNewMessage('');\n      }\n    } catch (error) {\n      console.error('Error sending message:', error);\n    }\n  };\n\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n  };\n\n  const searchUsers = async (term: string) => {\n    setIsSearching(true);\n    try {\n      // Log that we're starting a search\n      console.log(`Starting user search with term: \"${term || 'all users'}\"`);\n      \n      // Use the searchUsers function from our messages utility\n      const results = await searchUsersApi(term);\n      \n      // Log the results for debugging\n      console.log(`Search returned ${results?.length || 0} users:`, results);\n      \n      setSearchResults(results || []);\n    } catch (error) {\n      console.error('Error searching users:', error);\n      setSearchResults([]);\n    } finally {\n      setIsSearching(false);\n    }\n  };\n\n  const handleBackToConversations = () => {\n    setMobileShowMessages(false);\n  };\n\n  const startNewConversation = (user: User) => {\n    // Check if we already have a conversation with this user\n    const existingConversation = conversations.find(\n      (conv) => conv.user.id === user.id\n    );\n\n    if (existingConversation) {\n      setSelectedConversation(existingConversation.user.id);\n    } else {\n      // Create a new conversation\n      const newConversation: Conversation = {\n        user,\n        lastMessage: null,\n        unreadCount: 0,\n      };\n      setSelectedConversation(newConversation.user.id);\n    }\n    setIsNewChatOpen(false);\n  };\n\n  if (!isAuthenticated && !isLoading) {\n    return (\n      <Layout>\n        <PageTransition>\n          <div className=\"container mx-auto py-8 pt-24 px-4\">\n            <div className=\"max-w-md mx-auto\">\n              <Alert variant=\"destructive\" className=\"shadow-md\">\n                <AlertTitle className=\"font-semibold\">Authentication Required</AlertTitle>\n                <AlertDescription>\n                  Please sign in to view and send messages\n                </AlertDescription>\n              </Alert>\n            </div>\n          </div>\n        </PageTransition>\n      </Layout>\n    );\n  }\n\n  return (\n    <Layout>\n      <PageTransition>\n        <div className=\"bg-gradient-to-b from-blue-50 to-white min-h-screen\">\n          <div className=\"container mx-auto px-4 py-6 pt-20 md:pt-24\">\n            <h1 className=\"text-2xl font-bold mb-6 text-center\">Your Messages</h1>\n            <div className=\"grid grid-cols-1 gap-6 max-w-7xl mx-auto\">\n              <div className=\"flex flex-col md:flex-row md:gap-6 h-[calc(100vh-220px)] md:h-[calc(100vh-260px)]\">\n                {/* Conversations List - hidden on mobile when viewing messages */}\n                <div className={cn(\n                  \"md:w-1/3 lg:w-1/4 flex-shrink-0\",\n                  (isMobileView && mobileShowMessages) ? \"hidden\" : \"flex flex-col\"\n                )}>\n                  <Card className=\"flex-1 flex flex-col overflow-hidden shadow-lg border-2 border-blue-100 rounded-xl\">\n                    <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-4 border-b bg-blue-50\">\n                      <div className=\"flex items-center gap-2\">\n                        <MessageSquare className=\"h-5 w-5 text-blue-500\" />\n                        <CardTitle>Messages</CardTitle>\n                      </div>\n                      <Dialog open={isNewChatOpen} onOpenChange={setIsNewChatOpen}>\n                        <DialogTrigger asChild>\n                          <Button size=\"icon\" variant=\"outline\" className=\"rounded-full h-8 w-8 border-blue-200 bg-white\">\n                            <Plus className=\"h-4 w-4 text-blue-500\" />\n                          </Button>\n                        </DialogTrigger>\n                        <DialogContent>\n                          <DialogHeader>\n                            <DialogTitle className=\"flex items-center gap-2\">\n                              <UserPlus className=\"h-5 w-5 text-blue-500\" />\n                              New Conversation\n                            </DialogTitle>\n                          </DialogHeader>\n                          <div className=\"space-y-4\">\n                            <div className=\"flex gap-2\">\n                              <Input\n                                placeholder=\"Search users...\"\n                                value={searchTerm}\n                                onChange={(e) => {\n                                  setSearchTerm(e.target.value);\n                                }}\n                                onKeyDown={(e) => {\n                                  if (e.key === \"Enter\") {\n                                    searchUsers(searchTerm);\n                                  }\n                                }}\n                                className=\"flex-1\"\n                              />\n                              <Button \n                                size=\"icon\" \n                                variant=\"ghost\" \n                                disabled={isSearching} \n                                className=\"shrink-0\"\n                                onClick={() => searchUsers(searchTerm)}\n                              >\n                                {isSearching ? <Loader2 className=\"h-4 w-4 animate-spin\" /> : <Search className=\"h-4 w-4\" />}\n                              </Button>\n                            </div>\n                            <ScrollArea className=\"h-[300px]\">\n                              {isSearching && (\n                                <div className=\"flex justify-center items-center h-[100px]\">\n                                  <LoadingSpinner />\n                                </div>\n                              )}\n                              {!isSearching && searchResults.length === 0 && (\n                                <div className=\"text-center text-muted-foreground p-4 bg-muted/30 rounded-lg\">\n                                  <Users className=\"h-12 w-12 mx-auto mb-2 text-muted-foreground/50\" />\n                                  <p>No users found</p>\n                                  <p className=\"text-sm mt-2\">\n                                    {searchTerm ? `No users match \"${searchTerm}\"` : \"There are no other users in the system\"}\n                                  </p>\n                                  <div className=\"mt-4 text-sm\">\n                                    <p>Try the following:</p>\n                                    <ul className=\"list-disc text-left pl-8 mt-2 space-y-1\">\n                                      <li>Check if other users have registered</li>\n                                      <li>Make sure your internet connection is working</li>\n                                      <li>Try refreshing the page</li>\n                                      <li>Check your authentication status</li>\n                                    </ul>\n                                  </div>\n                                </div>\n                              )}\n                              {!isSearching && searchResults.map(user => (\n                                <div\n                                  key={user.id}\n                                  className=\"flex items-center gap-3 p-3 hover:bg-blue-50 rounded-lg cursor-pointer transition-colors\"\n                                  onClick={() => {\n                                    setSelectedConversation(user.id);\n                                    setIsNewChatOpen(false);\n                                  }}\n                                >\n                                  <Avatar className=\"h-10 w-10 border-2 border-blue-200\">\n                                    <AvatarImage src={user.avatar_url || undefined} />\n                                    <AvatarFallback className=\"bg-blue-100 text-blue-600\">\n                                      {user.full_name?.charAt(0) || user.email?.charAt(0) || 'U'}\n                                    </AvatarFallback>\n                                  </Avatar>\n                                  <div>\n                                    <p className=\"font-medium\">{user.full_name || user.email}</p>\n                                    {user.full_name && user.email && (\n                                      <p className=\"text-xs text-muted-foreground\">{user.email}</p>\n                                    )}\n                                  </div>\n                                </div>\n                              ))}\n                            </ScrollArea>\n                          </div>\n                        </DialogContent>\n                      </Dialog>\n                    </CardHeader>\n                    <CardContent className=\"flex-1 p-0 overflow-hidden\">\n                      {error && (\n                        <Alert variant=\"destructive\" className=\"m-3 shadow-sm\">\n                          <AlertDescription>{error}</AlertDescription>\n                        </Alert>\n                      )}\n                      \n                      {isLoading ? (\n                        <div className=\"flex justify-center items-center h-full\">\n                          <LoadingSpinner size=\"lg\" />\n                        </div>\n                      ) : conversations.length === 0 ? (\n                        <div className=\"flex flex-col items-center justify-center h-full text-center px-4 py-10 bg-blue-50/50\">\n                          <MessageSquare className=\"h-16 w-16 mb-4 text-blue-200\" />\n                          <h3 className=\"text-lg font-medium mb-2\">No conversations yet</h3>\n                          <p className=\"text-muted-foreground mb-6 max-w-xs\">\n                            Start a new conversation by clicking the plus icon above\n                          </p>\n                          <Button \n                            onClick={() => setIsNewChatOpen(true)}\n                            className=\"gap-2 bg-blue-500 hover:bg-blue-600\"\n                            size=\"sm\"\n                          >\n                            <UserPlus className=\"h-4 w-4\" />\n                            New Conversation\n                          </Button>\n                        </div>\n                      ) : (\n                        <ScrollArea className=\"h-full\">\n                          <div className=\"divide-y divide-blue-100\">\n                            {conversations.map((conversation) => (\n                              <div\n                                key={conversation.user.id}\n                                className={cn(\n                                  \"p-3 cursor-pointer hover:bg-blue-50 transition-colors\",\n                                  selectedConversation === conversation.user.id ? 'bg-blue-100' : ''\n                                )}\n                                onClick={() => setSelectedConversation(conversation.user.id)}\n                              >\n                                <div className=\"flex items-center gap-3\">\n                                  <Avatar className=\"h-12 w-12 border-2 border-blue-200\">\n                                    <AvatarImage src={conversation.user.avatar_url || undefined} />\n                                    <AvatarFallback className=\"bg-blue-100 text-blue-600\">\n                                      {conversation.user.full_name.charAt(0)}\n                                    </AvatarFallback>\n                                  </Avatar>\n                                  <div className=\"flex-1 min-w-0\">\n                                    <div className=\"flex items-center justify-between\">\n                                      <p className=\"font-medium truncate\">{conversation.user.full_name}</p>\n                                      <p className=\"text-xs text-muted-foreground whitespace-nowrap pl-2\">\n                                        {formatDistanceToNow(new Date(conversation.lastMessage.created_at), {\n                                          addSuffix: true,\n                                        })}\n                                      </p>\n                                    </div>\n                                    <div className=\"flex items-center justify-between mt-1\">\n                                      <p className=\"text-sm text-muted-foreground truncate\">\n                                        {conversation.lastMessage.sender_id === authUser.id && \"You: \"}\n                                        {conversation.lastMessage.content}\n                                      </p>\n                                      {conversation.unreadCount > 0 && (\n                                        <div className=\"bg-blue-500 text-white rounded-full h-5 min-w-5 px-1.5 flex items-center justify-center text-xs ml-2\">\n                                          {conversation.unreadCount}\n                                        </div>\n                                      )}\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            ))}\n                          </div>\n                        </ScrollArea>\n                      )}\n                    </CardContent>\n                  </Card>\n                </div>\n\n                {/* Messages - shown on mobile only when a conversation is selected */}\n                <div className={cn(\n                  \"md:flex-1 flex flex-col overflow-hidden\",\n                  (isMobileView && !mobileShowMessages) ? \"hidden\" : \"flex flex-col\"\n                )}>\n                  <Card className=\"flex-1 flex flex-col overflow-hidden shadow-lg border-2 border-blue-100 rounded-xl\">\n                    <CardHeader className=\"flex flex-row items-center justify-between space-y-0 px-4 py-3 border-b bg-blue-50\">\n                      {selectedConversation ? (\n                        <>\n                          {isMobileView && (\n                            <Button \n                              variant=\"ghost\" \n                              size=\"icon\" \n                              className=\"mr-1 hover:bg-blue-100\" \n                              onClick={handleBackToConversations}\n                            >\n                              <ArrowLeft className=\"h-5 w-5 text-blue-500\" />\n                            </Button>\n                          )}\n                          {conversations.find(c => c.user.id === selectedConversation)?.user && (\n                            <div className=\"flex items-center gap-2 overflow-hidden\">\n                              <Avatar className=\"h-8 w-8 border-2 border-blue-200\">\n                                <AvatarImage \n                                  src={conversations.find(c => c.user.id === selectedConversation)?.user.avatar_url || undefined} \n                                />\n                                <AvatarFallback className=\"bg-blue-100 text-blue-600\">\n                                  {conversations.find(c => c.user.id === selectedConversation)?.user.full_name.charAt(0) || 'U'}\n                                </AvatarFallback>\n                              </Avatar>\n                              <div className=\"overflow-hidden\">\n                                <p className=\"font-medium text-sm truncate\">\n                                  {conversations.find(c => c.user.id === selectedConversation)?.user.full_name}\n                                </p>\n                              </div>\n                            </div>\n                          )}\n                        </>\n                      ) : (\n                        <div className=\"font-medium\">Messages</div>\n                      )}\n                    </CardHeader>\n                    <CardContent className=\"flex-1 p-0 overflow-hidden\">\n                      {selectedConversation ? (\n                        <div className=\"h-full flex flex-col\">\n                          {isMessagesLoading ? (\n                            <div className=\"flex-1 flex justify-center items-center\">\n                              <LoadingSpinner size=\"lg\" />\n                            </div>\n                          ) : (\n                            <ScrollArea className=\"flex-1 p-4\">\n                              {messages.length === 0 ? (\n                                <div className=\"h-full flex flex-col items-center justify-center text-center px-4 bg-blue-50/50\">\n                                  <MessageSquare className=\"h-16 w-16 mb-4 text-blue-200\" />\n                                  <h3 className=\"text-lg font-medium mb-2\">No messages yet</h3>\n                                  <p className=\"text-muted-foreground mb-6 max-w-xs\">\n                                    Send a message to start the conversation\n                                  </p>\n                                </div>\n                              ) : (\n                                <div className=\"space-y-4\">\n                                  {messages.map((message, index) => {\n                                    const isUser = message.sender_id === authUser.id;\n                                    const showAvatar = !isUser && (index === 0 || messages[index - 1].sender_id !== message.sender_id);\n                                    \n                                    return (\n                                      <div\n                                        key={message.id}\n                                        className={cn(\n                                          \"flex\",\n                                          isUser ? \"justify-end\" : \"justify-start\"\n                                        )}\n                                      >\n                                        {showAvatar ? (\n                                          <Avatar className=\"mr-2 mt-1 h-8 w-8 border-2 border-blue-200\">\n                                            <AvatarImage src={message.sender.avatar_url} />\n                                            <AvatarFallback className=\"bg-blue-100 text-blue-600\">\n                                              {message.sender.full_name.charAt(0)}\n                                            </AvatarFallback>\n                                          </Avatar>\n                                        ) : !isUser && (\n                                          <div className=\"w-10\" /> // Spacer to align messages\n                                        )}\n                                        <div\n                                          className={cn(\n                                            \"max-w-[75%] rounded-2xl px-4 py-2.5 break-words shadow-sm\",\n                                            isUser \n                                              ? \"bg-blue-500 text-white rounded-tr-none\" \n                                              : \"bg-blue-100 rounded-tl-none\"\n                                          )}\n                                        >\n                                          <p className=\"text-sm\">{message.content}</p>\n                                          <p className={cn(\n                                            \"text-xs mt-1\",\n                                            isUser ? \"text-blue-100\" : \"text-blue-500\"\n                                          )}>\n                                            {formatDistanceToNow(new Date(message.created_at), { addSuffix: true })}\n                                          </p>\n                                        </div>\n                                      </div>\n                                    );\n                                  })}\n                                  <div ref={messagesEndRef} />\n                                </div>\n                              )}\n                            </ScrollArea>\n                          )}\n\n                          <form onSubmit={handleSendMessage} className=\"p-3 border-t bg-blue-50\">\n                            <div className=\"flex gap-2\">\n                              <Input\n                                value={newMessage}\n                                onChange={e => setNewMessage(e.target.value)}\n                                placeholder=\"Type a message...\"\n                                className=\"flex-1 border-blue-200 bg-white\"\n                              />\n                              <Button \n                                type=\"submit\" \n                                className=\"shrink-0 bg-blue-500 hover:bg-blue-600\" \n                                disabled={!newMessage.trim()}\n                              >\n                                <Send className=\"h-4 w-4 mr-2\" />\n                                Send\n                              </Button>\n                            </div>\n                          </form>\n                        </div>\n                      ) : (\n                        <div className=\"h-full flex flex-col items-center justify-center text-center px-4 bg-blue-50/50\">\n                          <MessageSquare className=\"h-16 w-16 mb-4 text-blue-200\" />\n                          <h3 className=\"text-lg font-medium mb-2\">Select a conversation</h3>\n                          <p className=\"text-muted-foreground mb-6 max-w-xs\">\n                            Choose a conversation from the list or start a new one\n                          </p>\n                        </div>\n                      )}\n                    </CardContent>\n                  </Card>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </PageTransition>\n    </Layout>\n  );\n}\n\nconst NewConversationDialog: React.FC<{\n  open: boolean;\n  onOpenChange: (open: boolean) => void;\n  onSelectUser: (user: User) => void;\n}> = ({ open, onOpenChange, onSelectUser }) => {\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [searchResults, setSearchResults] = useState<User[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [hasSearched, setHasSearched] = useState(false);\n\n  // Load all users when the dialog opens\n  useEffect(() => {\n    if (open) {\n      setIsLoading(true);\n      searchUsers(\"\")\n        .then((users) => {\n          console.log(\"Initial users loaded:\", users);\n          setSearchResults(users);\n          setHasSearched(true);\n        })\n        .catch((error) => {\n          console.error(\"Error loading initial users:\", error);\n        })\n        .finally(() => {\n          setIsLoading(false);\n        });\n    } else {\n      // Reset state when dialog closes\n      setSearchTerm(\"\");\n      setSearchResults([]);\n      setHasSearched(false);\n    }\n  }, [open]);\n\n  const handleSearch = async () => {\n    setIsLoading(true);\n    try {\n      const users = await searchUsers(searchTerm);\n      console.log(`Search results for \"${searchTerm}\":`, users);\n      setSearchResults(users);\n      setHasSearched(true);\n    } catch (error) {\n      console.error(\"Error searching users:\", error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <Dialog open={open} onOpenChange={onOpenChange}>\n      <DialogContent className=\"sm:max-w-md\">\n        <DialogHeader>\n          <DialogTitle>New Conversation</DialogTitle>\n          <DialogDescription>\n            Search for users to start a conversation\n          </DialogDescription>\n        </DialogHeader>\n        <div className=\"flex items-center space-x-2 mb-4\">\n          <Input\n            placeholder=\"Search by name or email\"\n            value={searchTerm}\n            onChange={(e) => setSearchTerm(e.target.value)}\n            onKeyDown={(e) => {\n              if (e.key === \"Enter\") {\n                handleSearch();\n              }\n            }}\n          />\n          <Button onClick={handleSearch} disabled={isLoading}>\n            {isLoading ? (\n              <Loader2 className=\"h-4 w-4 animate-spin\" />\n            ) : (\n              <Search className=\"h-4 w-4\" />\n            )}\n          </Button>\n        </div>\n\n        <div className=\"max-h-60 overflow-y-auto\">\n          {isLoading ? (\n            <div className=\"flex justify-center py-4\">\n              <Loader2 className=\"h-6 w-6 animate-spin\" />\n            </div>\n          ) : searchResults.length > 0 ? (\n            <ul className=\"space-y-2\">\n              {searchResults.map((user) => (\n                <li key={user.id}>\n                  <button\n                    className=\"flex items-center space-x-3 w-full p-2 rounded-md hover:bg-muted transition-colors\"\n                    onClick={() => onSelectUser(user)}\n                  >\n                    <Avatar>\n                      <AvatarImage\n                        src={user.avatar_url || undefined}\n                        alt={user.full_name || \"User\"}\n                      />\n                      <AvatarFallback>\n                        {(user.full_name || \"U\").substring(0, 2)}\n                      </AvatarFallback>\n                    </Avatar>\n                    <div className=\"text-left\">\n                      <p className=\"font-medium\">{user.full_name}</p>\n                      <p className=\"text-sm text-muted-foreground\">\n                        {user.email}\n                      </p>\n                    </div>\n                  </button>\n                </li>\n              ))}\n            </ul>\n          ) : hasSearched ? (\n            <div className=\"text-center py-4 text-muted-foreground\">\n              No users found. {searchTerm ? \"Try a different search term.\" : \"There are no other users in the system.\"}\n            </div>\n          ) : null}\n        </div>\n      </DialogContent>\n    </Dialog>\n  );\n}; ","import { supabase } from './supabase';\n\n// Apify API token - use the one from environment variables or fallback to the provided token\nconst APIFY_API_TOKEN = import.meta.env.VITE_APIFY_API_TOKEN || 'apify_api_aPVtpmUSZzjriimnhQ6qsQuVXxqSpB12oY5r';\nconst APIFY_ACTOR_ID = 'dhrumil/rightmove-scraper';\nconst CACHE_TTL_HOURS = 12; // Cache duration in hours\n\n// Log Apify token status\nconsole.log('Apify API token status:', APIFY_API_TOKEN ? 'Token configured' : 'No token');\n\n// Export the same RightmoveProperty interface to maintain compatibility\nexport interface RightmoveProperty {\n  id: string;\n  address: string;\n  postcode: string;\n  price: number;\n  date_listed?: string;\n  property_type: string;\n  bedrooms: number;\n  bathrooms?: number;\n  description: string;\n  image_urls: string[];\n  main_image_url: string;\n  agent: {\n    name: string;\n    phone?: string;\n    logo_url?: string;\n  };\n  tenure?: string;\n  new_build: boolean;\n  floor_area?: {\n    size: number;\n    unit: string;\n  };\n  latitude?: number;\n  longitude?: number;\n  is_active: boolean;\n  rightmove_url: string;\n  features?: string[];\n}\n\nexport interface SearchFilters {\n  location: string;\n  minPrice?: number;\n  maxPrice?: number;\n  minBeds?: number;\n  maxBeds?: number;\n  propertyType?: string;\n  radius?: number;\n  page?: number;\n  limit?: number;\n}\n\nexport interface SearchResponse {\n  properties: RightmoveProperty[];\n  total: number;\n  page: number;\n  totalPages: number;\n}\n\n// Helper to check if a cached result is valid\nconst isCacheValid = (createdAt: string, ttlHours = CACHE_TTL_HOURS): boolean => {\n  const cacheTime = new Date(createdAt).getTime();\n  const currentTime = new Date().getTime();\n  const ttlMillis = ttlHours * 60 * 60 * 1000;\n  return currentTime - cacheTime < ttlMillis;\n};\n\n// Set up the scraper_cache table if it doesn't exist\nexport const ensureScraperCacheTableExists = async (): Promise<boolean> => {\n  try {\n    console.log('Checking if scraper_cache table exists using simplified approach...');\n    \n    // Try the most direct approach first - can we count records in the table?\n    const { data: countData, error: countError } = await supabase\n      .from('scraper_cache')\n      .select('*', { count: 'exact', head: true });\n      \n    // If we can get a count without error, the table exists\n    if (!countError) {\n      console.log('✅ scraper_cache table exists - count check successful');\n      return true;\n    }\n    \n    console.log('Count check failed:', countError);\n    \n    // Try to insert a test record as a fallback check\n    const testKey = `test-existence-${Date.now()}`;\n    const { error: insertError } = await supabase\n      .from('scraper_cache')\n      .insert({ \n        key: testKey, \n        data: { test: true },\n        created_at: new Date().toISOString()\n      });\n      \n    if (!insertError) {\n      console.log('✅ Successfully verified scraper_cache table exists via insert test!');\n      return true;\n    }\n    \n    console.error('Insert test failed:', insertError);\n    console.error('The scraper_cache table does not appear to be accessible');\n    \n    // Table doesn't exist or isn't accessible, so return false\n    return false;\n  } catch (error) {\n    console.error('Error in ensureScraperCacheTableExists:', error);\n    return false;\n  }\n};\n\n// Function to test the Apify API token to ensure it's valid\nexport const testApifyToken = async (): Promise<{ success: boolean; message: string }> => {\n  try {\n    // In development mode, don't make a direct API call to avoid CORS\n    if (import.meta.env.DEV) {\n      console.log('Testing Apify token in development mode - using GET request for testing');\n      \n      // Try a simple GET request to avoid CORS issues\n      const response = await fetch('https://api.apify.com/v2/datasets/RPnlhVhYUc2eHliSs/items?token=apify_api_aPVtpmUSZzjriimnhQ6qsQuVXxqSpB12oY5r&limit=1');\n      \n      if (!response.ok) {\n        return { \n          success: false, \n          message: `Cannot access Apify datasets: ${response.status} ${response.statusText}` \n        };\n      }\n      \n      return { \n        success: true, \n        message: `Successfully connected to Apify using sample dataset` \n      };\n    }\n    \n    // Test the API token by fetching user info\n    const response = await fetch('https://api.apify.com/v2/users/me', {\n      headers: {\n        'Authorization': `Bearer ${APIFY_API_TOKEN}`\n      }\n    });\n\n    if (!response.ok) {\n      return { \n        success: false, \n        message: `Apify API token validation failed: ${response.status} ${response.statusText}` \n      };\n    }\n\n    const data = await response.json();\n    return { \n      success: true, \n      message: `Valid Apify token for user: ${data.data.username || 'unknown'}` \n    };\n  } catch (error) {\n    console.error('Error testing Apify token:', error);\n    return { \n      success: false, \n      message: `Connection error: ${error instanceof Error ? error.message : String(error)}` \n    };\n  }\n};\n\n// Get a cached result or fetch fresh data\nconst getCachedOrFresh = async <T>(\n  key: string,\n  fetchFn: () => Promise<T>,\n  ttlHours = CACHE_TTL_HOURS\n): Promise<T> => {\n  try {\n    // Ensure the cache table exists\n    const tableExists = await ensureScraperCacheTableExists();\n    if (!tableExists) {\n      console.warn('Cache table does not exist, fetching fresh data');\n      return await fetchFn();\n    }\n    \n    // Check cache first\n    const { data: cachedResult, error: cacheError } = await supabase\n      .from('scraper_cache')\n      .select('*')\n      .eq('key', key)\n      .maybeSingle();\n\n    if (cacheError) {\n      console.error('Error checking cache:', cacheError);\n      return await fetchFn();\n    }\n\n    if (cachedResult && isCacheValid(cachedResult.created_at, ttlHours)) {\n      console.log(`Using cached data for ${key}`);\n      return cachedResult.data as T;\n    }\n\n    // If not in cache or expired, fetch fresh data\n    console.log(`Fetching fresh data for ${key}`);\n    const freshData = await fetchFn();\n\n    // Store in cache\n    const { error } = await supabase\n      .from('scraper_cache')\n      .upsert(\n        { \n          key, \n          data: freshData,\n          created_at: new Date().toISOString()\n        },\n        { onConflict: 'key' }\n      );\n\n    if (error) {\n      console.error('Error storing data in cache:', error);\n    }\n\n    return freshData;\n  } catch (error) {\n    console.error('Error in getCachedOrFresh:', error);\n    // If cache fails, try to fetch fresh data anyway\n    return await fetchFn();\n  }\n};\n\n// Function to run the Apify actor and get results\nconst runApifyActor = async (input: any): Promise<any> => {\n  try {\n    console.log('Running Apify actor with input:', input);\n    \n    // Check if we're running in development mode (important for handling CORS differently)\n    const isDev = import.meta.env.DEV;\n    console.log(`Running in ${isDev ? 'development' : 'production'} mode`);\n    \n    // In development mode, we'll use a different approach to handle CORS issues\n    if (isDev) {\n      console.log('Using local development approach for CORS handling');\n      \n      // Create a simple random identifier for this run to help with logging\n      const runIdentifier = `run_${Date.now()}_${Math.random().toString(36).substring(2, 9)}`;\n      console.log(`Request ID: ${runIdentifier}`);\n      \n      // Store the input in localStorage temporarily (only in dev mode)\n      const storageKey = `apify_input_${runIdentifier}`;\n      localStorage.setItem(storageKey, JSON.stringify(input));\n      console.log(`Stored input in localStorage with key: ${storageKey}`);\n      \n      // Extract search information to filter the sample data\n      let searchLocation = '';\n      if (input.listUrls && input.listUrls.length > 0) {\n        // This is a property search - extract location from the URL\n        const searchUrl = input.listUrls[0].url;\n        console.log('Search URL:', searchUrl);\n        \n        // Extract search location\n        const locationMatch = searchUrl.match(/locationIdentifier=([^&]+)/);\n        if (locationMatch) {\n          searchLocation = locationMatch[1];\n          console.log('Extracted location identifier:', searchLocation);\n        }\n      }\n      \n      // Log the command that would be equivalent to an API call\n      console.log(`Simulating API call to run Apify actor with ID: ${APIFY_ACTOR_ID}`);\n      \n      // Fetch the stored properties from the sample data provided by the user\n      // This uses the dataset items from the successful Apify run shared in the requirements\n      console.log('Fetching sample data from api.apify.com/v2/datasets/RPnlhVhYUc2eHliSs/items endpoint');\n      \n      // Make a GET request to the dataset items URL (this should work without CORS issues since it's a GET)\n      const response = await fetch(\n        'https://api.apify.com/v2/datasets/RPnlhVhYUc2eHliSs/items?token=apify_api_aPVtpmUSZzjriimnhQ6qsQuVXxqSpB12oY5r'\n      );\n      \n      if (!response.ok) {\n        throw new Error(`Failed to fetch sample data: ${response.status} ${response.statusText}`);\n      }\n      \n      let sampleData = await response.json();\n      console.log(`Retrieved ${sampleData.length} sample properties before filtering`);\n      \n      // If this is a property search (not a specific property lookup), we need to simulate the effect of different searches\n      if (input.listUrls && input.listUrls.length > 0 && searchLocation) {\n        if (searchLocation.toLowerCase().includes('tidworth') || \n            searchLocation.includes('REGION%5ETidworth') || \n            searchLocation.includes('OUTCODE%5ESP9')) {\n          // Tidworth searches - no filtering needed as this is what the sample data contains\n          console.log('Search for Tidworth - using all sample data');\n        } else {\n          // For other locations, generate a subset of the data that's unique to this search\n          console.log(`Search for location other than Tidworth: ${searchLocation}`);\n          \n          // Use a deterministic subset based on the location string hash\n          const locationHash = searchLocation.split('').reduce((acc, char) => acc + char.charCodeAt(0), 0);\n          const subsetSize = 5 + (locationHash % 15); // Between 5 and 20 properties\n          \n          console.log(`Using deterministic subset of ${subsetSize} properties for ${searchLocation}`);\n          \n          // Create a modified subset with the location in the address\n          const locationName = decodeURIComponent(searchLocation.replace(/REGION%5E|OUTCODE%5E|POSTCODE%5E/, ''));\n          \n          sampleData = sampleData.slice(0, subsetSize).map((property: any, index: number) => {\n            // Get a typical street name based on the index\n            const streets = ['High Street', 'Church Road', 'Main Street', 'Park Road', 'London Road', \n                             'Station Road', 'Victoria Road', 'Green Lane', 'Manor Road', 'Kings Road'];\n            const street = streets[index % streets.length];\n            \n            // Create a unique property ID\n            const newId = `${Date.now()}-${locationHash}-${index}`;\n            \n            // Modify the address to include the searched location\n            return {\n              ...property,\n              id: newId,\n              propertyId: newId,\n              address: `${index + 1} ${street}, ${locationName}`,\n              displayAddress: `${index + 1} ${street}, ${locationName}`,\n              // Ensure price is clearly set\n              price: 200000 + (index * 25000), // Different prices for variety\n              priceText: `£${(200000 + (index * 25000)).toLocaleString()}`,\n              // Ensure location is in the URL\n              url: property.url.replace('Tidworth', locationName)\n            };\n          });\n          \n          console.log(`Created ${sampleData.length} modified properties for ${locationName}`);\n          // Log the first one to see format\n          if (sampleData.length > 0) {\n            console.log('Sample modified property:', {\n              id: sampleData[0].id,\n              address: sampleData[0].address,\n              price: sampleData[0].price,\n              priceText: sampleData[0].priceText\n            });\n          }\n        }\n      } else if (input.propertyUrls && input.propertyUrls.length > 0) {\n        // This is a property details lookup - just use the first sample property\n        console.log('Property details lookup - using first sample property');\n        sampleData = [sampleData[0]];\n      }\n      \n      console.log(`Returning ${sampleData.length} properties after filtering`);\n      \n      // Log a sample of the data structure\n      if (sampleData && sampleData.length > 0) {\n        console.log('Sample property data structure:');\n        console.log(JSON.stringify(sampleData[0], null, 2).substring(0, 2000) + '...');\n        \n        // Specifically log price-related fields\n        const priceFields = {};\n        const sampleProperty = sampleData[0];\n        \n        // Check common paths where price might be stored\n        if (sampleProperty.price !== undefined) priceFields['price'] = sampleProperty.price;\n        if (sampleProperty.propertyInfo?.price !== undefined) priceFields['propertyInfo.price'] = sampleProperty.propertyInfo.price;\n        if (sampleProperty.priceText !== undefined) priceFields['priceText'] = sampleProperty.priceText;\n        if (sampleProperty.prices) priceFields['prices'] = sampleProperty.prices;\n        \n        console.log('Price-related fields found in sample data:', priceFields);\n        \n        // Log agent-related fields\n        const agentFields = {};\n        if (sampleProperty.agent !== undefined) agentFields['agent'] = sampleProperty.agent;\n        if (sampleProperty.agentName !== undefined) agentFields['agentName'] = sampleProperty.agentName;\n        if (sampleProperty.branchName !== undefined) agentFields['branchName'] = sampleProperty.branchName;\n        if (sampleProperty.branch) agentFields['branch'] = sampleProperty.branch;\n        \n        console.log('Agent-related fields found in sample data:', agentFields);\n      }\n      \n      // Return the filtered sample data\n      return sampleData;\n    }\n    \n    // For production, continue with the normal API call approach\n    // Start the actor run\n    console.log(`Making API request to: https://api.apify.com/v2/acts/${APIFY_ACTOR_ID}/runs`);\n    const startResponse = await fetch(`https://api.apify.com/v2/acts/${APIFY_ACTOR_ID}/runs`, {\n      method: 'POST',\n      headers: {\n        'Authorization': `Bearer ${APIFY_API_TOKEN}`,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({ run: { input } })\n    });\n\n    if (!startResponse.ok) {\n      const errorText = await startResponse.text();\n      console.error('Apify actor start failed:', {\n        status: startResponse.status,\n        statusText: startResponse.statusText,\n        responseText: errorText\n      });\n      throw new Error(`Failed to start Apify actor: ${startResponse.status} ${startResponse.statusText} - ${errorText}`);\n    }\n\n    const startData = await startResponse.json();\n    const runId = startData.data.id;\n    console.log(`Apify actor run started with ID: ${runId}`);\n\n    // Poll for completion\n    let isFinished = false;\n    let attempt = 0;\n    const maxAttempts = 60; // 5 minutes with 5-second intervals\n    \n    while (!isFinished && attempt < maxAttempts) {\n      await new Promise(resolve => setTimeout(resolve, 5000)); // Wait 5 seconds\n      \n      console.log(`Checking status of run ${runId}, attempt ${attempt + 1}/${maxAttempts}`);\n      const statusResponse = await fetch(`https://api.apify.com/v2/actor-runs/${runId}`, {\n        headers: {\n          'Authorization': `Bearer ${APIFY_API_TOKEN}`\n        }\n      });\n\n      if (!statusResponse.ok) {\n        console.error('Failed to check actor run status:', {\n          status: statusResponse.status,\n          statusText: statusResponse.statusText\n        });\n        throw new Error(`Failed to check actor run status: ${statusResponse.status} ${statusResponse.statusText}`);\n      }\n\n      const statusData = await statusResponse.json();\n      console.log(`Run status: ${statusData.data.status}, status message: ${statusData.data.statusMessage || 'None'}`);\n      \n      if (['SUCCEEDED', 'FAILED', 'ABORTED', 'TIMED-OUT'].includes(statusData.data.status)) {\n        isFinished = true;\n        \n        if (statusData.data.status !== 'SUCCEEDED') {\n          throw new Error(`Apify actor run failed with status: ${statusData.data.status} - ${statusData.data.statusMessage || 'No message'}`);\n        }\n      }\n      \n      attempt++;\n    }\n\n    if (!isFinished) {\n      throw new Error('Apify actor run timed out while waiting for completion');\n    }\n\n    // Fetch the results\n    console.log(`Fetching results for run ${runId}`);\n    const datasetResponse = await fetch(`https://api.apify.com/v2/actor-runs/${runId}/dataset/items`, {\n      headers: {\n        'Authorization': `Bearer ${APIFY_API_TOKEN}`\n      }\n    });\n\n    if (!datasetResponse.ok) {\n      console.error('Failed to fetch actor results:', {\n        status: datasetResponse.status,\n        statusText: datasetResponse.statusText\n      });\n      throw new Error(`Failed to fetch actor results: ${datasetResponse.status} ${datasetResponse.statusText}`);\n    }\n\n    const results = await datasetResponse.json();\n    console.log(`Retrieved ${results.length} results from Apify`);\n    \n    return results;\n  } catch (error) {\n    console.error('Error running Apify actor:', error);\n    throw error;\n  }\n};\n\n// Convert Apify property format to our RightmoveProperty format\nexport const convertApifyPropertyToRightmoveProperty = (apifyProperty: any): RightmoveProperty => {\n  // Debug the raw property data\n  console.log('Raw Apify property data:', apifyProperty);\n  \n  // Extract price - handle both string and number formats\n  let price = 0;\n  if (typeof apifyProperty.price === 'number') {\n    price = apifyProperty.price;\n  } else if (typeof apifyProperty.price === 'string') {\n    // Remove currency symbol, commas, and any spaces, then convert to number\n    price = parseFloat(apifyProperty.price.replace(/[£$€,\\s]/g, ''));\n  }\n  console.log(`Price conversion: ${apifyProperty.price} → ${price}`);\n  \n  // Extract address from various possible fields\n  let address = '';\n  \n  // Try different address fields based on Apify Rightmove Scraper structure\n  if (apifyProperty.address) {\n    address = apifyProperty.address;\n  } else if (apifyProperty.displayAddress) {\n    address = apifyProperty.displayAddress;\n  } else if (apifyProperty.title) {\n    address = apifyProperty.title;\n  } else if (apifyProperty.propertyTypeFullDesc) {\n    // If we have property type and location, create a composite address\n    const location = apifyProperty.location || apifyProperty.locationText || '';\n    address = `${apifyProperty.propertyTypeFullDesc}, ${location}`;\n  }\n  \n  console.log(`Address extraction: \"${address}\"`);\n  \n  // Extract agent information\n  let agentName = 'Unknown Agent';\n  let agentPhone = '';\n  let agentLogoUrl = '';\n  \n  if (apifyProperty.agent) {\n    // If agent is an object with direct properties\n    agentName = apifyProperty.agent.name || apifyProperty.agent.agentName || 'Unknown Agent';\n    agentPhone = apifyProperty.agent.phone || apifyProperty.agent.contactPhoneNumber || '';\n    agentLogoUrl = apifyProperty.agent.logo_url || apifyProperty.agent.logoUrl || '';\n  } else {\n    // Try to extract from individual fields based on Apify structure\n    agentName = apifyProperty.agentName || 'Unknown Agent';\n    agentPhone = apifyProperty.contactPhoneNumber || '';\n    agentLogoUrl = apifyProperty.agentLogo || '';\n  }\n  \n  // Extract bedrooms and bathrooms\n  const bedrooms = apifyProperty.bedrooms || parseInt(apifyProperty.numberOfBedrooms, 10) || 0;\n  const bathrooms = apifyProperty.bathrooms || parseInt(apifyProperty.numberOfBathrooms, 10) || 0;\n  \n  // Extract property type\n  let propertyType = apifyProperty.property_type || apifyProperty.propertyType || 'Not specified';\n  if (!propertyType && apifyProperty.propertyTypeFullDesc) {\n    // Extract property type from full description\n    const typeMatches = apifyProperty.propertyTypeFullDesc.match(/flat|apartment|house|bungalow|terraced|semi-detached|detached/i);\n    if (typeMatches) {\n      propertyType = typeMatches[0].toLowerCase();\n    }\n  }\n  \n  // Extract floor area if available\n  let floorArea = null;\n  if (apifyProperty.floor_area) {\n    floorArea = apifyProperty.floor_area;\n  } else if (apifyProperty.floorArea) {\n    floorArea = {\n      size: parseFloat(apifyProperty.floorArea.value || '0'),\n      unit: apifyProperty.floorArea.unit || 'sq ft'\n    };\n  } else if (apifyProperty.floorAreaValue && apifyProperty.floorAreaUnit) {\n    floorArea = {\n      size: parseFloat(apifyProperty.floorAreaValue),\n      unit: apifyProperty.floorAreaUnit\n    };\n  }\n  \n  // Extract property features\n  let features = [];\n  if (Array.isArray(apifyProperty.features)) {\n    features = apifyProperty.features;\n  } else if (Array.isArray(apifyProperty.propertyFeatures)) {\n    features = apifyProperty.propertyFeatures;\n  } else if (apifyProperty.keyFeatures) {\n    features = apifyProperty.keyFeatures;\n  }\n  \n  // Extract property description\n  let description = apifyProperty.description || apifyProperty.propertyDescription || '';\n  \n  // Extract postcode\n  let postcode = '';\n  if (apifyProperty.postcode) {\n    postcode = apifyProperty.postcode;\n  } else if (address) {\n    // Try to extract postcode from address\n    const postcodeMatch = address.match(/[A-Z]{1,2}[0-9][0-9A-Z]?\\s?[0-9][A-Z]{2}/i);\n    if (postcodeMatch) {\n      postcode = postcodeMatch[0];\n    }\n  }\n  \n  return {\n    id: String(apifyProperty.id || apifyProperty.propertyId || ''),\n    address,\n    price,\n    agent: {\n      name: agentName,\n      phone: agentPhone,\n      logo_url: agentLogoUrl\n    },\n    bedrooms,\n    bathrooms,\n    property_type: propertyType,\n    description,\n    tenure: apifyProperty.tenure || '',\n    location: {\n      latitude: apifyProperty.latitude || 0,\n      longitude: apifyProperty.longitude || 0\n    },\n    new_build: apifyProperty.new_build || apifyProperty.isNewHome || false,\n    features,\n    floor_area: floorArea,\n    postcode,\n    images: apifyProperty.images || apifyProperty.propertyImages || [],\n    listing_date: apifyProperty.listing_date || apifyProperty.addedDate || new Date().toISOString(),\n    rightmove_url: apifyProperty.rightmove_url || apifyProperty.propertyUrl || ''\n  };\n};\n\n// Main function to search Rightmove properties using Apify\nexport const searchRightmoveProperties = async (filters: SearchFilters): Promise<SearchResponse> => {\n  const { location, minPrice, maxPrice, minBeds, maxBeds, propertyType, page = 1, limit = 100 } = filters;\n  \n  // Validate location\n  if (!location) {\n    throw new Error('Location is required for property search');\n  }\n  \n  // Clean location input - remove any cache-busting parameters\n  const cleanLocation = location.replace(/\\?_bypass_cache=\\d+/, '');\n  \n  // Log the search parameters for debugging\n  console.log('Searching Rightmove with parameters:', {\n    location: cleanLocation,\n    minPrice,\n    maxPrice,\n    minBeds,\n    maxBeds,\n    propertyType,\n    page,\n    limit\n  });\n  \n  // Construct cache key based on search parameters\n  const cacheKey = `apify:rightmove:search:${cleanLocation}:${minPrice || ''}:${maxPrice || ''}:${minBeds || ''}:${maxBeds || ''}:${propertyType || ''}:${page}:${limit}`;\n  \n  return getCachedOrFresh(\n    cacheKey,\n    async () => {\n      try {\n        // Test the Apify token before making the request\n        const tokenTest = await testApifyToken();\n        if (!tokenTest.success) {\n          throw new Error(`Apify token validation failed: ${tokenTest.message}`);\n        }\n        \n        // Determine if the location is an OUTCODE, REGION, or just a plain search term\n        let searchUrl;\n        \n        // Check if the location already contains a location identifier format\n        if (cleanLocation.includes('OUTCODE%5E') || cleanLocation.includes('REGION%5E') || \n            cleanLocation.includes('POSTCODE%5E') || cleanLocation.includes('BRANCH%5E')) {\n          // If it's already formatted, use it directly\n          searchUrl = `https://www.rightmove.co.uk/property-for-sale/find.html?locationIdentifier=${cleanLocation}`;\n          console.log('Using pre-formatted location identifier:', cleanLocation);\n        } \n        // Check if it looks like an outcode (e.g., SW1, NW3, etc.) - typically 2-4 characters with letters and maybe numbers\n        else if (/^[A-Z]{1,2}[0-9]{1,2}[A-Z]?$/i.test(cleanLocation)) {\n          searchUrl = `https://www.rightmove.co.uk/property-for-sale/find.html?locationIdentifier=OUTCODE%5E${encodeURIComponent(cleanLocation)}`;\n          console.log('Using OUTCODE format for location:', cleanLocation);\n        }\n        // Otherwise treat as a region/area name\n        else {\n          searchUrl = `https://www.rightmove.co.uk/property-for-sale/find.html?searchType=SALE&locationIdentifier=REGION%5E${encodeURIComponent(cleanLocation)}`;\n          console.log('Using REGION format for location:', cleanLocation);\n        }\n        \n        // Add filters to the URL\n        if (minPrice) searchUrl += `&minPrice=${minPrice}`;\n        if (maxPrice) searchUrl += `&maxPrice=${maxPrice}`;\n        if (minBeds) searchUrl += `&minBedrooms=${minBeds}`;\n        if (maxBeds) searchUrl += `&maxBedrooms=${maxBeds}`;\n        if (propertyType) searchUrl += `&propertyTypes=${propertyType}`;\n        \n        console.log('Final Rightmove search URL:', searchUrl);\n        \n        // Prepare input for the Apify actor\n        const apifyInput = {\n          listUrls: [{ url: searchUrl, method: \"GET\" }],\n          fullScrape: true,\n          monitoringMode: false,\n          fullPropertyDetails: true,\n          maxProperties: limit,\n          proxy: { useApifyProxy: true }\n        };\n        \n        console.log('Sending request to Apify with input:', JSON.stringify(apifyInput, null, 2));\n        \n        // Run the Apify actor and get results\n        const apifyResults = await runApifyActor(apifyInput);\n        \n        console.log(`Received ${apifyResults.length} results from Apify`);\n        \n        // Convert Apify results to our format\n        const properties: RightmoveProperty[] = apifyResults.map(convertApifyPropertyToRightmoveProperty);\n        \n        // Calculate pagination info\n        const total = properties.length;\n        const itemsPerPage = 24; // Rightmove shows 24 properties per page\n        const totalPages = Math.ceil(total / itemsPerPage);\n        \n        return {\n          properties,\n          total,\n          page,\n          totalPages\n        };\n      } catch (error) {\n        console.error('Error in searchRightmoveProperties:', error);\n        // Enhance error message with more details\n        if (error instanceof Error) {\n          throw new Error(`Failed to search properties: ${error.message}. Please check your location format and Apify token.`);\n        }\n        throw error;\n      }\n    }\n  );\n};\n\n// Get detailed property data for a single Rightmove property\nexport const getPropertyDetails = async (propertyId: string): Promise<RightmoveProperty | null> => {\n  if (!propertyId) {\n    throw new Error('Property ID is required');\n  }\n  \n  const cacheKey = `apify:rightmove:property:${propertyId}`;\n  \n  return getCachedOrFresh(\n    cacheKey,\n    async () => {\n      try {\n        // Test the Apify token before making the request\n        const tokenTest = await testApifyToken();\n        if (!tokenTest.success) {\n          throw new Error(`Apify token validation failed: ${tokenTest.message}`);\n        }\n        \n        // Prepare input for the Apify actor\n        const apifyInput = {\n          propertyUrls: [{ url: `https://www.rightmove.co.uk/properties/${propertyId}` }],\n          fullPropertyDetails: true\n        };\n        \n        // Run the Apify actor and get results\n        const apifyResults = await runApifyActor(apifyInput);\n        \n        if (!apifyResults || apifyResults.length === 0) {\n          throw new Error(`No property details found for property ID: ${propertyId}`);\n        }\n        \n        // Convert Apify result to our format\n        const property = convertApifyPropertyToRightmoveProperty(apifyResults[0]);\n        \n        return property;\n      } catch (error) {\n        console.error('Error in getPropertyDetails:', error);\n        throw error;\n      }\n    }\n  );\n};\n\n// Check if a property is still active on Rightmove\nexport const checkPropertyActiveStatus = async (propertyId: string): Promise<boolean> => {\n  try {\n    const property = await getPropertyDetails(propertyId);\n    return property ? property.is_active : false;\n  } catch (error) {\n    console.error('Error checking property active status:', error);\n    throw error;\n  }\n};\n\n// Initialize the scraper on import\n(() => {\n  console.log('Initializing Apify Rightmove scraper...');\n  \n  // Check if we have an API token\n  if (!APIFY_API_TOKEN) {\n    console.warn('No Apify API token found. Please set your token in .env.local file as VITE_APIFY_API_TOKEN');\n  }\n  \n  // Test the token in the background\n  testApifyToken().then(result => {\n    if (!result.success) {\n      console.error(`⚠️ INVALID APIFY API TOKEN: ${result.message}`);\n      console.error('Get a valid token at https://apify.com/ and set it in .env.local as VITE_APIFY_API_TOKEN');\n    } else {\n      console.log(`✅ Apify API token validated: ${result.message}`);\n    }\n  });\n  \n  // Ensure the cache table exists (don't await - let it run in background)\n  ensureScraperCacheTableExists().then(exists => {\n    if (!exists) {\n      console.warn('Scraper cache table does not exist. This may affect performance.');\n    }\n  });\n})(); ","import { RightmoveProperty } from './apifyRightmoveScraper';\n\n// Get the Gemini API key from environment variables\nconst GEMINI_API_KEY = import.meta.env.VITE_GEMINI_API_KEY;\n\n// Check if API key is configured\nconst isGeminiConfigured = !!GEMINI_API_KEY;\nconsole.log('Gemini API status:', isGeminiConfigured ? 'Configured' : 'Not configured');\n\n// Interface for investment analysis results\nexport interface PropertyInvestmentAnalysis {\n  // Financial metrics\n  estimatedRentalYield: number;\n  estimatedROI: number;\n  estimatedCashFlow: number;\n  estimatedAnnualProfit: number;\n  estimatedCapRate: number;\n  \n  // Investment strategies\n  suitableStrategies: string[];\n  strategyRecommendations: {\n    strategy: string;\n    score: number;\n    reasoning: string;\n  }[];\n  \n  // Property-specific insights\n  marketTrends: string;\n  propertyPotential: string;\n  renovationOpportunities: string;\n  riskAssessment: string;\n  estimatedRenovationCost: number;\n  \n  // Area insights\n  areaGrowthPotential: number; // Percentage\n  areaInvestmentRating: number; // 1-10\n  areaDescription: string;\n}\n\n// Function to analyze a property using Gemini API\nexport const analyzePropertyInvestment = async (\n  property: RightmoveProperty\n): Promise<PropertyInvestmentAnalysis> => {\n  // Log the property being analyzed\n  console.log('Analyzing property for investment:', {\n    id: property.id,\n    price: property.price,\n    address: property.address\n  });\n  \n  // If Gemini isn't configured, return mock data\n  if (!isGeminiConfigured) {\n    console.log('Using mock investment analysis data (no Gemini API key configured)');\n    return generateMockAnalysis(property);\n  }\n  \n  try {\n    // Construct the prompt for Gemini API\n    const prompt = constructPropertyAnalysisPrompt(property);\n    \n    // Call Gemini API\n    console.log('Calling Gemini API...');\n    const response = await fetch(`https://generativelanguage.googleapis.com/v1beta/models/gemini-pro:generateContent?key=${GEMINI_API_KEY}`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        contents: [\n          {\n            parts: [\n              {\n                text: prompt\n              }\n            ]\n          }\n        ],\n        generationConfig: {\n          temperature: 0.4,\n          topK: 32,\n          topP: 0.95,\n          maxOutputTokens: 8192,\n        }\n      })\n    });\n    \n    if (!response.ok) {\n      const errorText = await response.text();\n      console.error('Gemini API error:', errorText);\n      throw new Error(`Gemini API error: ${response.status} ${response.statusText}`);\n    }\n    \n    const data = await response.json();\n    console.log('Gemini API response received');\n    \n    // Parse the response to extract structured investment analysis\n    const analysisText = data.candidates[0].content.parts[0].text;\n    return parseGeminiResponse(analysisText, property);\n  } catch (error) {\n    console.error('Error analyzing property with Gemini:', error);\n    // Fall back to mock data in case of error\n    console.log('Falling back to mock data due to API error');\n    return generateMockAnalysis(property);\n  }\n};\n\n// Helper function to construct the prompt for Gemini\nconst constructPropertyAnalysisPrompt = (property: RightmoveProperty): string => {\n  return `\n  Analyze this UK property for investment potential:\n  \n  Property details:\n  - Address: ${property.address}\n  - Postcode: ${property.postcode}\n  - Price: £${property.price.toLocaleString()}\n  - Property type: ${property.property_type}\n  - Bedrooms: ${property.bedrooms}\n  - Bathrooms: ${property.bathrooms || 'Unknown'}\n  - Description: ${property.description}\n  - Tenure: ${property.tenure || 'Unknown'}\n  - New build: ${property.new_build ? 'Yes' : 'No'}\n  ${property.floor_area ? `- Floor area: ${property.floor_area.size} ${property.floor_area.unit}` : ''}\n  \n  For this property, provide a comprehensive investment analysis in JSON format with the following structure:\n  {\n    \"estimatedRentalYield\": [a percentage number, typical UK yields range from 3-10%],\n    \"estimatedROI\": [a percentage number],\n    \"estimatedCashFlow\": [monthly cash flow in pounds],\n    \"estimatedAnnualProfit\": [yearly profit in pounds],\n    \"estimatedCapRate\": [capitalization rate as a percentage],\n    \"suitableStrategies\": [array of strings like \"Buy-to-Let\", \"HMO\", \"BRRR\", \"Serviced Accommodation\", \"Rent-to-Rent\", \"Flip\", \"Development\"],\n    \"strategyRecommendations\": [\n      {\n        \"strategy\": [strategy name],\n        \"score\": [score from 1-10],\n        \"reasoning\": [short explanation]\n      }\n    ],\n    \"marketTrends\": [description of local market trends],\n    \"propertyPotential\": [analysis of property's investment potential],\n    \"renovationOpportunities\": [ideas for value-adding renovations],\n    \"riskAssessment\": [potential risks for investors],\n    \"estimatedRenovationCost\": [estimated cost of recommended renovations in pounds],\n    \"areaGrowthPotential\": [estimated annual growth percentage for the area],\n    \"areaInvestmentRating\": [score from 1-10 for the area's investment potential],\n    \"areaDescription\": [brief description of the area's investment merits]\n  }\n  \n  Be realistic and specific with your analysis. Base your recommendations on property type, location, and current UK property investment trends. Use real-world knowledge of UK property markets and investment strategies.\n  `;\n};\n\n// Helper function to parse Gemini's response\nconst parseGeminiResponse = (responseText: string, property: RightmoveProperty): PropertyInvestmentAnalysis => {\n  try {\n    console.log('Parsing Gemini response...');\n    \n    // Extract the JSON part from response (it might include additional text)\n    const jsonMatch = responseText.match(/\\{[\\s\\S]*\\}/);\n    if (!jsonMatch) {\n      console.error('No JSON found in Gemini response');\n      throw new Error('No JSON found in response');\n    }\n    \n    const jsonStr = jsonMatch[0];\n    console.log('Extracted JSON data from response');\n    \n    let analysisData;\n    try {\n      analysisData = JSON.parse(jsonStr);\n      console.log('Successfully parsed JSON data');\n    } catch (e) {\n      console.error('Failed to parse JSON:', e);\n      throw new Error('Invalid JSON format in response');\n    }\n    \n    // Log the parsed data for debugging\n    console.log('Parsed analysis data (sample):', {\n      estimatedRentalYield: analysisData.estimatedRentalYield,\n      estimatedROI: analysisData.estimatedROI,\n      estimatedCashFlow: analysisData.estimatedCashFlow\n    });\n    \n    // Validate numeric fields and ensure they are numbers\n    const validateNumber = (value: any, defaultValue: number = 0): number => {\n      if (value === undefined || value === null) return defaultValue;\n      \n      // Handle values that might be strings\n      const numValue = typeof value === 'string' ? parseFloat(value) : value;\n      \n      // Check if it's a valid number\n      return isNaN(numValue) ? defaultValue : numValue;\n    };\n    \n    // Ensure all expected fields are present and valid\n    return {\n      estimatedRentalYield: validateNumber(analysisData.estimatedRentalYield),\n      estimatedROI: validateNumber(analysisData.estimatedROI),\n      estimatedCashFlow: validateNumber(analysisData.estimatedCashFlow),\n      estimatedAnnualProfit: validateNumber(analysisData.estimatedAnnualProfit),\n      estimatedCapRate: validateNumber(analysisData.estimatedCapRate),\n      suitableStrategies: Array.isArray(analysisData.suitableStrategies) ? analysisData.suitableStrategies : [],\n      strategyRecommendations: Array.isArray(analysisData.strategyRecommendations) ? \n        analysisData.strategyRecommendations.map((rec: any) => ({\n          strategy: rec.strategy || 'Unknown',\n          score: validateNumber(rec.score, 5),\n          reasoning: rec.reasoning || ''\n        })) : [],\n      marketTrends: analysisData.marketTrends || '',\n      propertyPotential: analysisData.propertyPotential || '',\n      renovationOpportunities: analysisData.renovationOpportunities || '',\n      riskAssessment: analysisData.riskAssessment || '',\n      estimatedRenovationCost: validateNumber(analysisData.estimatedRenovationCost),\n      areaGrowthPotential: validateNumber(analysisData.areaGrowthPotential),\n      areaInvestmentRating: validateNumber(analysisData.areaInvestmentRating, 5),\n      areaDescription: analysisData.areaDescription || '',\n    };\n  } catch (error) {\n    console.error('Error parsing Gemini response:', error);\n    return generateMockAnalysis(property);\n  }\n};\n\n// Generate mock investment analysis for testing or when API is unavailable\nconst generateMockAnalysis = (property: RightmoveProperty): PropertyInvestmentAnalysis => {\n  console.log('Generating mock investment analysis for property:', property.id);\n  \n  // Ensure we have a valid property price (fallback to 250000 if invalid)\n  const safePrice = typeof property.price === 'number' && !isNaN(property.price) && property.price > 0 \n    ? property.price \n    : 250000;\n  \n  // Create a deterministic but varied hash based on property ID and price\n  const propertyHash = property.id.split('').reduce((acc, char) => acc + char.charCodeAt(0), 0) + safePrice;\n  \n  // Use the hash to create varied but deterministic values\n  const rand = (min: number, max: number) => {\n    const value = (propertyHash % 1000) / 1000;\n    return min + value * (max - min);\n  };\n  \n  // Determine property value tier (affects yields and potential)\n  const isHighEnd = safePrice > 500000;\n  const isMidRange = safePrice > 250000 && safePrice <= 500000;\n  const isLowEnd = safePrice <= 250000;\n  \n  // Base yield on property value and type\n  let baseYield = isHighEnd ? rand(3.5, 5.5) : isMidRange ? rand(4.5, 6.5) : rand(5.5, 9);\n  \n  // Adjust yield for property type\n  if (property.property_type?.toLowerCase().includes('flat')) {\n    baseYield += rand(0.5, 1.5);\n  } else if (property.property_type?.toLowerCase().includes('detached')) {\n    baseYield -= rand(0.2, 0.8);\n  }\n  \n  // Generate appropriate strategies based on property characteristics\n  const strategies: string[] = [];\n  \n  // Most properties are suitable for Buy-to-Let\n  strategies.push('Buy-to-Let');\n  \n  // HMO potential for larger properties with 3+ bedrooms\n  if (property.bedrooms >= 3) {\n    strategies.push('HMO');\n  }\n  \n  // BRRR (Buy, Renovate, Rent, Refinance) for older properties\n  if (!property.new_build) {\n    strategies.push('BRRR');\n  }\n  \n  // Serviced Accommodation for properties in tourist areas\n  if (property.postcode && property.postcode.match(/^(BH|BS|B|BA|E|EC|W|WC|SW|NW|SE|N|M|L|EH|G|CF)/i)) {\n    strategies.push('Serviced Accommodation');\n  }\n  \n  // Flip potential for lower-priced properties\n  if (isLowEnd) {\n    strategies.push('Flip');\n  }\n  \n  // Development potential for larger properties\n  if (property.bedrooms >= 4 || (property.floor_area && property.floor_area.size > 1500)) {\n    strategies.push('Development');\n  }\n  \n  // Calculate other financial metrics based on the yield\n  const monthlyRent = (safePrice * baseYield) / 100 / 12;\n  const estimatedCashFlow = monthlyRent * 0.65; // Assuming 35% of rent goes to expenses\n  const estimatedAnnualProfit = estimatedCashFlow * 12;\n  \n  // Generate strategy recommendations with scores\n  const strategyRecommendations = strategies.map(strategy => {\n    let score;\n    let reasoning;\n    \n    switch (strategy) {\n      case 'Buy-to-Let':\n        score = isHighEnd ? rand(6, 8) : isMidRange ? rand(7, 9) : rand(6, 8);\n        reasoning = `Good rental demand for ${property.property_type?.toLowerCase() || 'this type of property'} in this area. Estimated monthly rent of £${Math.round(monthlyRent)}.`;\n        break;\n      case 'HMO':\n        score = property.bedrooms >= 4 ? rand(7, 9) : rand(5, 7);\n        reasoning = `${property.bedrooms} bedrooms could generate £${Math.round(monthlyRent * 1.5)} as an HMO, but check local licensing requirements.`;\n        break;\n      case 'BRRR':\n        score = !property.new_build ? rand(6, 8) : rand(2, 4);\n        reasoning = property.new_build \n          ? 'Limited renovation potential as a new build property.' \n          : 'Good potential for value-add through modernization and reconfiguration.';\n        break;\n      case 'Serviced Accommodation':\n        score = rand(5, 8);\n        reasoning = `Could achieve 2-3x rental income as serviced accommodation if local regulations permit.`;\n        break;\n      case 'Flip':\n        score = isLowEnd ? rand(6, 9) : rand(3, 6);\n        reasoning = isLowEnd \n          ? 'Entry-level price point makes this suitable for a flip strategy with cosmetic improvements.' \n          : 'Higher price point limits margin potential for a flip strategy.';\n        break;\n      case 'Development':\n        score = property.bedrooms >= 4 ? rand(6, 8) : rand(4, 6);\n        reasoning = `Potential to add value through extension or conversion, subject to planning permission.`;\n        break;\n      default:\n        score = rand(5, 7);\n        reasoning = `Standard investment opportunity with moderate potential.`;\n    }\n    \n    return {\n      strategy,\n      score: Math.round(score * 10) / 10, // Round to 1 decimal place\n      reasoning\n    };\n  });\n\n  // Sort strategies by score (descending)\n  strategyRecommendations.sort((a, b) => b.score - a.score);\n  \n  // Calculate area growth potential based on postcode\n  // Using first two characters of postcode for variance\n  const postcodePrefix = property.postcode ? property.postcode.substring(0, 2).toUpperCase() : 'XX';\n  const postcodeValue = postcodePrefix.split('').reduce((acc, char) => acc + char.charCodeAt(0), 0);\n  const areaGrowthPotential = 3 + (postcodeValue % 10) / 2; // Between 3% and 8%\n  \n  // Area investment rating\n  const areaInvestmentRating = 5 + (postcodeValue % 10) / 2; // Between 5 and 10\n  \n  // Generate area description based on the postcode\n  let areaDescription = '';\n  \n  if (['E', 'EC', 'W', 'WC', 'SW', 'NW', 'SE', 'N'].includes(postcodePrefix.substring(0, 1)) || \n      ['E1', 'E2', 'E3', 'E4', 'E5', 'E6', 'E7', 'E8', 'E9'].includes(postcodePrefix.substring(0, 2))) {\n    areaDescription = 'London area with strong rental demand and historically good capital appreciation.';\n  } else if (['M', 'L', 'B', 'S', 'LS', 'NG'].includes(postcodePrefix.substring(0, 1)) || \n             ['M1', 'L1', 'B1', 'S1'].includes(postcodePrefix.substring(0, 2))) {\n    areaDescription = 'Major city center location with good rental demand from young professionals and students.';\n  } else if (['BN', 'BH', 'BS', 'BA', 'EX', 'PL', 'TR'].includes(postcodePrefix.substring(0, 2))) {\n    areaDescription = 'Coastal or tourist area with potential for seasonal rental income and holiday lets.';\n  } else {\n    areaDescription = 'Residential area with stable property market and moderate growth potential.';\n  }\n  \n  // Calculate estimated renovation costs\n  const baseRenovationCost = property.new_build ? 0 : safePrice * 0.1;\n  const sizeMultiplier = property.floor_area ? property.floor_area.size / 1000 : 1;\n  const estimatedRenovationCost = baseRenovationCost * sizeMultiplier;\n  \n  // Log the generated mock data\n  console.log('Generated mock investment analysis with properties:', {\n    yield: baseYield,\n    cashFlow: Math.round(estimatedCashFlow),\n    topStrategy: strategyRecommendations[0]?.strategy\n  });\n  \n  return {\n    estimatedRentalYield: parseFloat(baseYield.toFixed(2)),\n    estimatedROI: parseFloat((baseYield * 0.8).toFixed(2)), // ROI slightly lower than yield\n    estimatedCashFlow: Math.round(estimatedCashFlow),\n    estimatedAnnualProfit: Math.round(estimatedAnnualProfit),\n    estimatedCapRate: parseFloat((baseYield * 0.9).toFixed(2)), // Cap rate slightly lower than yield\n    suitableStrategies: strategies,\n    strategyRecommendations,\n    marketTrends: `The ${property.postcode?.split(' ')[0] || 'local'} area has seen ${areaGrowthPotential.toFixed(1)}% average price growth over the last year, ${areaGrowthPotential > 5 ? 'outperforming' : 'in line with'} the regional average.`,\n    propertyPotential: `This ${property.bedrooms}-bedroom ${property.property_type?.toLowerCase() || 'property'} offers ${strategyRecommendations[0]?.score > 7 ? 'strong' : strategyRecommendations[0]?.score > 5 ? 'good' : 'moderate'} investment potential, particularly for ${strategyRecommendations[0]?.strategy || 'buy-to-let'} strategy.`,\n    renovationOpportunities: property.new_build \n      ? 'As a new build, minimal renovation is required, but customization options may add value for specific tenant demographics.' \n      : `Potential improvements include modernizing the kitchen and bathroom, optimizing the layout, and energy efficiency upgrades to improve EPC rating and rental value.`,\n    riskAssessment: `Main considerations include ${safePrice > 400000 ? 'higher stamp duty costs affecting initial yield, ' : ''}${property.property_type?.toLowerCase().includes('flat') ? 'service charge and ground rent costs, ' : ''}and potential market volatility affecting ${safePrice > 500000 ? 'higher-value properties' : safePrice > 250000 ? 'mid-range properties' : 'entry-level properties'} in this area.`,\n    estimatedRenovationCost: Math.round(estimatedRenovationCost),\n    areaGrowthPotential: parseFloat(areaGrowthPotential.toFixed(1)),\n    areaInvestmentRating: parseFloat(areaInvestmentRating.toFixed(1)),\n    areaDescription,\n  };\n};\n\n// Function to test if the Gemini API is properly configured\nexport const testGeminiAPI = async (): Promise<{ success: boolean; message: string }> => {\n  if (!isGeminiConfigured) {\n    return { \n      success: false, \n      message: 'Gemini API key not configured. Set VITE_GEMINI_API_KEY in your .env file.' \n    };\n  }\n  \n  try {\n    const response = await fetch(`https://generativelanguage.googleapis.com/v1beta/models/gemini-pro?key=${GEMINI_API_KEY}`);\n    \n    if (!response.ok) {\n      const errorText = await response.text();\n      return { \n        success: false, \n        message: `API test failed: ${response.status} ${response.statusText} - ${errorText}` \n      };\n    }\n    \n    return { \n      success: true, \n      message: 'Gemini API connection successful' \n    };\n  } catch (error) {\n    return { \n      success: false, \n      message: `API test failed with error: ${error instanceof Error ? error.message : String(error)}` \n    };\n  }\n}; ","import React, { useState } from 'react';\nimport { testApifyToken } from '../lib/apifyRightmoveScraper';\nimport { testGeminiAPI } from '../lib/geminiService';\n\ninterface EnvVarDisplayProps {\n  name: string;\n  value: string | boolean | undefined;\n}\n\nconst EnvVarDisplay: React.FC<EnvVarDisplayProps> = ({ name, value }) => {\n  // Convert value to string and colorize based on boolean values\n  const stringValue = String(value);\n  const isBoolean = value === true || value === false || value === 'true' || value === 'false';\n  \n  // Mask API keys for security\n  const isSensitive = name.toLowerCase().includes('api_key') || name.toLowerCase().includes('apikey') || \n                      name.toLowerCase().includes('api_token') || name.toLowerCase().includes('token');\n  const displayValue = isSensitive && stringValue && stringValue.length > 8 \n    ? `${stringValue.substring(0, 4)}...${stringValue.substring(stringValue.length - 4)}`\n    : stringValue;\n  \n  return (\n    <div className=\"mb-1 flex items-start\">\n      <div className=\"font-mono font-medium w-60\">{name}:</div>\n      <div className={`font-mono ${isBoolean ? (\n        stringValue === 'true' ? 'text-green-600 font-bold' : \n        stringValue === 'false' ? 'text-red-600' : ''\n      ) : ''}`}>\n        {displayValue || '(undefined)'}\n      </div>\n    </div>\n  );\n};\n\nconst EnvironmentDebug = () => {\n  const [isExpanded, setIsExpanded] = useState(false);\n  const [apiKeyTestResult, setApiKeyTestResult] = useState<string | null>(null);\n  const [isTestingApi, setIsTestingApi] = useState(false);\n  const [apiStatus, setApiStatus] = useState<{status?: number, message: string} | null>(null);\n  const [apifyTestResult, setApifyTestResult] = useState<string | null>(null);\n  const [isTestingApify, setIsTestingApify] = useState(false);\n  const [apifyRightmoveTestResult, setApifyRightmoveTestResult] = useState<string | null>(null);\n  const [isTestingApifyRightmove, setIsTestingApifyRightmove] = useState(false);\n  const [testLocation, setTestLocation] = useState<string>('OUTCODE%5E2445');\n  const [showCorsHelp, setShowCorsHelp] = useState(false);\n  const [apifyStatus, setApifyStatus] = useState<{ success: boolean; message: string } | null>(null);\n  const [geminiStatus, setGeminiStatus] = useState<{ success: boolean; message: string } | null>(null);\n  const [isTestingGemini, setIsTestingGemini] = useState(false);\n  \n  // Get all environment variables from import.meta.env\n  const allEnvVars = { ...import.meta.env };\n  \n  // Special processing for VITE_USE_MOCK_DATA to check string vs boolean\n  const mockDataEnv = import.meta.env.VITE_USE_MOCK_DATA;\n  const mockDataString = typeof mockDataEnv === 'string' ? mockDataEnv : String(mockDataEnv);\n  const mockDataBoolean = typeof mockDataEnv === 'string' \n    ? mockDataEnv.toLowerCase() === 'true'\n    : Boolean(mockDataEnv);\n  \n  // Get API key info\n  const scraperApiKey = import.meta.env.VITE_SCRAPER_API_KEY || '162910ce5fe80080edef0fe026506f0e';\n  const isDefaultScraperKey = scraperApiKey === '162910ce5fe80080edef0fe026506f0e';\n  \n  // Get Apify token info\n  const apifyToken = import.meta.env.VITE_APIFY_API_TOKEN || 'apify_api_aPVtpmUSZzjriimnhQ6qsQuVXxqSpB12oY5r';\n  const isDefaultApifyToken = apifyToken === 'apify_api_aPVtpmUSZzjriimnhQ6qsQuVXxqSpB12oY5r';\n  \n  // Function to test the ScraperAPI key\n  const testApiKey = async () => {\n    setIsTestingApi(true);\n    setApiKeyTestResult(null);\n    setApiStatus(null);\n    \n    try {\n      // First test with a simple website\n      console.log('Testing ScraperAPI key with a simple website...');\n      const testUrl = 'https://api.scraperapi.com/scrape?api_key=' + scraperApiKey + '&url=' + encodeURIComponent('https://www.example.com');\n      \n      const response = await fetch(testUrl);\n      const isBasicValid = response.ok;\n      const statusCode = response.status;\n      \n      let statusMessage = 'Unknown error';\n      \n      // Specific error handling for common status codes\n      if (statusCode === 401) {\n        statusMessage = 'Unauthorized: Your ScraperAPI key is invalid or expired';\n      } else if (statusCode === 403) {\n        statusMessage = 'Forbidden: Your ScraperAPI account may be suspended';\n      } else if (statusCode === 404) {\n        statusMessage = 'Not Found: Your ScraperAPI key is invalid or the API endpoint has changed';\n      } else if (statusCode === 429) {\n        statusMessage = 'Too Many Requests: You have exceeded your ScraperAPI plan limits';\n      } else if (isBasicValid) {\n        statusMessage = 'Success';\n      } else {\n        statusMessage = `Error: ${response.status} ${response.statusText}`;\n      }\n      \n      setApiStatus({\n        status: statusCode,\n        message: statusMessage\n      });\n      \n      // Then test with a Rightmove property URL (the one the user specifically tested)\n      console.log('Testing ScraperAPI key with a Rightmove property...');\n      const rightmoveTestUrl = 'https://api.scraperapi.com/scrape?api_key=' + scraperApiKey + \n        '&url=' + encodeURIComponent('https://www.rightmove.co.uk/properties/150455012') + \n        '&render=true&country_code=uk&premium=true';\n      \n      let rightmoveResponse;\n      let rightmoveStatus = 'Not tested';\n      \n      try {\n        rightmoveResponse = await fetch(rightmoveTestUrl);\n        rightmoveStatus = rightmoveResponse.ok \n          ? '✅ Success'\n          : `❌ Failed (${rightmoveResponse.status})`;\n      } catch (e) {\n        rightmoveStatus = '❌ Connection error';\n      }\n      \n      if (isBasicValid && rightmoveResponse?.ok) {\n        setApiKeyTestResult('✅ Fully Valid - Works with both test sites and Rightmove');\n      } else if (isBasicValid) {\n        setApiKeyTestResult('⚠️ Partially Valid - Works with test sites but NOT with Rightmove (Status: ' + \n          (rightmoveResponse?.status || 'unknown') + ')');\n      } else {\n        setApiKeyTestResult('❌ Invalid API Key (Status: ' + response.status + ' - ' + response.statusText + ')');\n      }\n    } catch (error) {\n      console.error('Error testing API key:', error);\n      setApiKeyTestResult('❌ Error: ' + (error instanceof Error ? error.message : String(error)));\n      setApiStatus({\n        message: 'Connection error: Could not reach ScraperAPI servers'\n      });\n    } finally {\n      setIsTestingApi(false);\n    }\n  };\n\n  // Function to test the Apify API token\n  const testApifyAPIToken = async () => {\n    setIsTestingApify(true);\n    setApifyTestResult(null);\n    \n    try {\n      const result = await testApifyToken();\n      setApifyTestResult(result.success \n        ? `✅ ${result.message}`\n        : `❌ ${result.message}`);\n    } catch (error) {\n      console.error('Error testing Apify token:', error);\n      setApifyTestResult('❌ Error: ' + (error instanceof Error ? error.message : String(error)));\n    } finally {\n      setIsTestingApify(false);\n    }\n  };\n  \n  // Function to test the Apify Rightmove scraper with a specific outcode\n  const testApifyRightmoveScraper = async () => {\n    setIsTestingApifyRightmove(true);\n    setApifyRightmoveTestResult(null);\n    \n    try {\n      console.log(`Testing Apify Rightmove scraper with location: ${testLocation}`);\n      \n      // In development mode, use an alternative approach to avoid CORS\n      if (import.meta.env.DEV) {\n        console.log('Testing in development mode - using sample dataset');\n        \n        // Try to access the sample dataset directly\n        const response = await fetch('https://api.apify.com/v2/datasets/RPnlhVhYUc2eHliSs/items?token=apify_api_aPVtpmUSZzjriimnhQ6qsQuVXxqSpB12oY5r&limit=1');\n        \n        if (!response.ok) {\n          throw new Error(`Failed to access Apify sample dataset: ${response.status} ${response.statusText}`);\n        }\n        \n        const data = await response.json();\n        console.log('Successfully accessed Apify dataset:', data);\n        \n        setApifyRightmoveTestResult(`✅ Successfully connected to Apify. In development mode, direct API calls are limited due to CORS restrictions.`);\n        return;\n      }\n      \n      // In production, make the actual API call\n      // Construct the test URL\n      const searchUrl = `https://www.rightmove.co.uk/property-for-sale/find.html?locationIdentifier=${testLocation}`;\n      \n      // Prepare input for the Apify actor\n      const testInput = {\n        listUrls: [{ url: searchUrl, method: \"GET\" }],\n        fullScrape: true,\n        monitoringMode: false,\n        fullPropertyDetails: true, \n        maxProperties: 1, // Just request 1 property for the test\n        proxy: { useApifyProxy: true }\n      };\n      \n      // Make direct fetch request to the Apify API\n      const response = await fetch(`https://api.apify.com/v2/acts/dhrumil/rightmove-scraper/runs`, {\n        method: 'POST',\n        headers: {\n          'Authorization': `Bearer ${apifyToken}`,\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({ run: { input: testInput } })\n      });\n      \n      if (!response.ok) {\n        const errorText = await response.text();\n        console.error('Test failed:', {\n          status: response.status,\n          statusText: response.statusText,\n          response: errorText\n        });\n        setApifyRightmoveTestResult(`❌ Failed to start Apify actor: ${response.status} ${response.statusText}`);\n        return;\n      }\n      \n      const data = await response.json();\n      console.log('Apify actor started:', data);\n      \n      // Show immediate success - we won't wait for completion\n      setApifyRightmoveTestResult(`✅ Successfully started Apify Rightmove scraper with run ID: ${data.data.id}`);\n      \n    } catch (error) {\n      console.error('Error testing Apify Rightmove scraper:', error);\n      setApifyRightmoveTestResult('❌ Error: ' + (error instanceof Error ? error.message : String(error)));\n    } finally {\n      setIsTestingApifyRightmove(false);\n    }\n  };\n\n  // Function to test the Gemini API\n  const testGemini = async () => {\n    setIsTestingGemini(true);\n    try {\n      const result = await testGeminiAPI();\n      setGeminiStatus(result);\n    } catch (error) {\n      console.error('Error testing Gemini API:', error);\n      setGeminiStatus({\n        success: false,\n        message: `Error: ${error instanceof Error ? error.message : String(error)}`\n      });\n    } finally {\n      setIsTestingGemini(false);\n    }\n  };\n    \n  return (\n    <div className=\"border rounded-md p-3 bg-gray-50 my-4\">\n      <div \n        className=\"flex justify-between items-center cursor-pointer font-medium\" \n        onClick={() => setIsExpanded(!isExpanded)}\n      >\n        <h3 className=\"text-lg\">Environment Variables Debug</h3>\n        <span>{isExpanded ? '▼' : '►'}</span>\n      </div>\n      \n      {isExpanded && (\n        <div className=\"mt-3 text-sm\">\n          <h4 className=\"font-semibold mb-2\">Mock Data Settings</h4>\n          <EnvVarDisplay name=\"VITE_USE_MOCK_DATA (raw)\" value={mockDataString} />\n          <EnvVarDisplay name=\"VITE_USE_MOCK_DATA (interpreted)\" value={mockDataBoolean} />\n          \n          <h4 className=\"font-semibold mb-2 mt-4\">Apify Settings</h4>\n          <EnvVarDisplay name=\"VITE_APIFY_API_TOKEN\" value={apifyToken} />\n          <div className=\"mb-1 flex items-start\">\n            <div className=\"font-mono font-medium w-60\">Token Status:</div>\n            <div className={`font-mono ${isDefaultApifyToken ? 'text-yellow-600' : 'text-green-600'}`}>\n              {isDefaultApifyToken ? 'Using provided token' : 'Using custom token'}\n            </div>\n          </div>\n          \n          {apifyTestResult && (\n            <div className=\"mb-1 flex items-start\">\n              <div className=\"font-mono font-medium w-60\">Apify Test Result:</div>\n              <div className=\"font-mono\">{apifyTestResult}</div>\n            </div>\n          )}\n          \n          <div className=\"mt-2 mb-4\">\n            <button\n              onClick={(e) => {\n                e.stopPropagation();\n                testApifyAPIToken();\n              }}\n              disabled={isTestingApify}\n              className=\"px-3 py-1 bg-blue-500 text-white rounded text-xs hover:bg-blue-600 disabled:bg-blue-300\"\n            >\n              {isTestingApify ? 'Testing...' : 'Test Apify Token'}\n            </button>\n          </div>\n          \n          <h4 className=\"font-semibold mb-2 mt-4\">Apify Rightmove Scraper Test</h4>\n          <div className=\"mb-2 flex items-start\">\n            <div className=\"font-mono font-medium w-60\">Test Location:</div>\n            <input \n              type=\"text\" \n              value={testLocation}\n              onChange={(e) => setTestLocation(e.target.value)}\n              className=\"border rounded px-2 py-1 text-sm font-mono w-64\"\n              placeholder=\"OUTCODE%5E2445\"\n            />\n          </div>\n          \n          {apifyRightmoveTestResult && (\n            <div className=\"mb-1 flex items-start\">\n              <div className=\"font-mono font-medium w-60\">Rightmove Test:</div>\n              <div className=\"font-mono max-w-lg break-words\">{apifyRightmoveTestResult}</div>\n            </div>\n          )}\n          \n          <div className=\"mt-2 mb-4\">\n            <button\n              onClick={(e) => {\n                e.stopPropagation();\n                testApifyRightmoveScraper();\n              }}\n              disabled={isTestingApifyRightmove}\n              className=\"px-3 py-1 bg-blue-500 text-white rounded text-xs hover:bg-blue-600 disabled:bg-blue-300\"\n            >\n              {isTestingApifyRightmove ? 'Testing...' : 'Test Rightmove Scraper'}\n            </button>\n            <div className=\"mt-2 text-xs text-gray-600\">\n              Try with <code>OUTCODE%5E2445</code> (replace with your desired location)\n            </div>\n          </div>\n          \n          <h4 className=\"font-semibold mb-2 mt-4\">ScraperAPI Settings (Legacy)</h4>\n          <EnvVarDisplay name=\"VITE_SCRAPER_API_KEY\" value={scraperApiKey} />\n          <div className=\"mb-1 flex items-start\">\n            <div className=\"font-mono font-medium w-60\">Key Status:</div>\n            <div className={`font-mono ${isDefaultScraperKey ? 'text-red-500 font-bold' : 'text-green-600'}`}>\n              {isDefaultScraperKey ? 'Using default key (NOT WORKING)' : 'Using custom key'}\n            </div>\n          </div>\n          \n          {apiStatus && (\n            <div className=\"mb-1 flex items-start\">\n              <div className=\"font-mono font-medium w-60\">API Response:</div>\n              <div className={`font-mono ${apiStatus.status && apiStatus.status >= 200 && apiStatus.status < 300 ? 'text-green-600' : 'text-red-500'}`}>\n                {apiStatus.status ? `${apiStatus.status} - ${apiStatus.message}` : apiStatus.message}\n              </div>\n            </div>\n          )}\n          \n          {apiKeyTestResult && (\n            <div className=\"mb-1 flex items-start\">\n              <div className=\"font-mono font-medium w-60\">API Test Result:</div>\n              <div className=\"font-mono\">{apiKeyTestResult}</div>\n            </div>\n          )}\n          \n          <h4 className=\"font-semibold mb-2 mt-4\">Gemini API Settings</h4>\n          <EnvVarDisplay name=\"VITE_GEMINI_API_KEY\" value={import.meta.env.VITE_GEMINI_API_KEY} />\n          <div className=\"mb-1 flex items-start\">\n            <div className=\"font-mono font-medium w-60\">Gemini API Status:</div>\n            <div className={`font-mono ${import.meta.env.VITE_GEMINI_API_KEY ? 'text-green-600' : 'text-red-600'}`}>\n              {import.meta.env.VITE_GEMINI_API_KEY ? 'Using custom key' : 'Using default key'}\n            </div>\n          </div>\n          \n          <h4 className=\"font-semibold mb-2 mt-4\">Other Environment Variables</h4>\n          <EnvVarDisplay name=\"NODE_ENV\" value={import.meta.env.NODE_ENV} />\n          <EnvVarDisplay name=\"MODE\" value={import.meta.env.MODE} />\n          <EnvVarDisplay name=\"DEV\" value={import.meta.env.DEV} />\n          <EnvVarDisplay name=\"PROD\" value={import.meta.env.PROD} />\n          \n          <h4 className=\"font-semibold mb-2 mt-4\">All Environment Variables</h4>\n          {Object.entries(allEnvVars)\n            .filter(([key]) => key !== 'SSR') // Filter out the SSR proxy object\n            .map(([key, value]) => (\n              <EnvVarDisplay key={key} name={key} value={value as string} />\n            ))}\n          \n          {import.meta.env.DEV && (\n            <div className=\"mt-4 border-t pt-3\">\n              <h4 className=\"font-semibold mb-2 flex items-center cursor-pointer\" onClick={() => setShowCorsHelp(!showCorsHelp)}>\n                <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5 mr-1 text-orange-500\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                  <path fillRule=\"evenodd\" d=\"M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z\" clipRule=\"evenodd\" />\n                </svg>\n                Development Mode & CORS Issues\n                <span className=\"ml-2\">{showCorsHelp ? \"▼\" : \"►\"}</span>\n              </h4>\n              \n              {showCorsHelp && (\n                <div className=\"bg-orange-50 p-3 rounded-md border border-orange-200\">\n                  <p className=\"font-medium mb-2\">You're encountering CORS issues with Apify API</p>\n                  <p className=\"mb-2 text-xs\">\n                    The browser blocks direct API calls to Apify due to Cross-Origin Resource Sharing (CORS) restrictions.\n                    This is a security feature of web browsers.\n                  </p>\n                  \n                  <h5 className=\"font-medium mb-1 mt-3\">Possible Solutions:</h5>\n                  <ol className=\"list-decimal ml-5 text-xs space-y-1\">\n                    <li>\n                      <strong>Use the sample data mode</strong> - The app is configured to use sample \n                      data in development mode to work around CORS\n                    </li>\n                    <li>\n                      <strong>Use a CORS proxy</strong> - You can set up a local proxy server that makes the API calls for you\n                    </li>\n                    <li>\n                      <strong>Install a CORS browser extension</strong> - Extensions like \"CORS Unblock\" can disable CORS \n                      checks temporarily (not recommended for regular browsing)\n                    </li>\n                    <li>\n                      <strong>Create a server-side API</strong> - For production, implement a server endpoint that makes the \n                      Apify calls\n                    </li>\n                  </ol>\n                  \n                  <h5 className=\"font-medium mb-1 mt-3\">Quick CORS Extension Setup:</h5>\n                  <ol className=\"list-decimal ml-5 text-xs space-y-1\">\n                    <li>Install a CORS extension like \"CORS Unblock\" for Chrome/Firefox</li>\n                    <li>Enable the extension when working with this application</li>\n                    <li>Disable the extension when browsing other websites for security</li>\n                  </ol>\n                  \n                  <p className=\"mt-3 text-xs bg-blue-50 p-2 rounded\">\n                    In sample data mode, the app will use data from a previous successful Apify run. The data is limited,\n                    but it allows you to test the UI without CORS issues.\n                  </p>\n                </div>\n              )}\n            </div>\n          )}\n          \n          <div className=\"mt-4 p-2 bg-blue-50 text-blue-800 text-xs rounded\">\n            <p className=\"font-semibold\">Troubleshooting Tips:</p>\n            <ul className=\"list-disc ml-4 mt-1\">\n              <li>If VITE_USE_MOCK_DATA is 'true', the app will use mock data</li>\n              <li>VITE_USE_MOCK_DATA must be set to 'false' (string) to disable mock data</li>\n              <li className=\"font-bold\">A valid Apify API token is required for property searches</li>\n              <li>Add your Apify token to .env.local as VITE_APIFY_API_TOKEN=your_token_here</li>\n              <li>Restart your dev server after changing environment variables</li>\n              <li className=\"font-bold mt-1\">For Rightmove searches:</li>\n              <li>For outcodes (e.g., SW1) use format: <code>OUTCODE%5E1234</code></li>\n              <li>For regions/areas use format: <code>REGION%5ELondon</code></li>\n            </ul>\n          </div>\n          \n          <div className=\"mt-4 p-2 bg-yellow-50 text-yellow-800 text-xs rounded\">\n            <p className=\"font-semibold\">CORS Limitations in Development:</p>\n            <ul className=\"list-disc ml-4 mt-1\">\n              <li>When running in development mode, direct API calls to Apify have CORS restrictions</li>\n              <li>The application uses sample data in development to work around these limitations</li>\n              <li>In production deployment, CORS issues won't occur as requests will be server-side</li>\n              <li>If you need to test with live data during development, consider using a CORS proxy or browser extension</li>\n            </ul>\n          </div>\n\n          <div className=\"mt-4 p-2 bg-green-50 text-green-800 text-xs rounded\">\n            <p className=\"font-semibold\">Gemini API Status:</p>\n            <div>{geminiStatus?.message}</div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default EnvironmentDebug; ","import React from 'react';\nimport { Layout } from \"../components/Layout\";\nimport { Button } from \"../components/ui/button\";\nimport { Input } from \"../components/ui/input\";\nimport { Card } from \"../components/ui/card\";\nimport { LoadingSpinner } from \"../components/ui/loading-spinner\";\nimport { useToast } from \"../components/ui/use-toast\";\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"../components/ui/tabs\";\nimport { formatCurrency, cn } from \"../lib/utils\";\nimport { HeroSection } from \"../components/HeroSection\";\nimport EnvironmentDebug from \"../components/EnvironmentDebug\";\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from \"../components/ui/select\";\nimport { \n  searchRightmoveProperties, \n  getPropertyDetails,\n  checkPropertyActiveStatus,\n  type RightmoveProperty,\n  type SearchFilters,\n  ensureScraperCacheTableExists\n} from \"../lib/apifyRightmoveScraper\";\nimport { testSupabaseConnection } from \"../lib/supabase\";\nimport { supabase } from \"../lib/supabase\";\nimport { \n  PropertyInvestmentAnalysis,\n  analyzePropertyInvestment \n} from \"../lib/geminiService\";\n\ninterface AskingPricesData {\n  postcode: string;\n  data?: {\n    mean: number;\n    median: number;\n  };\n}\n\ntype PropertyType = 'flat' | 'terraced' | 'semi-detached' | 'detached' | 'bungalow' | 'any';\ntype PropertyTenure = 'freehold' | 'leasehold' | 'any';\n\ninterface Filters {\n  propertyType: PropertyType;\n  tenure: PropertyTenure;\n  minBeds: string;\n  radius: number;\n  page: number;\n  limit: number;\n  newBuild: boolean;\n  maxAgeMonths: number;\n  sortBy: 'most_recent_sale_date' | 'distance';\n  minPrice?: number;\n  maxPrice?: number;\n}\n\ninterface AreaInsights {\n  postcode: string;\n  averagePrice: number;\n  priceGrowth1Year: number;\n  priceGrowth5Years: number;\n  crimeRate: number;\n  schoolsRating: number;\n  transportRating: number;\n}\n\ninterface PropertySaleHistory {\n  date: string;\n  price: number;\n}\n\ninterface PropertyModalProps {\n  property: RightmoveProperty;\n  onClose: () => void;\n  saleHistoryData?: PropertySaleHistory[];\n  areaInsights?: AreaInsights;\n  investmentAnalysis?: PropertyInvestmentAnalysis | null;\n}\n\n// Define a proper interface for the search details\ninterface SearchDetails {\n  originalLocation: string;\n  formattedLocation: string;\n  isOutcode: boolean;\n  timestamp: string;\n  cacheBustLocation?: string;\n  searchDurationMs?: number;\n  propertiesFound?: number;\n  zeroPriceCount?: number;\n  missingAddressCount?: number;\n}\n\n// Add these styles at the top of the file, after the imports\nconst animationStyles = `\n  @keyframes fadein {\n    from { opacity: 0; }\n    to   { opacity: 1; }\n  }\n  \n  @keyframes pulse {\n    0%, 100% { opacity: 1; }\n    50% { opacity: 0.5; }\n  }\n  \n  .animate-fadein {\n    animation: fadein 0.5s ease-in;\n  }\n  \n  .animate-pulse {\n    animation: pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;\n  }\n`;\n\nconst PropertyModal = ({ \n  property, \n  onClose, \n  saleHistoryData = [], \n  areaInsights,\n  investmentAnalysis \n}: PropertyModalProps) => {\n  // Safety check - if property is undefined or null, render fallback UI\n  if (!property) {\n    return (\n      <div className=\"fixed inset-0 z-50 flex items-center justify-center bg-black bg-opacity-50 p-4\">\n        <div className=\"w-full max-w-lg rounded-lg bg-white p-6 shadow-xl\">\n          <div className=\"flex justify-between items-center mb-4\">\n            <h2 className=\"text-xl font-semibold\">Error Loading Property</h2>\n            <button onClick={onClose} className=\"text-gray-500 hover:text-gray-700\">\n              <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" \n                  stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n                <line x1=\"18\" y1=\"6\" x2=\"6\" y2=\"18\"></line>\n                <line x1=\"6\" y1=\"6\" x2=\"18\" y2=\"18\"></line>\n              </svg>\n            </button>\n          </div>\n          <p className=\"text-red-600 mb-4\">There was an error loading this property. Please try again.</p>\n          <button \n            onClick={onClose}\n            className=\"w-full bg-blue-600 text-white py-2 rounded hover:bg-blue-700 transition-colors duration-300\"\n          >\n            Close\n          </button>\n        </div>\n      </div>\n    );\n  }\n\n  // Use React.useState to store a stable copy of the property data\n  const [stableProperty, setStableProperty] = React.useState(property);\n  \n  // Update the stable property when property id changes\n  React.useEffect(() => {\n    if (property && property.id !== stableProperty?.id) {\n      setStableProperty(property);\n    }\n  }, [property, stableProperty?.id]);\n  \n  // Use React.useMemo to stabilize and prevent unnecessary re-renders\n  const memoizedProperty = React.useMemo(() => stableProperty, [stableProperty?.id]);\n  \n  // Stabilize price display to prevent flickering\n  const formattedPrice = React.useMemo(() => \n    formatCurrency(memoizedProperty?.price || 0), \n    [memoizedProperty?.price]\n  );\n  \n  // Safe getters for investment metrics with proper error handling\n  const getMetric = (value: number | undefined | null): string => {\n    if (value === undefined || value === null || isNaN(value)) {\n      return 'N/A';\n    }\n    return value.toFixed(1) + '%';\n  };\n  \n  const getCashFlow = (value: number | undefined | null): string => {\n    if (value === undefined || value === null || isNaN(value)) {\n      return 'N/A';\n    }\n    return formatCurrency(value);\n  };\n  \n  const calculateTotalPriceGrowth = React.useCallback(() => {\n    if (!saleHistoryData || saleHistoryData.length < 2) return 0;\n    \n    try {\n      const firstSale = saleHistoryData[0];\n      const lastSale = saleHistoryData[saleHistoryData.length - 1];\n      \n      if (!firstSale.price || !lastSale.price) return 0;\n      \n      return ((lastSale.price - firstSale.price) / firstSale.price) * 100;\n    } catch (error) {\n      console.error('Error calculating total price growth:', error);\n      return 0;\n    }\n  }, [saleHistoryData]);\n  \n  // Pre-calculate derived values to prevent recalculation during renders\n  const calculateAnnualGrowth = React.useCallback(() => {\n    if (!saleHistoryData || saleHistoryData.length < 2) return 0;\n    \n    try {\n      const firstSale = saleHistoryData[0];\n      const lastSale = saleHistoryData[saleHistoryData.length - 1];\n      \n      if (!firstSale.date || !lastSale.date || !firstSale.price || !lastSale.price) return 0;\n      \n      const firstDate = new Date(firstSale.date);\n      const lastDate = new Date(lastSale.date);\n      \n      const yearsDiff = (lastDate.getTime() - firstDate.getTime()) / (1000 * 60 * 60 * 24 * 365);\n      \n      if (yearsDiff < 0.5) return 0;\n      \n      const totalGrowthRate = (lastSale.price - firstSale.price) / firstSale.price;\n      const annualGrowthRate = Math.pow(1 + totalGrowthRate, 1 / yearsDiff) - 1;\n      \n      return annualGrowthRate * 100;\n    } catch (error) {\n      console.error('Error calculating annual growth:', error);\n      return 0;\n    }\n  }, [saleHistoryData]);\n\n  const calculatePricePerSqft = React.useCallback(() => {\n    try {\n      if (memoizedProperty.floor_area?.size && memoizedProperty.floor_area.size > 0 && \n          memoizedProperty.price && memoizedProperty.price > 0) {\n        return memoizedProperty.price / memoizedProperty.floor_area.size;\n      }\n      return null;\n    } catch (error) {\n      console.error('Error calculating price per sqft:', error);\n      return null;\n    }\n  }, [memoizedProperty.price, memoizedProperty.floor_area]);\n\n  const pricePerSqft = React.useMemo(() => calculatePricePerSqft(), [calculatePricePerSqft]);\n  const annualGrowthRate = React.useMemo(() => calculateAnnualGrowth(), [calculateAnnualGrowth]);\n  const totalPriceGrowth = React.useMemo(() => calculateTotalPriceGrowth(), [calculateTotalPriceGrowth]);\n  \n  // Add debug mode toggle for development\n  const showDebug = import.meta.env.DEV;\n  \n  return (\n    <div className=\"fixed inset-0 z-50 flex items-center justify-center bg-black bg-opacity-50 p-4\">\n      <div className=\"max-h-[90vh] w-full max-w-4xl overflow-y-auto rounded-lg bg-white p-6 shadow-xl\">\n        <div className=\"mb-6 flex justify-between\">\n          <h2 className=\"text-2xl font-bold\">{memoizedProperty.address || 'Property Details'}</h2>\n          <button onClick={onClose} className=\"text-gray-500 hover:text-gray-700\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n              <line x1=\"18\" y1=\"6\" x2=\"6\" y2=\"18\"></line>\n              <line x1=\"6\" y1=\"6\" x2=\"18\" y2=\"18\"></line>\n            </svg>\n          </button>\n        </div>\n\n        {/* Add debug panel in development mode */}\n        {showDebug && (\n          <div className=\"mb-4 p-3 bg-gray-100 rounded-md border border-gray-300 text-xs font-mono\">\n            <h3 className=\"font-bold mb-2\">Debug Info:</h3>\n            <div>\n              <div>Property ID: <span className=\"font-bold\">{memoizedProperty.id}</span></div>\n              <div>Raw Price: <span className=\"font-bold\">{memoizedProperty.price}</span></div>\n              <div>Formatted Price: <span className=\"font-bold\">{formattedPrice}</span></div>\n              <div>Agent Name: <span className=\"font-bold\">{memoizedProperty.agent.name}</span></div>\n              <div>Agent Phone: <span className=\"font-bold\">{memoizedProperty.agent.phone || 'Not available'}</span></div>\n              <div>Agent Logo URL: <span className=\"font-bold\">{memoizedProperty.agent.logo_url || 'Not available'}</span></div>\n              <div>Raw property data: <pre className=\"mt-2 overflow-auto max-h-20\">{JSON.stringify(memoizedProperty, null, 2)}</pre></div>\n            </div>\n          </div>\n        )}\n\n        <div className=\"grid grid-cols-1 gap-8 md:grid-cols-2\">\n          <div>\n            {memoizedProperty.main_image_url && (\n              <img \n                src={memoizedProperty.main_image_url} \n                alt={memoizedProperty.address} \n                className=\"mb-4 h-64 w-full rounded-lg object-cover\" \n              />\n            )}\n            <div className=\"mb-4 grid grid-cols-2 gap-4\">\n              <div className=\"rounded-lg bg-gray-100 p-3\">\n                <h3 className=\"font-medium text-gray-500\">Price</h3>\n                <p className=\"text-lg font-bold\">{formattedPrice}</p>\n              </div>\n              <div className=\"rounded-lg bg-gray-100 p-3\">\n                <h3 className=\"font-medium text-gray-500\">Property Type</h3>\n                <p className=\"text-lg font-bold\">{memoizedProperty.property_type}</p>\n              </div>\n              <div className=\"rounded-lg bg-gray-100 p-3\">\n                <h3 className=\"font-medium text-gray-500\">Bedrooms</h3>\n                <p className=\"text-lg font-bold\">{property.bedrooms}</p>\n              </div>\n              <div className=\"rounded-lg bg-gray-100 p-3\">\n                <h3 className=\"font-medium text-gray-500\">Bathrooms</h3>\n                <p className=\"text-lg font-bold\">{property.bathrooms || \"N/A\"}</p>\n              </div>\n              {pricePerSqft && (\n                <div className=\"rounded-lg bg-gray-100 p-3\">\n                  <h3 className=\"font-medium text-gray-500\">Price per sq.ft</h3>\n                  <p className=\"text-lg font-bold\">{formatCurrency(pricePerSqft)}</p>\n                </div>\n              )}\n              {property.tenure && (\n                <div className=\"rounded-lg bg-gray-100 p-3\">\n                  <h3 className=\"font-medium text-gray-500\">Tenure</h3>\n                  <p className=\"text-lg font-bold\">{property.tenure}</p>\n                </div>\n              )}\n            </div>\n            \n            <div className=\"mb-4\">\n              <h3 className=\"mb-2 text-xl font-bold\">Description</h3>\n              <p className=\"text-gray-700\">{property.description}</p>\n            </div>\n            \n            {property.features && property.features.length > 0 && (\n              <div className=\"mb-4\">\n                <h3 className=\"mb-2 text-xl font-bold\">Features</h3>\n                <ul className=\"list-inside list-disc\">\n                  {property.features.map((feature: string, index: number) => (\n                    <li key={index} className=\"text-gray-700\">{feature}</li>\n                  ))}\n                </ul>\n              </div>\n            )}\n          </div>\n\n          <div>\n            <Tabs defaultValue=\"investment\">\n              <TabsList className=\"grid w-full grid-cols-4\">\n                <TabsTrigger value=\"investment\">Investment</TabsTrigger>\n                <TabsTrigger value=\"area\">Area Insights</TabsTrigger>\n                <TabsTrigger value=\"history\">Sale History</TabsTrigger>\n                <TabsTrigger value=\"agent\">Agent Details</TabsTrigger>\n              </TabsList>\n              \n              <TabsContent value=\"investment\" className=\"mt-4\">\n                {investmentAnalysis ? (\n                  <div>\n                    <h3 className=\"text-xl font-semibold mb-3\">Investment Analysis</h3>\n                    \n                    <div className=\"grid grid-cols-2 md:grid-cols-3 gap-4 mb-6\">\n                      <div className=\"bg-blue-50 p-3 rounded-md\">\n                        <h4 className=\"text-sm text-blue-700\">Rental Yield</h4>\n                        <p className=\"text-xl font-bold\">{getMetric(investmentAnalysis.estimatedRentalYield)}</p>\n                      </div>\n                      <div className=\"bg-green-50 p-3 rounded-md\">\n                        <h4 className=\"text-sm text-green-700\">Return on Investment</h4>\n                        <p className=\"text-xl font-bold\">{getMetric(investmentAnalysis.estimatedROI)}</p>\n                      </div>\n                      <div className=\"bg-purple-50 p-3 rounded-md\">\n                        <h4 className=\"text-sm text-purple-700\">Monthly Cash Flow</h4>\n                        <p className=\"text-xl font-bold\">{getCashFlow(investmentAnalysis.estimatedCashFlow)}</p>\n                      </div>\n                      <div className=\"bg-amber-50 p-3 rounded-md\">\n                        <h4 className=\"text-sm text-amber-700\">Annual Profit</h4>\n                        <p className=\"text-xl font-bold\">{getCashFlow(investmentAnalysis.estimatedAnnualProfit)}</p>\n                      </div>\n                      <div className=\"bg-indigo-50 p-3 rounded-md\">\n                        <h4 className=\"text-sm text-indigo-700\">Cap Rate</h4>\n                        <p className=\"text-xl font-bold\">{getMetric(investmentAnalysis.estimatedCapRate)}</p>\n                      </div>\n                      <div className=\"bg-rose-50 p-3 rounded-md\">\n                        <h4 className=\"text-sm text-rose-700\">Area Growth Potential</h4>\n                        <p className=\"text-xl font-bold\">{getMetric(investmentAnalysis.areaGrowthPotential)}</p>\n                      </div>\n                    </div>\n                    \n                    <div className=\"mb-6\">\n                      <h4 className=\"font-semibold mb-2\">Top Investment Strategies</h4>\n                      <div className=\"space-y-3\">\n                        {investmentAnalysis.strategyRecommendations && \n                         investmentAnalysis.strategyRecommendations.slice(0, 3).map((strategy, index) => (\n                          <div key={index} className=\"border rounded-md p-3\">\n                            <div className=\"flex justify-between items-center mb-1\">\n                              <span className=\"font-medium\">{strategy.strategy}</span>\n                              <span className={`px-2 py-0.5 rounded text-sm ${\n                                strategy.score >= 8 ? 'bg-green-100 text-green-800' : \n                                strategy.score >= 6 ? 'bg-blue-100 text-blue-800' : \n                                'bg-gray-100 text-gray-800'\n                              }`}>\n                                Score: {strategy.score?.toFixed(1) || 'N/A'}\n                              </span>\n                            </div>\n                            <p className=\"text-sm text-gray-600\">{strategy.reasoning}</p>\n                          </div>\n                        ))}\n                        \n                        {(!investmentAnalysis.strategyRecommendations || \n                          investmentAnalysis.strategyRecommendations.length === 0) && (\n                          <p className=\"text-gray-500\">No strategy recommendations available</p>\n                        )}\n                      </div>\n                    </div>\n                    \n                    <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6 mb-6\">\n                      <div>\n                        <h4 className=\"font-semibold mb-2\">Property Potential</h4>\n                        <p className=\"text-gray-700\">{investmentAnalysis.propertyPotential || 'No data available'}</p>\n                      </div>\n                      <div>\n                        <h4 className=\"font-semibold mb-2\">Renovation Opportunities</h4>\n                        <p className=\"text-gray-700\">{investmentAnalysis.renovationOpportunities || 'No data available'}</p>\n                        {investmentAnalysis.estimatedRenovationCost > 0 && (\n                          <p className=\"mt-2 font-medium\">Estimated Cost: {getCashFlow(investmentAnalysis.estimatedRenovationCost)}</p>\n                        )}\n                      </div>\n                    </div>\n                    \n                    <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                      <div>\n                        <h4 className=\"font-semibold mb-2\">Risk Assessment</h4>\n                        <p className=\"text-gray-700\">{investmentAnalysis.riskAssessment || 'No data available'}</p>\n                      </div>\n                      <div>\n                        <h4 className=\"font-semibold mb-2\">Market Trends</h4>\n                        <p className=\"text-gray-700\">{investmentAnalysis.marketTrends || 'No data available'}</p>\n                      </div>\n                    </div>\n                  </div>\n                ) : (\n                  <div className=\"py-8 text-center\">\n                    <div className=\"animate-spin mx-auto mb-4 h-8 w-8 text-gray-500\">\n                      <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n                        <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\n                        <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n                      </svg>\n                    </div>\n                    <p className=\"text-gray-500\">Analyzing investment potential...</p>\n                    <p className=\"text-sm text-gray-400 mt-2\">This may take a moment as we calculate metrics for this property.</p>\n                  </div>\n                )}\n              </TabsContent>\n              \n              <TabsContent value=\"area\" className=\"mt-4\">\n                <div className=\"rounded-lg border p-4\">\n                  <h3 className=\"mb-4 text-xl font-bold\">Area Insights</h3>\n                  {areaInsights ? (\n                    <div className=\"space-y-4\">\n                      <div>\n                        <h4 className=\"font-medium text-gray-500\">Average Property Price</h4>\n                        <p className=\"text-lg font-bold\">{formatCurrency(areaInsights.averagePrice)}</p>\n                      </div>\n                      <div>\n                        <h4 className=\"font-medium text-gray-500\">Price Growth (1 Year)</h4>\n                        <p className=\"text-lg font-bold\">{areaInsights.priceGrowth1Year.toFixed(1)}%</p>\n                      </div>\n                      <div>\n                        <h4 className=\"font-medium text-gray-500\">Price Growth (5 Years)</h4>\n                        <p className=\"text-lg font-bold\">{areaInsights.priceGrowth5Years.toFixed(1)}%</p>\n                      </div>\n                      <div>\n                        <h4 className=\"font-medium text-gray-500\">Crime Rate</h4>\n                        <p className=\"text-lg font-bold\">{areaInsights.crimeRate} (per 1,000 people)</p>\n                      </div>\n                      <div>\n                        <h4 className=\"font-medium text-gray-500\">Schools Rating</h4>\n                        <p className=\"text-lg font-bold\">{areaInsights.schoolsRating}/10</p>\n                      </div>\n                      <div>\n                        <h4 className=\"font-medium text-gray-500\">Transport Rating</h4>\n                        <p className=\"text-lg font-bold\">{areaInsights.transportRating}/10</p>\n                      </div>\n                    </div>\n                  ) : (\n                    <p className=\"text-gray-500\">Area insights not available for this location.</p>\n                  )}\n                </div>\n              </TabsContent>\n              \n              <TabsContent value=\"history\">\n                <div className=\"rounded-lg border p-4\">\n                  <h3 className=\"mb-4 text-xl font-bold\">Sale History</h3>\n                  {saleHistoryData && saleHistoryData.length > 0 ? (\n                    <div>\n                      <div className=\"mb-4\">\n                        <h4 className=\"font-medium text-gray-500\">Total Price Growth</h4>\n                        <p className=\"text-lg font-bold\">{totalPriceGrowth.toFixed(1)}%</p>\n                      </div>\n                      {annualGrowthRate > 0 && (\n                        <div className=\"mb-4\">\n                          <h4 className=\"font-medium text-gray-500\">Annual Growth Rate</h4>\n                          <p className=\"text-lg font-bold\">{annualGrowthRate.toFixed(1)}%</p>\n                        </div>\n                      )}\n                      <table className=\"w-full\">\n                        <thead>\n                          <tr>\n                            <th className=\"text-left\">Date</th>\n                            <th className=\"text-right\">Price</th>\n                          </tr>\n                        </thead>\n                        <tbody>\n                          {saleHistoryData.map((sale, index) => (\n                            <tr key={index} className=\"border-t\">\n                              <td className=\"py-2\">{new Date(sale.date).toLocaleDateString()}</td>\n                              <td className=\"py-2 text-right\">{formatCurrency(sale.price)}</td>\n                            </tr>\n                          ))}\n                        </tbody>\n                      </table>\n                </div>\n                ) : (\n                  <p className=\"text-gray-500\">No sale history available for this property.</p>\n                )}\n                </div>\n              </TabsContent>\n              \n              <TabsContent value=\"agent\">\n                <div className=\"rounded-lg border p-4\">\n                  <h3 className=\"mb-4 text-xl font-bold\">Agent Details</h3>\n                  <div className=\"flex items-center space-x-4\">\n                    {property.agent.logo_url && (\n                      <img \n                        src={property.agent.logo_url} \n                        alt={property.agent.name} \n                        className=\"h-16 w-16 rounded-lg object-contain\" \n                      />\n                    )}\n                    <div>\n                      <p className=\"text-lg font-bold\">{property.agent.name}</p>\n                      {property.agent.phone && (\n                        <p className=\"text-gray-700\">{property.agent.phone}</p>\n                      )}\n                    </div>\n                  </div>\n                  <div className=\"mt-4\">\n                    <a \n                      href={property.rightmove_url} \n                      target=\"_blank\" \n                      rel=\"noopener noreferrer\"\n                      className=\"inline-block rounded-lg bg-blue-600 px-4 py-2 text-white hover:bg-blue-700\"\n                    >\n                      View on Rightmove\n                    </a>\n                  </div>\n                </div>\n              </TabsContent>\n            </Tabs>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\n// Update the SearchDebugPanel component with the proper type\nconst SearchDebugPanel = ({ \n  searchDetails, \n  properties \n}: { \n  searchDetails: SearchDetails; \n  properties: RightmoveProperty[] \n}) => {\n  // Calculate property statistics\n  const validProperties = properties.filter(p => p.price > 0);\n  const validPricesCount = validProperties.length;\n  const zeroPriceCount = properties.filter(p => p.price === 0).length;\n  const missingAddressCount = properties.filter(p => !p.address).length;\n  \n  // Calculate price statistics\n  const prices = validProperties.map(p => p.price).filter(p => p > 0);\n  const minPrice = prices.length > 0 ? Math.min(...prices) : 0;\n  const maxPrice = prices.length > 0 ? Math.max(...prices) : 0;\n  const avgPrice = prices.length > 0 ? prices.reduce((a, b) => a + b, 0) / prices.length : 0;\n  \n  // Get the first property for inspection\n  const firstProperty = properties.length > 0 ? properties[0] : null;\n  \n  return (\n    <div className=\"mb-4 text-xs p-3 bg-gray-100 rounded border border-gray-300\">\n      <h3 className=\"font-bold mb-2\">Search Debug Panel</h3>\n      \n      <div className=\"grid grid-cols-2 gap-x-4 gap-y-1 mb-3\">\n        <div>Original Location: <span className=\"font-medium\">{searchDetails.originalLocation}</span></div>\n        <div>Formatted Location: <span className=\"font-medium\">{searchDetails.formattedLocation}</span></div>\n        <div>Is Outcode: <span className=\"font-medium\">{searchDetails.isOutcode ? 'Yes' : 'No'}</span></div>\n        <div>Properties Found: <span className=\"font-medium\">{properties.length}</span></div>\n        <div>Search Duration: <span className=\"font-medium\">{searchDetails.searchDurationMs?.toFixed(2) || 'N/A'} ms</span></div>\n      </div>\n      \n      <h4 className=\"font-bold mt-3 mb-1\">Property Statistics:</h4>\n      <div className=\"grid grid-cols-2 gap-x-4 gap-y-1 mb-3\">\n        <div>Valid Prices: <span className={`font-medium ${validPricesCount === 0 ? 'text-red-600' : ''}`}>\n          {validPricesCount} / {properties.length}\n        </span></div>\n        <div>Zero Prices: <span className={`font-medium ${zeroPriceCount > 0 ? 'text-red-600' : ''}`}>\n          {zeroPriceCount}\n        </span></div>\n        <div>Missing Addresses: <span className={`font-medium ${missingAddressCount > 0 ? 'text-red-600' : ''}`}>\n          {missingAddressCount}\n        </span></div>\n        <div>Min Price: <span className=\"font-medium\">{formatCurrency(minPrice)}</span></div>\n        <div>Max Price: <span className=\"font-medium\">{formatCurrency(maxPrice)}</span></div>\n        <div>Avg Price: <span className=\"font-medium\">{formatCurrency(avgPrice)}</span></div>\n      </div>\n      \n      {firstProperty && (\n        <>\n          <h4 className=\"font-bold mt-3 mb-1\">First Property Data:</h4>\n          <div className=\"bg-gray-200 p-2 rounded overflow-auto max-h-60\">\n            <pre className=\"text-xs\">{JSON.stringify({\n              id: firstProperty.id,\n              address: firstProperty.address,\n              price: typeof firstProperty.price === 'number' \n                ? firstProperty.price.toString() \n                : firstProperty.price,\n              formattedPrice: formatCurrency(firstProperty.price),\n              agent: firstProperty.agent\n            }, null, 2)}</pre>\n          </div>\n          \n          <h4 className=\"font-bold mt-3 mb-1\">Raw First Property Data (For Debugging):</h4>\n          <div className=\"bg-gray-200 p-2 rounded overflow-auto max-h-60\">\n            <pre className=\"text-xs\">{JSON.stringify(firstProperty, null, 2)}</pre>\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n\n// Add a memoized property card component for better performance\nconst MemoizedPropertyCard = React.memo(\n  ({ \n    property, \n    onSelect, \n    analyzingProperties, \n    propertyAnalysis \n  }: { \n    property: RightmoveProperty; \n    onSelect: (property: RightmoveProperty) => void;\n    analyzingProperties: string[];\n    propertyAnalysis: Record<string, PropertyInvestmentAnalysis>;\n  }) => {\n    // Safety check for property\n    if (!property || !property.id) {\n      console.error('Cannot render property card: Invalid property data', property);\n      return null;\n    }\n    \n    // Get from props now\n    const isAnalyzing = analyzingProperties.includes(property.id);\n    const analysis = propertyAnalysis[property.id];\n    \n    // Safe getters for investment metrics to avoid NaN values\n    const getMetric = (value: number | undefined | null): string => {\n      if (value === undefined || value === null || isNaN(value)) {\n        return 'N/A';\n      }\n      return value.toFixed(1) + '%';\n    };\n    \n    const getCashFlow = (value: number | undefined | null): string => {\n      if (value === undefined || value === null || isNaN(value)) {\n        return 'N/A';\n      }\n      return formatCurrency(value);\n    };\n\n    return (\n      <div className=\"bg-white rounded-lg shadow-md overflow-hidden hover:shadow-lg transition-shadow duration-300\">\n        <div className=\"aspect-video relative bg-gray-200\">\n          {property.main_image_url ? (\n            <img \n              src={property.main_image_url} \n              alt={property.address || 'Property'} \n              className=\"w-full h-full object-cover\"\n            />\n          ) : (\n            <div className=\"flex items-center justify-center h-full bg-gray-200\">\n              <span className=\"text-gray-400\">No Image Available</span>\n            </div>\n          )}\n          <div className=\"absolute top-0 right-0 bg-blue-600 text-white px-3 py-1 text-sm font-semibold\">\n            {formatCurrency(property.price || 0)}\n          </div>\n        </div>\n        \n        <div className=\"p-4\">\n          <h3 className=\"text-lg font-semibold mb-2 line-clamp-1\">\n            {property.address || 'Property Address Unavailable'}\n          </h3>\n          \n          <div className=\"flex justify-between mb-3\">\n            <div className=\"flex items-center\">\n              <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5 text-gray-500 mr-1\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                <path d=\"M10.707 2.293a1 1 0 00-1.414 0l-7 7a1 1 0 001.414 1.414L4 10.414V17a1 1 0 001 1h2a1 1 0 001-1v-2a1 1 0 011-1h2a1 1 0 011 1v2a1 1 0 001 1h2a1 1 0 001-1v-6.586l.293.293a1 1 0 001.414-1.414l-7-7z\" />\n              </svg>\n              <span>{property.property_type || 'Unknown'}</span>\n            </div>\n            <div className=\"flex items-center\">\n              <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5 text-gray-500 mr-1\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                <path d=\"M7 3a1 1 0 000 2h6a1 1 0 100-2H7zM4 7a1 1 0 011-1h10a1 1 0 110 2H5a1 1 0 01-1-1zM2 11a2 2 0 012-2h12a2 2 0 012 2v4a2 2 0 01-2 2H4a2 2 0 01-2-2v-4z\" />\n              </svg>\n              <span>{property.bedrooms || 0} beds</span>\n            </div>\n            <div className=\"flex items-center\">\n              <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5 text-gray-500 mr-1\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                <path fillRule=\"evenodd\" d=\"M5.5 2a3.5 3.5 0 00-3.495 3.334L2 5.5v9A3.5 3.5 0 005.5 18h9a3.5 3.5 0 003.5-3.5v-9A3.5 3.5 0 0014.5 2h-9zM4 5.5a1.5 1.5 0 011.5-1.5h9a1.5 1.5 0 011.5 1.5v9a1.5 1.5 0 01-1.5 1.5h-9A1.5 1.5 0 014 14.5v-9z\" clipRule=\"evenodd\" />\n              </svg>\n              <span>{property.bathrooms || 1} bath</span>\n            </div>\n          </div>\n          \n          {/* Investment analysis section */}\n          {analysis ? (\n            <div className=\"border-t pt-3 mt-2\">\n              <h4 className=\"text-sm font-semibold mb-2 text-blue-600\">Investment Highlights</h4>\n              <div className=\"grid grid-cols-2 gap-2 text-sm\">\n                <div>\n                  <span className=\"text-gray-500\">ROI:</span> <span className=\"font-medium\">{getMetric(analysis.estimatedROI)}</span>\n                </div>\n                <div>\n                  <span className=\"text-gray-500\">Yield:</span> <span className=\"font-medium\">{getMetric(analysis.estimatedRentalYield)}</span>\n                </div>\n                <div>\n                  <span className=\"text-gray-500\">Monthly:</span> <span className=\"font-medium\">{getCashFlow(analysis.estimatedCashFlow)}</span>\n                </div>\n                <div>\n                  <span className=\"text-gray-500\">Best Strategy:</span> <span className=\"font-medium\">\n                    {analysis.strategyRecommendations && analysis.strategyRecommendations.length > 0 \n                      ? analysis.strategyRecommendations[0].strategy \n                      : 'N/A'}\n                  </span>\n                </div>\n                <div className=\"col-span-2\">\n                  <span className=\"text-gray-500\">Area Growth:</span> <span className=\"font-medium\">{getMetric(analysis.areaGrowthPotential)}</span>\n                </div>\n              </div>\n            </div>\n          ) : isAnalyzing ? (\n            <div className=\"border-t pt-3 mt-2\">\n              <div className=\"flex items-center justify-center text-sm text-gray-500\">\n                <svg className=\"animate-spin -ml-1 mr-2 h-4 w-4 text-blue-500\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n                  <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\n                  <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n                </svg>\n                Analyzing investment potential...\n              </div>\n            </div>\n          ) : null}\n          \n          <button \n            onClick={() => onSelect(property)} \n            className=\"mt-3 w-full bg-blue-600 text-white py-2 rounded hover:bg-blue-700 transition-colors duration-300\"\n          >\n            View Details\n          </button>\n        </div>\n      </div>\n    );\n  }\n);\n\nexport default function Listings() {\n  const { toast } = useToast();\n  const [loading, setLoading] = React.useState(false);\n  const [properties, setProperties] = React.useState<RightmoveProperty[]>([]);\n  const [selectedProperty, setSelectedProperty] = React.useState<RightmoveProperty | null>(null);\n  const [selectedPropertySaleHistory, setSelectedPropertySaleHistory] = React.useState<PropertySaleHistory[]>([]);\n  const [selectedPropertyAreaInsights, setSelectedPropertyAreaInsights] = React.useState<AreaInsights | undefined>(undefined);\n  const [selectedPropertyAnalysis, setSelectedPropertyAnalysis] = React.useState<PropertyInvestmentAnalysis | null>(null);\n  const [location, setLocation] = React.useState(\"\");\n  const [minPrice, setMinPrice] = React.useState(\"\");\n  const [maxPrice, setMaxPrice] = React.useState(\"\");\n  const [minBeds, setMinBeds] = React.useState(\"\");\n  const [maxBeds, setMaxBeds] = React.useState(\"\");\n  const [propertyType, setPropertyType] = React.useState(\"\");\n  const [page, setPage] = React.useState(1);\n  const [totalPages, setTotalPages] = React.useState(1);\n  const [totalResults, setTotalResults] = React.useState(0);\n  const [viewMode, setViewMode] = React.useState<\"grid\" | \"list\">(\"grid\");\n  const [isMockData, setIsMockData] = React.useState<boolean>(false);\n  const [initializing, setInitializing] = React.useState(false);\n  const [isTableReady, setIsTableReady] = React.useState(false);\n  const [dbDiagnostics, setDbDiagnostics] = React.useState<any>(null);\n  const [runningDiagnostics, setRunningDiagnostics] = React.useState(false);\n  const [scraperError, setScraperError] = React.useState<string | null>(null);\n  const [directPropertyId, setDirectPropertyId] = React.useState<string>(\"\");\n  const [isDirectPropertyLoading, setIsDirectPropertyLoading] = React.useState(false);\n  const [apiKeyInvalid, setApiKeyInvalid] = React.useState<boolean>(false);\n  const [showDebugPanel, setShowDebugPanel] = React.useState(false);\n  const [searchDetails, setSearchDetails] = React.useState<SearchDetails | null>(null);\n  const [propertyAnalysis, setPropertyAnalysis] = React.useState<Record<string, PropertyInvestmentAnalysis>>({});\n  const [analyzingProperties, setAnalyzingProperties] = React.useState<string[]>([]);\n  // Add error state\n  const [searchError, setSearchError] = React.useState<string | null>(null);\n\n  const displayProperties = properties;\n\n  const mockSaleHistory = (propertyId: string): PropertySaleHistory[] => {\n    const baseDate = new Date();\n    baseDate.setFullYear(baseDate.getFullYear() - 15);\n    \n    const numSales = 2 + Math.floor(Math.random() * 3);\n    const result: PropertySaleHistory[] = [];\n    \n    let currentDate = new Date(baseDate);\n    let currentPrice = 100000 + Math.floor(Math.random() * 150000);\n    \n    for (let i = 0; i < numSales; i++) {\n      result.push({\n        date: currentDate.toISOString().split('T')[0],\n        price: currentPrice\n      });\n      \n      const yearsToAdd = 2 + Math.floor(Math.random() * 4);\n      currentDate = new Date(currentDate.setFullYear(currentDate.getFullYear() + yearsToAdd));\n      \n      const increase = 0.1 + Math.random() * 0.2;\n      currentPrice = Math.floor(currentPrice * (1 + increase));\n    }\n    \n    return result;\n  };\n\n  const mockAreaInsights = (postcode: string): AreaInsights => {\n    return {\n      postcode,\n      averagePrice: 250000 + Math.floor(Math.random() * 500000),\n      priceGrowth1Year: 2 + Math.random() * 8,\n      priceGrowth5Years: 10 + Math.random() * 30,\n      crimeRate: 30 + Math.random() * 40,\n      schoolsRating: 5 + Math.random() * 5,\n      transportRating: 4 + Math.random() * 6\n    };\n  };\n\n  // Memoize the handleSearch function to prevent it from changing on every render\n  const handleSearch = React.useCallback(async (searchLocation: string) => {\n    if (!searchLocation.trim()) {\n      setSearchError('Please enter a location to search');\n      return;\n    }\n\n    // Reset states\n    setProperties([]);\n    setSearchError(null);\n    setLoading(true);\n    setSelectedProperty(null);\n    setPage(1);\n    \n    // Record the start time\n    const searchStartTime = Date.now();\n    \n    // Reset analytics state to prevent stale data\n    setPropertyAnalysis({});\n    setAnalyzingProperties([]);\n    \n    // Capture search start time for performance tracking\n    const startTime = Date.now();\n    \n    try {\n      console.log('Starting search for location:', searchLocation);\n      \n      // Create search info object for debugging\n      const searchInfo: SearchDetails = {\n        originalLocation: searchLocation,\n        formattedLocation: searchLocation,\n        isOutcode: /^[A-Z]{1,2}[0-9]{1,2}[A-Z]?$/i.test(searchLocation),\n        timestamp: new Date().toISOString(),\n      };\n      \n      // Add cache-busting parameter for development mode\n      if (import.meta.env.DEV && Math.random() > 0.5) {\n        const cacheBustLocation = `${searchLocation}?_bypass_cache=${Date.now()}`;\n        searchInfo.cacheBustLocation = cacheBustLocation;\n        searchLocation = cacheBustLocation;\n      }\n      \n      // Filter parameters\n      const searchParams = {\n        location: searchLocation,\n        limit: 100, // Set a reasonable limit for the API\n        minPrice: minPrice ? parseInt(minPrice) : undefined,\n        maxPrice: maxPrice ? parseInt(maxPrice) : undefined,\n        minBeds: minBeds ? parseInt(minBeds) : undefined,\n        maxBeds: maxBeds ? parseInt(maxBeds) : undefined,\n        propertyType: propertyType || undefined,\n      };\n      \n      console.log('Searching with parameters:', searchParams);\n      \n      // Execute search\n      const response = await searchRightmoveProperties(searchParams);\n      \n      console.log(`Search completed with ${response.properties.length} results`);\n      \n      // Validate response\n      if (!response || !Array.isArray(response.properties)) {\n        throw new Error('Invalid response structure from property search');\n      }\n      \n      // Calculate search duration\n      const endTime = Date.now();\n      const searchDurationMs = endTime - startTime;\n      \n      // Validate properties to check for data quality issues\n      let validCount = 0;\n      let zeroPriceCount = 0;\n      let missingAddressCount = 0;\n      \n      response.properties.forEach(property => {\n        if (!property.price || property.price === 0) zeroPriceCount++;\n        if (!property.address) missingAddressCount++;\n        if (property.price > 0 && property.address) validCount++;\n      });\n      \n      // Update search info with stats\n      searchInfo.searchDurationMs = searchDurationMs;\n      searchInfo.propertiesFound = response.properties.length;\n      searchInfo.zeroPriceCount = zeroPriceCount;\n      searchInfo.missingAddressCount = missingAddressCount;\n      \n      setSearchDetails(searchInfo);\n      setProperties(response.properties);\n      setTotalPages(response.totalPages || 1);\n      \n      // Log data quality issues for debugging\n      if (zeroPriceCount > 0 || missingAddressCount > 0) {\n        console.warn(`Data quality issues: ${zeroPriceCount} properties with zero price, ${missingAddressCount} properties with missing address`);\n      }\n      \n      // For development, automatically analyze first few properties\n      if (import.meta.env.DEV && response.properties.length > 0) {\n        analyzePropertiesInBatches(response.properties, 3, 2000);\n      }\n    } catch (error) {\n      console.error('Error during property search:', error);\n      setSearchError(`Failed to search properties: ${error instanceof Error ? error.message : 'Unknown error'}`);\n      // Show user-friendly toast\n      toast({\n        title: \"Search Error\",\n        description: error instanceof Error ? error.message : \"An unexpected error occurred during search\",\n        variant: \"destructive\",\n      });\n    } finally {\n      // Ensure the loading state stays visible for at least 1 second to avoid flickering\n      const searchDuration = Date.now() - searchStartTime;\n      const minimumLoadingTime = 1000; // 1 second\n      \n      if (searchDuration < minimumLoadingTime) {\n        setTimeout(() => {\n          setLoading(false);\n        }, minimumLoadingTime - searchDuration);\n      } else {\n        setLoading(false);\n      }\n    }\n  }, [minPrice, maxPrice, minBeds, maxBeds, propertyType, toast]);\n\n  // Update the useEffect to use proper dependencies\n  React.useEffect(() => {\n    if (page > 1 && location) {\n      handleSearch(location);\n    }\n  }, [page, location, handleSearch]);\n  \n  // Simplified Hero search function\n  const handleHeroSearch = React.useCallback((searchTerm: string) => {\n    setLocation(searchTerm);\n    if (searchTerm) {\n      handleSearch(searchTerm);\n    }\n  }, [handleSearch]);\n\n  // Check if the scraper_cache table exists on component mount\n  React.useEffect(() => {\n    const checkTable = async () => {\n      const exists = await ensureScraperCacheTableExists();\n      setIsTableReady(exists);\n    };\n    \n    checkTable();\n  }, []);\n\n  // Function to manually initialize the scraper_cache table\n  const initializeScraper = async () => {\n    setInitializing(true);\n    try {\n      const success = await ensureScraperCacheTableExists();\n      setIsTableReady(success);\n      \n      if (success) {\n            toast({\n          title: \"Setup complete\",\n          description: \"The scraper_cache table has been set up successfully\",\n              variant: \"default\",\n            });\n      } else {\n          toast({\n          title: \"Setup failed\",\n          description: \"Failed to set up the scraper_cache table. Check console for details.\",\n            variant: \"destructive\",\n          });\n        }\n    } catch (error) {\n      console.error(\"Error initializing scraper:\", error);\n      toast({\n        title: \"Setup error\",\n        description: \"An error occurred while setting up the scraper\",\n        variant: \"destructive\",\n      });\n    } finally {\n      setInitializing(false);\n    }\n  };\n\n  const runDatabaseDiagnostics = async () => {\n    setRunningDiagnostics(true);\n    try {\n      // Test the connection\n      const connectionTest = await testSupabaseConnection();\n      console.log(\"Supabase connection test:\", connectionTest);\n      \n      // Direct test for table existence - simple count query\n      let directTableTest: { exists: boolean; error: string | null; count: number } = { \n        exists: false, \n        error: null, \n        count: 0 \n      };\n      \n      try {\n        const { data, error, count } = await supabase\n          .from('scraper_cache')\n          .select('*', { count: 'exact', head: true });\n          \n        directTableTest = { \n          exists: !error, \n          error: error ? `${error.code}: ${error.message}` : null,\n          count: count || 0\n        };\n        \n        console.log(\"Direct table check:\", directTableTest);\n      } catch (e) {\n        console.error(\"Error in direct table check:\", e);\n        directTableTest.error = e instanceof Error ? e.message : String(e);\n      }\n      \n      // Test insertion capability if the table exists\n      let insertTest: { success: boolean; error: string | null } = { \n        success: false, \n        error: null \n      };\n      \n      if (directTableTest.exists) {\n        try {\n          const testKey = `diagnostic-test-${Date.now()}`;\n          const { error } = await supabase\n            .from('scraper_cache')\n            .insert({ \n              key: testKey, \n              data: { test: 'diagnostics' },\n              created_at: new Date().toISOString()\n            });\n            \n          insertTest = { \n            success: !error, \n            error: error ? `${error.code}: ${error.message}` : null \n          };\n          \n          console.log(\"Insert test:\", insertTest);\n          \n          // Clean up the test entry\n          if (!error) {\n            await supabase\n              .from('scraper_cache')\n              .delete()\n              .eq('key', testKey);\n          }\n        } catch (e) {\n          console.error(\"Error in insert test:\", e);\n          insertTest.error = e instanceof Error ? e.message : String(e);\n        }\n      }\n      \n      // Test table existence using our helper function\n      const tableExists = await ensureScraperCacheTableExists();\n      console.log(\"Helper function check result:\", tableExists);\n      \n      // Store diagnostics results\n      setDbDiagnostics({\n        connectionTest,\n        tableExists,\n        directTableTest,\n        insertTest,\n        timestamp: new Date().toISOString(),\n        env: {\n          mockData: import.meta.env.VITE_USE_MOCK_DATA,\n          nodeEnv: import.meta.env.NODE_ENV,\n          mode: import.meta.env.MODE\n        }\n      });\n      \n      // Show results to user\n      if (directTableTest.exists && insertTest.success) {\n        toast({\n          title: \"Database Ready\",\n          description: \"Your scraper_cache table exists and is working correctly!\",\n          variant: \"default\",\n        });\n      } else if (directTableTest.exists && !insertTest.success) {\n        toast({\n          title: \"Table Exists But Can't Insert\",\n          description: \"The table exists but we can't write to it. Check RLS policies.\",\n          variant: \"warning\",\n        });\n    } else {\n        toast({\n          title: connectionTest.success ? \"Table Missing\" : \"Connection Issues\",\n          description: connectionTest.success \n            ? \"The scraper_cache table doesn't exist or isn't accessible.\"\n            : connectionTest.message,\n          variant: \"destructive\",\n        });\n      }\n    } catch (error) {\n      console.error(\"Error running diagnostics:\", error);\n      setDbDiagnostics({\n        error: error instanceof Error ? error.message : \"Unknown error\",\n        timestamp: new Date().toISOString()\n      });\n      \n      toast({\n        title: \"Diagnostics Error\",\n        description: \"Failed to run database diagnostics. See console for details.\",\n        variant: \"destructive\",\n      });\n    } finally {\n      setRunningDiagnostics(false);\n    }\n  };\n\n  // Add a function to get or generate property analysis\n  const getPropertyAnalysis = async (property: RightmoveProperty) => {\n    if (!property || !property.id) {\n      console.error('Cannot analyze property: Invalid property data', property);\n      return null;\n    }\n    \n    // Check if we already have analysis for this property\n    if (propertyAnalysis[property.id]) {\n      console.log(`Using cached analysis for property ${property.id}`);\n      return propertyAnalysis[property.id];\n    }\n    \n    // Mark property as being analyzed\n    setAnalyzingProperties(prev => [...prev, property.id]);\n    \n    try {\n      // Get investment analysis for this property\n      console.log(`Analyzing property ${property.id}...`);\n      const analysis = await analyzePropertyInvestment(property);\n      \n      // Save the analysis\n      setPropertyAnalysis(prev => ({\n        ...prev,\n        [property.id]: analysis\n      }));\n      \n      return analysis;\n    } catch (error) {\n      console.error(`Error analyzing property ${property.id}:`, error);\n      return null;\n    } finally {\n      // Remove property from analyzing state\n      setAnalyzingProperties(prev => prev.filter(id => id !== property.id));\n    }\n  };\n\n  // Modify the function that handles property selection\n  const handlePropertySelect = async (property: RightmoveProperty) => {\n    if (!property || !property.id) {\n      console.error('Cannot select property: Invalid property data', property);\n      return;\n    }\n    \n    try {\n      // Get mock data for sale history and area insights\n      const saleHistory = mockSaleHistory(property.id);\n      const areaInsights = mockAreaInsights(property.postcode || '');\n      \n      // Get or fetch investment analysis\n      const analysis = await getPropertyAnalysis(property);\n      \n      // Set selected property with all data\n      setSelectedProperty(property);\n      setSelectedPropertySaleHistory(saleHistory);\n      setSelectedPropertyAreaInsights(areaInsights);\n      setSelectedPropertyAnalysis(analysis);\n    } catch (error) {\n      console.error('Error selecting property:', error);\n      // Just set basic property data in case of error\n      setSelectedProperty(property);\n      setSelectedPropertySaleHistory([]);\n      setSelectedPropertyAreaInsights(undefined);\n      setSelectedPropertyAnalysis(null);\n    }\n  };\n\n  // Update the useEffect that triggers property analysis to use the new batch function\n  React.useEffect(() => {\n    if (properties.length > 0) {\n      analyzePropertiesInBatches(properties);\n    }\n  }, [properties]);\n\n  // Add this function after the getPropertyAnalysis function\n  const analyzePropertiesInBatches = (properties: RightmoveProperty[], batchSize = 3, delayMs = 2000) => {\n    if (!properties || properties.length === 0) return;\n    \n    console.log(`Starting batch analysis of ${properties.length} properties`);\n    \n    // Analyze first batch immediately\n    const firstBatch = properties.slice(0, batchSize);\n    firstBatch.forEach(property => getPropertyAnalysis(property));\n    \n    // Process remaining properties in batches with delay\n    if (properties.length > batchSize) {\n      let currentBatch = 1;\n      const totalBatches = Math.ceil((properties.length - batchSize) / batchSize);\n      \n      const processNextBatch = () => {\n        if (currentBatch <= totalBatches) {\n          const startIdx = currentBatch * batchSize;\n          const endIdx = Math.min(startIdx + batchSize, properties.length);\n          const batch = properties.slice(startIdx, endIdx);\n          \n          console.log(`Processing batch ${currentBatch}/${totalBatches} (${batch.length} properties)`);\n          \n          batch.forEach((property, idx) => {\n            // Stagger the analysis within each batch to avoid overwhelming the API\n            setTimeout(() => getPropertyAnalysis(property), idx * 500);\n          });\n          \n          currentBatch++;\n          setTimeout(processNextBatch, delayMs);\n        }\n      };\n      \n      // Start processing batches after initial delay\n      setTimeout(processNextBatch, delayMs);\n    }\n  };\n\n  // Add a function to search by direct property ID\n  const handleDirectPropertySearch = async () => {\n    if (!directPropertyId || directPropertyId.trim() === '') {\n      toast({\n        title: \"Property ID required\",\n        description: \"Please enter a Rightmove property ID\",\n        variant: \"destructive\",\n      });\n      return;\n    }\n    \n    setIsDirectPropertyLoading(true);\n    setProperties([]);\n    setIsMockData(false);\n    setScraperError(null);\n    setApiKeyInvalid(false);\n    \n    try {\n      toast({\n        title: \"Fetching property details\",\n        description: \"This may take up to 30 seconds as we fetch data from Rightmove\",\n        variant: \"default\",\n      });\n      \n      // Get the property details\n      const property = await getPropertyDetails(directPropertyId.trim());\n      \n      if (property) {\n        setProperties([property]);\n        setTotalPages(1);\n        \n        toast({\n          title: \"Property Found\",\n          description: \"Successfully loaded the property details\",\n          variant: \"default\",\n        });\n      } else {\n        toast({\n          title: \"Property Not Found\",\n          description: \"No details found for that property ID\",\n          variant: \"destructive\",\n        });\n      }\n    } catch (error) {\n      console.error(\"Error fetching property:\", error);\n      const errorMessage = error instanceof Error ? error.message : String(error);\n      \n      // Detailed error handling for Apify\n      if (errorMessage.includes('Apify token validation failed')) {\n        setApiKeyInvalid(true);\n        toast({\n          title: \"Apify Token Invalid\",\n          description: \"Your Apify API token appears to be invalid. Please check your settings.\",\n          variant: \"destructive\",\n        });\n      } else if (errorMessage.includes('actor run failed')) {\n        setScraperError(`Apify scraper failed: ${errorMessage}`);\n        toast({\n          title: \"Scraper Failed\",\n          description: \"The Rightmove scraper encountered an error. Please try again later.\",\n          variant: \"destructive\",\n        });\n      } else {\n        setScraperError(errorMessage);\n        toast({\n          title: \"Property Search Failed\",\n          description: errorMessage,\n          variant: \"destructive\",\n        });\n      }\n    } finally {\n      setIsDirectPropertyLoading(false);\n    }\n  };\n\n  return (\n    <Layout>\n      <style dangerouslySetInnerHTML={{ __html: animationStyles }} />\n      <HeroSection \n        title=\"Find Your Perfect Investment Property\"\n        subtitle=\"Search thousands of properties to discover your next investment opportunity\"\n        onSearch={handleHeroSearch}\n        showSearch={true}\n        height=\"h-[400px]\"\n      />\n      \n      <div className=\"container mx-auto p-4 -mt-12 relative z-10\">\n        {!isTableReady && (\n          <div className=\"mb-4 rounded-md bg-red-50 p-4 text-red-800 border border-red-200\">\n            <h3 className=\"font-medium mb-2\">Database Setup Required</h3>\n            <p className=\"mb-3\">\n              The scraper_cache table is not set up in your Supabase database. This is needed to cache property data.\n            </p>\n            <div className=\"flex flex-wrap gap-2\">\n              <Button\n                onClick={initializeScraper} \n                disabled={initializing || runningDiagnostics} \n                variant=\"destructive\"\n              >\n                {initializing ? <LoadingSpinner size=\"sm\" /> : \"Initialize Database\"}\n              </Button>\n              \n              <Button\n                onClick={runDatabaseDiagnostics}\n                disabled={runningDiagnostics || initializing}\n                variant=\"outline\"\n              >\n                {runningDiagnostics ? <LoadingSpinner size=\"sm\" /> : \"Run Diagnostics\"}\n              </Button>\n            </div>\n            \n            {dbDiagnostics && (\n              <div className=\"mt-4 p-3 bg-white rounded border text-xs font-mono text-black overflow-auto max-h-40\">\n                <pre>{JSON.stringify(dbDiagnostics, null, 2)}</pre>\n              </div>\n            )}\n            \n            <div className=\"mt-4 text-sm\">\n              <p className=\"font-semibold\">Manual Setup Instructions:</p>\n              <ol className=\"list-decimal ml-5 mt-1 space-y-1\">\n                <li>Go to your Supabase dashboard</li>\n                <li>Navigate to the \"SQL Editor\" section</li>\n                <li>Create a new query</li>\n                <li>Copy and paste the SQL from <code>src/lib/migrations/fix_scraper_cache.sql</code></li>\n                <li>Run the query</li>\n                <li>Return to this page and refresh</li>\n              </ol>\n            </div>\n          </div>\n        )}\n        \n        <div className=\"mb-4\">\n          <EnvironmentDebug />\n        </div>\n        \n        {apiKeyInvalid && (\n          <div className=\"mb-4 rounded-md bg-red-50 p-4 text-red-800 border-2 border-red-300 shadow-md\">\n            <h3 className=\"font-bold text-lg mb-3\">Invalid Apify API Token</h3>\n            \n            <div className=\"flex items-start\">\n              <div className=\"flex-shrink-0 mt-0.5\">\n                <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5 text-red-600\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                  <path fillRule=\"evenodd\" d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z\" clipRule=\"evenodd\" />\n                </svg>\n              </div>\n              <div className=\"ml-3\">\n                <p className=\"text-md\">\n                  The application cannot connect to the Apify API with the current token. Property searches require a valid Apify token.\n                </p>\n              </div>\n            </div>\n            \n            <div className=\"mt-4 bg-white p-4 rounded-md border border-red-200\">\n              <h4 className=\"font-bold mb-2\">How to Fix This Issue:</h4>\n              <ol className=\"list-decimal ml-5 space-y-2\">\n                <li>\n                  <span className=\"font-medium\">Verify your Apify token</span>: \n                  Check that you're using the correct token from your Apify account.\n                </li>\n                <li>\n                  <span className=\"font-medium\">Add it to your .env.local file</span>: \n                  <code className=\"bg-gray-100 px-1 py-0.5 rounded ml-1\">VITE_APIFY_API_TOKEN=your_token_here</code>\n                </li>\n                <li>\n                  <span className=\"font-medium\">Restart your dev server</span>: Using <code className=\"bg-gray-100 px-1 py-0.5 rounded\">npm run dev</code> or <code className=\"bg-gray-100 px-1 py-0.5 rounded\">yarn dev</code>\n                </li>\n              </ol>\n            </div>\n            \n            <div className=\"mt-4 p-3 bg-yellow-50 text-yellow-800 border border-yellow-200 rounded-md\">\n              <h4 className=\"font-bold\">About Apify</h4>\n              <p className=\"mt-1\">\n                This application uses Apify's Rightmove Scraper to fetch property data from Rightmove. You need a valid Apify account and API token to use this feature.\n              </p>\n            </div>\n          </div>\n        )}\n        \n        {scraperError && scraperError.includes('Failed to fetch') && (\n          <div className=\"mb-4 rounded-md bg-red-50 p-4 text-red-800 border-2 border-red-300 shadow-md\">\n            <h3 className=\"font-bold text-lg mb-3\">Network Connection Error</h3>\n            \n            <div className=\"flex items-start\">\n              <div className=\"flex-shrink-0 mt-0.5\">\n                <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5 text-red-600\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                  <path fillRule=\"evenodd\" d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z\" clipRule=\"evenodd\" />\n                </svg>\n              </div>\n              <div className=\"ml-3\">\n                <p className=\"text-md\">\n                  The application failed to connect to the Apify API. This is typically a network connectivity issue.\n                </p>\n              </div>\n            </div>\n            \n            <div className=\"mt-4 bg-white p-4 rounded-md border border-red-200\">\n              <h4 className=\"font-bold mb-2\">How to Fix This Issue:</h4>\n              <ol className=\"list-decimal ml-5 space-y-2\">\n                <li>\n                  <span className=\"font-medium\">Check your internet connection</span>: \n                  Ensure you have a stable internet connection.\n                </li>\n                <li>\n                  <span className=\"font-medium\">Check your firewall settings</span>: \n                  Your firewall might be blocking connections to api.apify.com.\n                </li>\n                <li>\n                  <span className=\"font-medium\">Try using a direct property search</span>: \n                  If you have a specific property ID, try using the direct search below.\n                </li>\n                <li>\n                  <span className=\"font-medium\">Use the Rightmove Scraper Test</span>: \n                  Expand the Environment Debug panel and use the \"Test Rightmove Scraper\" button to check if the API is accessible.\n                </li>\n              </ol>\n            </div>\n\n            <div className=\"mt-4 p-3 bg-blue-50 text-blue-800 border border-blue-200 rounded-md\">\n              <h4 className=\"font-bold mb-2\">Try Direct Property ID Search</h4>\n              <p className=\"mb-2 text-sm\">\n                Search for a specific property by ID:\n              </p>\n              <div className=\"flex gap-2 items-center mt-2\">\n                <Input\n                  placeholder=\"Enter Rightmove property ID (e.g. 150455012)\"\n                  value={directPropertyId}\n                  onChange={(e) => setDirectPropertyId(e.target.value)}\n                  className=\"max-w-xs\"\n                />\n                <Button\n                  onClick={handleDirectPropertySearch} \n                  disabled={isDirectPropertyLoading}\n                  variant=\"default\"\n                  size=\"sm\"\n                >\n                  {isDirectPropertyLoading ? <LoadingSpinner size=\"sm\" /> : \"Search Property\"}\n                </Button>\n              </div>\n              <p className=\"mt-2 text-xs\">\n                The property ID is the number in the Rightmove URL after \"/properties/\". \n                Example: https://www.rightmove.co.uk/properties/<strong>150455012</strong>\n              </p>\n            </div>\n          </div>\n        )}\n        \n        {showDebugPanel && import.meta.env.DEV && searchDetails && (\n          <SearchDebugPanel searchDetails={searchDetails} properties={properties} />\n        )}\n        \n        <div className=\"mb-6 flex flex-wrap gap-4 rounded-lg bg-white p-6 shadow-md\">\n          <div className=\"w-full md:w-64\">\n            <label className=\"mb-2 block font-medium\" htmlFor=\"location\">\n              Location\n            </label>\n            <Input\n              id=\"location\"\n              type=\"text\"\n              placeholder=\"e.g. London, Manchester, B16\"\n              value={location}\n              onChange={(e) => setLocation(e.target.value)}\n              className=\"w-full\"\n            />\n          </div>\n\n          {/* Add debug mode toggle only in development */}\n          {import.meta.env.DEV && (\n            <div className=\"w-full flex justify-end mb-2\">\n              <Button \n                variant=\"outline\" \n                size=\"sm\" \n                onClick={() => setShowDebugPanel(!showDebugPanel)}\n                className=\"text-xs\"\n              >\n                {showDebugPanel ? \"Hide Debug Panel\" : \"Show Debug Panel\"}\n              </Button>\n            </div>\n          )}\n\n          <div className=\"w-full sm:w-1/2 md:w-32\">\n            <label className=\"mb-2 block font-medium\" htmlFor=\"minPrice\">\n              Min Price\n            </label>\n            <Input\n              id=\"minPrice\"\n              type=\"number\"\n              placeholder=\"Min £\"\n              value={minPrice}\n              onChange={(e) => setMinPrice(e.target.value)}\n              className=\"w-full\"\n            />\n          </div>\n          \n          <div className=\"w-full sm:w-1/2 md:w-32\">\n            <label className=\"mb-2 block font-medium\" htmlFor=\"maxPrice\">\n              Max Price\n            </label>\n            <Input\n              id=\"maxPrice\"\n              type=\"number\"\n              placeholder=\"Max £\"\n              value={maxPrice}\n              onChange={(e) => setMaxPrice(e.target.value)}\n              className=\"w-full\"\n            />\n          </div>\n\n          <div className=\"w-full sm:w-1/2 md:w-32\">\n            <label className=\"mb-2 block font-medium\" htmlFor=\"minBeds\">\n              Min Beds\n            </label>\n            <Input\n              id=\"minBeds\"\n              type=\"number\"\n              placeholder=\"Min\"\n              value={minBeds}\n              onChange={(e) => setMinBeds(e.target.value)}\n              className=\"w-full\"\n            />\n          </div>\n          \n          <div className=\"w-full sm:w-1/2 md:w-32\">\n            <label className=\"mb-2 block font-medium\" htmlFor=\"maxBeds\">\n              Max Beds\n            </label>\n            <Input\n              id=\"maxBeds\"\n              type=\"number\"\n              placeholder=\"Max\"\n              value={maxBeds}\n              onChange={(e) => setMaxBeds(e.target.value)}\n              className=\"w-full\"\n            />\n          </div>\n          \n          <div className=\"w-full md:w-32\">\n            <label className=\"mb-2 block font-medium\" htmlFor=\"propertyType\">\n              Property Type\n            </label>\n            <select\n              id=\"propertyType\"\n              value={propertyType}\n              onChange={(e) => setPropertyType(e.target.value)}\n              className=\"w-full rounded-md border border-gray-300 px-3 py-2\"\n            >\n              <option value=\"\">Any</option>\n              <option value=\"detached\">Detached</option>\n              <option value=\"semi-detached\">Semi-Detached</option>\n              <option value=\"terraced\">Terraced</option>\n              <option value=\"flat\">Flat</option>\n              <option value=\"bungalow\">Bungalow</option>\n            </select>\n          </div>\n          \n          <div className=\"flex w-full items-end md:w-auto\">\n            <Button \n              onClick={() => {\n                if (!loading) {\n                  handleSearch(location);\n                }\n              }} \n              disabled={loading} \n              className=\"w-full md:w-auto\"\n            >\n              {loading ? (\n                <div className=\"flex items-center\">\n                  <LoadingSpinner size=\"sm\" />\n                  <span className=\"ml-2\">Searching...</span>\n                </div>\n              ) : \"Search\"}\n            </Button>\n          </div>\n        </div>\n        \n        {isMockData && (\n          <div className=\"mb-4 rounded-md bg-amber-50 p-4 text-amber-800 border border-amber-200\">\n            <h3 className=\"font-bold mb-2\">Using Mock Data</h3>\n            <p className=\"flex items-center mb-2\">\n              <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"mr-2 h-5 w-5\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                <path fillRule=\"evenodd\" d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z\" clipRule=\"evenodd\" />\n              </svg>\n              Mock data is being displayed instead of real Rightmove properties. \n            </p>\n            \n            <EnvironmentDebug />\n            \n            <div className=\"text-sm mt-3\">\n              <p className=\"font-semibold mb-1\">Possible reasons:</p>\n              <ul className=\"list-disc pl-5\">\n                <li className={import.meta.env.VITE_USE_MOCK_DATA === 'true' ? 'font-bold' : ''}>\n                  Environment variable VITE_USE_MOCK_DATA is set to 'true' \n                  {import.meta.env.VITE_USE_MOCK_DATA === 'true' && \" ✓\"}\n                </li>\n                <li className={!isTableReady ? 'font-bold' : ''}>\n                  The scraper_cache table is not properly set up\n                  {!isTableReady && \" ✓\"}\n                </li>\n                <li>The Rightmove scraper encountered an error fetching property data</li>\n                <li>Network connectivity issues accessing Rightmove</li>\n              </ul>\n            </div>\n            \n            <div className=\"mt-3 flex gap-2\">\n              <Button variant=\"outline\" size=\"sm\" onClick={runDatabaseDiagnostics} disabled={runningDiagnostics}>\n                {runningDiagnostics ? <LoadingSpinner size=\"sm\" /> : \"Run Diagnostics\"}\n              </Button>\n              <Button variant=\"outline\" size=\"sm\" onClick={initializeScraper} disabled={initializing}>\n                {initializing ? <LoadingSpinner size=\"sm\" /> : \"Initialize Database\"}\n              </Button>\n            </div>\n          </div>\n        )}\n        \n        {searchError && (\n          <div className=\"bg-red-50 border border-red-200 text-red-800 px-4 py-3 rounded-md mb-4\">\n            <div className=\"flex items-start\">\n              <div className=\"flex-shrink-0 mt-0.5\">\n                <svg className=\"h-5 w-5 text-red-600\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                  <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z\" clipRule=\"evenodd\" />\n                </svg>\n              </div>\n              <div className=\"ml-3\">\n                <h3 className=\"text-sm font-medium\">Search Error</h3>\n                <p className=\"mt-1 text-sm\">{searchError}</p>\n              </div>\n            </div>\n          </div>\n        )}\n        \n        {loading ? (\n          <div className=\"flex flex-col items-center justify-center py-12 min-h-[200px] bg-white rounded-lg shadow-md animate-fadein\">\n            <div className=\"animate-spin h-12 w-12 border-b-2 border-blue-600 rounded-full mb-4\"></div>\n            <p className=\"text-gray-600 font-medium\">Searching properties in {location}...</p>\n            <p className=\"text-sm text-gray-500 mt-2\">This may take 15-30 seconds</p>\n            <div className=\"mt-4 w-64 bg-gray-200 rounded-full h-2.5\">\n              <div className=\"bg-blue-600 h-2.5 rounded-full animate-pulse\" style={{ width: '70%' }}></div>\n            </div>\n          </div>\n        ) : properties.length > 0 ? (\n          <React.Fragment>\n            {/* Wrap in try-catch to prevent white screen */}\n            {(() => {\n              try {\n                return (\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n                    {properties.map((property) => (\n                      <div key={property.id || Math.random().toString()}>\n                        <MemoizedPropertyCard \n                          property={property}\n                          onSelect={handlePropertySelect}\n                          analyzingProperties={analyzingProperties}\n                          propertyAnalysis={propertyAnalysis}\n                        />\n                      </div>\n                    ))}\n                  </div>\n                );\n              } catch (error) {\n                console.error('Error rendering property grid:', error);\n                return (\n                  <div className=\"bg-red-50 border border-red-200 text-red-800 px-4 py-3 rounded-md\">\n                    <h3 className=\"font-bold\">Error Displaying Properties</h3>\n                    <p className=\"mt-2\">There was an error displaying the property results. Please try refreshing the page.</p>\n                    <details className=\"mt-2\">\n                      <summary className=\"cursor-pointer text-sm\">Error details</summary>\n                      <pre className=\"mt-2 text-xs p-2 bg-red-100 rounded\">\n                        {error instanceof Error ? error.message : String(error)}\n                      </pre>\n                    </details>\n                  </div>\n                );\n              }\n            })()}\n          </React.Fragment>\n        ) : !searchError && location ? (\n          <div className=\"bg-white rounded-lg shadow-md p-8 text-center\">\n            <svg\n              className=\"mx-auto h-12 w-12 text-gray-400\"\n              fill=\"none\"\n              viewBox=\"0 0 24 24\"\n              stroke=\"currentColor\"\n              aria-hidden=\"true\"\n            >\n              <path\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                strokeWidth=\"2\"\n                d=\"M9.172 16.172a4 4 0 015.656 0M9 10h.01M15 10h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"\n              />\n            </svg>\n            <h3 className=\"mt-2 text-lg font-medium text-gray-900\">No properties found</h3>\n            <p className=\"mt-1 text-sm text-gray-500\">\n              Try searching for a different location or adjusting your filters.\n            </p>\n          </div>\n        ) : null}\n      </div>\n      \n      {selectedProperty && (\n        <PropertyModal\n          property={selectedProperty}\n          onClose={() => setSelectedProperty(null)}\n          saleHistoryData={selectedPropertySaleHistory}\n          areaInsights={selectedPropertyAreaInsights}\n          investmentAnalysis={selectedPropertyAnalysis}\n        />\n      )}\n    </Layout>\n  );\n} ","import React, { useState } from 'react';\nimport { Card, CardContent, CardHeader, CardTitle } from \"../../components/ui/card\";\nimport { Input } from \"../../components/ui/input\";\nimport { Label } from \"../../components/ui/label\";\nimport { Slider } from \"../../components/ui/slider\";\nimport { Button } from \"../../components/ui/button\";\nimport { \n  CalculatorIcon, \n  PoundSterling,\n  Calendar,\n  Percent\n} from \"lucide-react\";\n\nconst MortgageCalculator = () => {\n  const [propertyValue, setPropertyValue] = useState(250000);\n  const [deposit, setDeposit] = useState(50000);\n  const [interestRate, setInterestRate] = useState(4.5);\n  const [mortgageTerm, setMortgageTerm] = useState(25);\n  const [monthlyPayment, setMonthlyPayment] = useState<number | null>(null);\n  const [totalRepayment, setTotalRepayment] = useState<number | null>(null);\n  const [totalInterest, setTotalInterest] = useState<number | null>(null);\n\n  const calculateMortgage = () => {\n    const loanAmount = propertyValue - deposit;\n    const monthlyInterestRate = interestRate / 100 / 12;\n    const numberOfPayments = mortgageTerm * 12;\n    \n    // Calculate monthly payment using the mortgage formula\n    const x = Math.pow(1 + monthlyInterestRate, numberOfPayments);\n    const monthly = (loanAmount * x * monthlyInterestRate) / (x - 1);\n    \n    const totalPaid = monthly * numberOfPayments;\n    const totalInterestPaid = totalPaid - loanAmount;\n    \n    setMonthlyPayment(monthly);\n    setTotalRepayment(totalPaid);\n    setTotalInterest(totalInterestPaid);\n  };\n\n  // Calculate loan to value ratio\n  const ltv = ((propertyValue - deposit) / propertyValue) * 100;\n\n  return (\n    <Card className=\"w-full\">\n      <CardHeader>\n        <CardTitle className=\"flex items-center text-xl font-semibold\">\n          <CalculatorIcon className=\"mr-2 h-5 w-5\" />\n          Mortgage Payment Calculator\n        </CardTitle>\n      </CardHeader>\n      <CardContent className=\"grid gap-6\">\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n          <div className=\"space-y-4\">\n            <div className=\"space-y-2\">\n              <div className=\"flex justify-between\">\n                <Label htmlFor=\"property-value\">Property Value</Label>\n                <span className=\"text-sm text-muted-foreground\">£{propertyValue.toLocaleString()}</span>\n              </div>\n              <div className=\"flex gap-2\">\n                <PoundSterling className=\"h-5 w-5 text-muted-foreground\" />\n                <Slider\n                  id=\"property-value\"\n                  min={50000}\n                  max={2000000}\n                  step={5000}\n                  defaultValue={[propertyValue]}\n                  onValueChange={(value) => setPropertyValue(value[0])}\n                />\n              </div>\n              <Input\n                type=\"number\"\n                value={propertyValue}\n                onChange={(e) => setPropertyValue(Number(e.target.value))}\n                className=\"mt-2\"\n              />\n            </div>\n            \n            <div className=\"space-y-2\">\n              <div className=\"flex justify-between\">\n                <Label htmlFor=\"deposit\">Deposit</Label>\n                <span className=\"text-sm text-muted-foreground\">£{deposit.toLocaleString()} ({ltv.toFixed(1)}% LTV)</span>\n              </div>\n              <div className=\"flex gap-2\">\n                <PoundSterling className=\"h-5 w-5 text-muted-foreground\" />\n                <Slider\n                  id=\"deposit\"\n                  min={0}\n                  max={propertyValue}\n                  step={5000}\n                  defaultValue={[deposit]}\n                  onValueChange={(value) => setDeposit(value[0])}\n                />\n              </div>\n              <Input\n                type=\"number\"\n                value={deposit}\n                onChange={(e) => setDeposit(Number(e.target.value))}\n                className=\"mt-2\"\n              />\n            </div>\n            \n            <div className=\"space-y-2\">\n              <div className=\"flex justify-between\">\n                <Label htmlFor=\"interest-rate\">Interest Rate</Label>\n                <span className=\"text-sm text-muted-foreground\">{interestRate}%</span>\n              </div>\n              <div className=\"flex gap-2\">\n                <Percent className=\"h-5 w-5 text-muted-foreground\" />\n                <Slider\n                  id=\"interest-rate\"\n                  min={0.1}\n                  max={15}\n                  step={0.1}\n                  defaultValue={[interestRate]}\n                  onValueChange={(value) => setInterestRate(value[0])}\n                />\n              </div>\n              <Input\n                type=\"number\"\n                value={interestRate}\n                onChange={(e) => setInterestRate(Number(e.target.value))}\n                className=\"mt-2\"\n                step={0.1}\n              />\n            </div>\n            \n            <div className=\"space-y-2\">\n              <div className=\"flex justify-between\">\n                <Label htmlFor=\"mortgage-term\">Mortgage Term</Label>\n                <span className=\"text-sm text-muted-foreground\">{mortgageTerm} years</span>\n              </div>\n              <div className=\"flex gap-2\">\n                <Calendar className=\"h-5 w-5 text-muted-foreground\" />\n                <Slider\n                  id=\"mortgage-term\"\n                  min={5}\n                  max={40}\n                  step={1}\n                  defaultValue={[mortgageTerm]}\n                  onValueChange={(value) => setMortgageTerm(value[0])}\n                />\n              </div>\n              <Input\n                type=\"number\"\n                value={mortgageTerm}\n                onChange={(e) => setMortgageTerm(Number(e.target.value))}\n                className=\"mt-2\"\n              />\n            </div>\n            \n            <Button \n              onClick={calculateMortgage} \n              className=\"w-full mt-4\"\n            >\n              Calculate\n            </Button>\n          </div>\n          \n          <div className=\"space-y-6\">\n            {monthlyPayment !== null && (\n              <div className=\"rounded-lg border p-6 shadow-sm\">\n                <h3 className=\"text-lg font-medium\">Mortgage Summary</h3>\n                \n                <div className=\"mt-4 space-y-4\">\n                  <div className=\"grid grid-cols-2 gap-2\">\n                    <div className=\"text-muted-foreground\">Loan Amount:</div>\n                    <div className=\"text-right font-medium\">£{(propertyValue - deposit).toLocaleString()}</div>\n                  </div>\n                  \n                  <div className=\"grid grid-cols-2 gap-2\">\n                    <div className=\"text-muted-foreground\">Monthly Payment:</div>\n                    <div className=\"text-right font-medium\">£{monthlyPayment.toFixed(2)}</div>\n                  </div>\n                  \n                  <div className=\"grid grid-cols-2 gap-2\">\n                    <div className=\"text-muted-foreground\">Total Repayment:</div>\n                    <div className=\"text-right font-medium\">£{totalRepayment?.toFixed(2)}</div>\n                  </div>\n                  \n                  <div className=\"grid grid-cols-2 gap-2\">\n                    <div className=\"text-muted-foreground\">Total Interest:</div>\n                    <div className=\"text-right font-medium\">£{totalInterest?.toFixed(2)}</div>\n                  </div>\n                  \n                  <div className=\"grid grid-cols-2 gap-2 pt-4 border-t\">\n                    <div className=\"text-muted-foreground\">Loan to Value (LTV):</div>\n                    <div className=\"text-right font-medium\">{ltv.toFixed(1)}%</div>\n                  </div>\n                </div>\n              </div>\n            )}\n            \n            <Card>\n              <CardContent className=\"pt-6\">\n                <h3 className=\"text-lg font-medium mb-2\">Tips</h3>\n                <ul className=\"space-y-2 text-sm text-muted-foreground list-disc pl-5\">\n                  <li>A higher deposit lowers your monthly payments and improves rates.</li>\n                  <li>Shorter mortgage terms have higher monthly payments but less total interest.</li>\n                  <li>Most lenders offer better rates for LTV under 75%.</li>\n                  <li>Consider fees and early repayment charges when comparing mortgages.</li>\n                </ul>\n              </CardContent>\n            </Card>\n          </div>\n        </div>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default MortgageCalculator; ","import * as React from \"react\";\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\";\nimport { CheckIcon } from \"@radix-ui/react-icons\";\n\nimport { cn } from \"../../lib/utils\";\n\nconst Checkbox = React.forwardRef<\n  React.ElementRef<typeof CheckboxPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <CheckboxPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"peer h-4 w-4 shrink-0 rounded-sm border border-primary shadow focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground\",\n      className,\n    )}\n    {...props}\n  >\n    <CheckboxPrimitive.Indicator\n      className={cn(\"flex items-center justify-center text-current\")}\n    >\n      <CheckIcon className=\"h-4 w-4\" />\n    </CheckboxPrimitive.Indicator>\n  </CheckboxPrimitive.Root>\n));\nCheckbox.displayName = CheckboxPrimitive.Root.displayName;\n\nexport { Checkbox };\n","import React, { useState } from 'react';\nimport { Card, CardContent, CardHeader, CardTitle } from \"../../components/ui/card\";\nimport { Input } from \"../../components/ui/input\";\nimport { Label } from \"../../components/ui/label\";\nimport { Slider } from \"../../components/ui/slider\";\nimport { Button } from \"../../components/ui/button\";\nimport { Checkbox } from \"../../components/ui/checkbox\";\nimport { CalculatorIcon, PoundSterling, Building, UserRoundCheck } from \"lucide-react\";\n\nconst StampDutyCalculator = () => {\n  const [propertyValue, setPropertyValue] = useState(300000);\n  const [isFirstTimeBuyer, setIsFirstTimeBuyer] = useState(false);\n  const [isAdditionalProperty, setIsAdditionalProperty] = useState(false);\n  const [isNonUKResident, setIsNonUKResident] = useState(false);\n  const [stampDuty, setStampDuty] = useState<number | null>(null);\n  const [breakdown, setBreakdown] = useState<Array<{band: string, tax: number}>>([]);\n\n  // Calculate stamp duty based on UK rules (as of 2023)\n  const calculateStampDuty = () => {\n    let bands: {start: number, end: number | null, rate: number}[] = [];\n    let totalTax = 0;\n    let breakdownItems: Array<{band: string, tax: number}> = [];\n\n    // Standard rates for residential properties\n    if (isFirstTimeBuyer) {\n      // First-time buyer rates\n      bands = [\n        { start: 0, end: 425000, rate: 0 },\n        { start: 425000, end: 625000, rate: 0.05 },\n        { start: 625000, end: null, rate: 0.05 }\n      ];\n    } else {\n      // Standard residential rates\n      bands = [\n        { start: 0, end: 250000, rate: 0 },\n        { start: 250000, end: 925000, rate: 0.05 },\n        { start: 925000, end: 1500000, rate: 0.1 },\n        { start: 1500000, end: null, rate: 0.12 }\n      ];\n    }\n\n    // Additional property surcharge\n    const additionalRate = isAdditionalProperty ? 0.03 : 0;\n    \n    // Non-UK resident surcharge\n    const nonUKResidentRate = isNonUKResident ? 0.02 : 0;\n\n    // Calculate tax for each band\n    let remainingValue = propertyValue;\n    bands.forEach(band => {\n      if (remainingValue > 0) {\n        const bandWidth = band.end ? band.end - band.start : remainingValue;\n        const amountInBand = Math.min(remainingValue, bandWidth);\n        \n        // Calculate tax for this band\n        const bandRate = band.rate + additionalRate + nonUKResidentRate;\n        const bandTax = amountInBand * bandRate;\n        \n        if (bandTax > 0) {\n          // Add to breakdown\n          const bandLabel = band.end \n            ? `£${band.start.toLocaleString()} - £${band.end.toLocaleString()}` \n            : `Over £${band.start.toLocaleString()}`;\n          \n          breakdownItems.push({\n            band: `${bandLabel} @ ${(bandRate * 100).toFixed(1)}%`,\n            tax: bandTax\n          });\n        }\n        \n        totalTax += bandTax;\n        remainingValue -= amountInBand;\n      }\n    });\n\n    setStampDuty(totalTax);\n    setBreakdown(breakdownItems);\n  };\n\n  return (\n    <Card className=\"w-full\">\n      <CardHeader>\n        <CardTitle className=\"flex items-center text-xl font-semibold\">\n          <CalculatorIcon className=\"mr-2 h-5 w-5\" />\n          Stamp Duty Land Tax Calculator\n        </CardTitle>\n      </CardHeader>\n      <CardContent className=\"grid gap-6\">\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n          <div className=\"space-y-4\">\n            <div className=\"space-y-2\">\n              <div className=\"flex justify-between\">\n                <Label htmlFor=\"property-value\">Property Value</Label>\n                <span className=\"text-sm text-muted-foreground\">£{propertyValue.toLocaleString()}</span>\n              </div>\n              <div className=\"flex gap-2\">\n                <PoundSterling className=\"h-5 w-5 text-muted-foreground\" />\n                <Slider\n                  id=\"property-value\"\n                  min={40000}\n                  max={2000000}\n                  step={5000}\n                  defaultValue={[propertyValue]}\n                  onValueChange={(value) => setPropertyValue(value[0])}\n                />\n              </div>\n              <Input\n                type=\"number\"\n                value={propertyValue}\n                onChange={(e) => setPropertyValue(Number(e.target.value))}\n                className=\"mt-2\"\n              />\n            </div>\n            \n            <div className=\"space-y-3 pt-4\">\n              <div className=\"flex items-center space-x-2\">\n                <Checkbox \n                  id=\"first-time-buyer\" \n                  checked={isFirstTimeBuyer}\n                  onCheckedChange={(checked) => {\n                    setIsFirstTimeBuyer(checked === true);\n                    if (checked) setIsAdditionalProperty(false);\n                  }}\n                />\n                <Label \n                  htmlFor=\"first-time-buyer\"\n                  className=\"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n                >\n                  First-time buyer\n                </Label>\n              </div>\n              \n              <div className=\"flex items-center space-x-2\">\n                <Checkbox \n                  id=\"additional-property\" \n                  checked={isAdditionalProperty}\n                  onCheckedChange={(checked) => {\n                    setIsAdditionalProperty(checked === true);\n                    if (checked) setIsFirstTimeBuyer(false);\n                  }}\n                  disabled={isFirstTimeBuyer}\n                />\n                <Label \n                  htmlFor=\"additional-property\"\n                  className=\"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n                >\n                  Additional property (3% surcharge)\n                </Label>\n              </div>\n              \n              <div className=\"flex items-center space-x-2\">\n                <Checkbox \n                  id=\"non-uk-resident\" \n                  checked={isNonUKResident}\n                  onCheckedChange={(checked) => setIsNonUKResident(checked === true)}\n                />\n                <Label \n                  htmlFor=\"non-uk-resident\"\n                  className=\"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n                >\n                  Non-UK resident (2% surcharge)\n                </Label>\n              </div>\n            </div>\n            \n            <Button \n              onClick={calculateStampDuty} \n              className=\"w-full mt-4\"\n            >\n              Calculate Stamp Duty\n            </Button>\n          </div>\n          \n          <div className=\"space-y-6\">\n            {stampDuty !== null && (\n              <div className=\"rounded-lg border p-6 shadow-sm\">\n                <h3 className=\"text-lg font-medium\">Stamp Duty Summary</h3>\n                \n                <div className=\"mt-4 space-y-4\">\n                  <div className=\"grid grid-cols-1 gap-2\">\n                    <div className=\"text-lg font-semibold text-center\">\n                      Total Stamp Duty: £{stampDuty.toFixed(2)}\n                    </div>\n                  </div>\n                  \n                  {breakdown.length > 0 && (\n                    <div className=\"pt-4 border-t\">\n                      <h4 className=\"text-sm font-medium mb-2\">Breakdown:</h4>\n                      {breakdown.map((item, index) => (\n                        <div key={index} className=\"grid grid-cols-2 gap-2 text-sm\">\n                          <div className=\"text-muted-foreground\">{item.band}</div>\n                          <div className=\"text-right\">£{item.tax.toFixed(2)}</div>\n                        </div>\n                      ))}\n                    </div>\n                  )}\n                </div>\n              </div>\n            )}\n            \n            <Card>\n              <CardContent className=\"pt-6\">\n                <h3 className=\"text-lg font-medium mb-2\">Notes</h3>\n                <ul className=\"space-y-2 text-sm text-muted-foreground list-disc pl-5\">\n                  <li>First-time buyers get relief on properties up to £625,000.</li>\n                  <li>Additional properties incur a 3% surcharge on all bands.</li>\n                  <li>Non-UK residents pay an additional 2% on all bands.</li>\n                  <li>This is for standard residential property in England and Northern Ireland.</li>\n                  <li>Different rates apply in Scotland and Wales.</li>\n                </ul>\n              </CardContent>\n            </Card>\n          </div>\n        </div>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default StampDutyCalculator; ","import React, { useState } from 'react';\nimport { Card, CardContent, CardHeader, CardTitle } from \"../../components/ui/card\";\nimport { Input } from \"../../components/ui/input\";\nimport { Label } from \"../../components/ui/label\";\nimport { Button } from \"../../components/ui/button\";\nimport { Slider } from \"../../components/ui/slider\";\nimport { CalculatorIcon, PoundSterling, Home, BadgePercent } from \"lucide-react\";\n\nconst YieldCalculator = () => {\n  const [propertyValue, setPropertyValue] = useState(250000);\n  const [monthlyRent, setMonthlyRent] = useState(1200);\n  const [annualExpenses, setAnnualExpenses] = useState(2000);\n  const [grossYield, setGrossYield] = useState<number | null>(null);\n  const [netYield, setNetYield] = useState<number | null>(null);\n\n  const calculateYield = () => {\n    const annualRent = monthlyRent * 12;\n    const grossYieldValue = (annualRent / propertyValue) * 100;\n    const netYieldValue = ((annualRent - annualExpenses) / propertyValue) * 100;\n    \n    setGrossYield(grossYieldValue);\n    setNetYield(netYieldValue);\n  };\n\n  return (\n    <Card className=\"w-full\">\n      <CardHeader>\n        <CardTitle className=\"flex items-center text-xl font-semibold\">\n          <BadgePercent className=\"mr-2 h-5 w-5\" />\n          Rental Yield Calculator\n        </CardTitle>\n      </CardHeader>\n      <CardContent className=\"grid gap-6\">\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n          <div className=\"space-y-4\">\n            <div className=\"space-y-2\">\n              <div className=\"flex justify-between\">\n                <Label htmlFor=\"property-value\">Property Value</Label>\n                <span className=\"text-sm text-muted-foreground\">£{propertyValue.toLocaleString()}</span>\n              </div>\n              <div className=\"flex gap-2\">\n                <PoundSterling className=\"h-5 w-5 text-muted-foreground\" />\n                <Slider\n                  id=\"property-value\"\n                  min={50000}\n                  max={1000000}\n                  step={5000}\n                  defaultValue={[propertyValue]}\n                  onValueChange={(value) => setPropertyValue(value[0])}\n                />\n              </div>\n              <Input\n                type=\"number\"\n                value={propertyValue}\n                onChange={(e) => setPropertyValue(Number(e.target.value))}\n                className=\"mt-2\"\n              />\n            </div>\n            \n            <div className=\"space-y-2\">\n              <div className=\"flex justify-between\">\n                <Label htmlFor=\"monthly-rent\">Monthly Rent</Label>\n                <span className=\"text-sm text-muted-foreground\">£{monthlyRent}</span>\n              </div>\n              <div className=\"flex gap-2\">\n                <PoundSterling className=\"h-5 w-5 text-muted-foreground\" />\n                <Slider\n                  id=\"monthly-rent\"\n                  min={200}\n                  max={5000}\n                  step={50}\n                  defaultValue={[monthlyRent]}\n                  onValueChange={(value) => setMonthlyRent(value[0])}\n                />\n              </div>\n              <Input\n                type=\"number\"\n                value={monthlyRent}\n                onChange={(e) => setMonthlyRent(Number(e.target.value))}\n                className=\"mt-2\"\n              />\n            </div>\n            \n            <div className=\"space-y-2\">\n              <div className=\"flex justify-between\">\n                <Label htmlFor=\"annual-expenses\">Annual Expenses</Label>\n                <span className=\"text-sm text-muted-foreground\">£{annualExpenses}</span>\n              </div>\n              <div className=\"flex gap-2\">\n                <PoundSterling className=\"h-5 w-5 text-muted-foreground\" />\n                <Slider\n                  id=\"annual-expenses\"\n                  min={0}\n                  max={10000}\n                  step={100}\n                  defaultValue={[annualExpenses]}\n                  onValueChange={(value) => setAnnualExpenses(value[0])}\n                />\n              </div>\n              <Input\n                type=\"number\"\n                value={annualExpenses}\n                onChange={(e) => setAnnualExpenses(Number(e.target.value))}\n                className=\"mt-2\"\n              />\n            </div>\n            \n            <Button \n              onClick={calculateYield} \n              className=\"w-full mt-4\"\n            >\n              Calculate Yield\n            </Button>\n          </div>\n          \n          <div className=\"space-y-6\">\n            {grossYield !== null && (\n              <div className=\"rounded-lg border p-6 shadow-sm\">\n                <h3 className=\"text-lg font-medium\">Yield Results</h3>\n                \n                <div className=\"mt-4 space-y-4\">\n                  <div className=\"grid grid-cols-2 gap-2\">\n                    <div className=\"text-muted-foreground\">Annual Rental Income:</div>\n                    <div className=\"text-right font-medium\">£{(monthlyRent * 12).toLocaleString()}</div>\n                  </div>\n                  \n                  <div className=\"grid grid-cols-2 gap-2\">\n                    <div className=\"text-muted-foreground\">Annual Expenses:</div>\n                    <div className=\"text-right font-medium\">£{annualExpenses.toLocaleString()}</div>\n                  </div>\n                  \n                  <div className=\"grid grid-cols-2 gap-2 pt-4 border-t\">\n                    <div className=\"text-muted-foreground\">Gross Yield:</div>\n                    <div className=\"text-right font-medium\">{grossYield.toFixed(2)}%</div>\n                  </div>\n                  \n                  <div className=\"grid grid-cols-2 gap-2\">\n                    <div className=\"text-muted-foreground\">Net Yield:</div>\n                    <div className=\"text-right font-medium\">{netYield.toFixed(2)}%</div>\n                  </div>\n                </div>\n              </div>\n            )}\n            \n            <Card>\n              <CardContent className=\"pt-6\">\n                <h3 className=\"text-lg font-medium mb-2\">What Makes a Good Yield?</h3>\n                <ul className=\"space-y-2 text-sm text-muted-foreground list-disc pl-5\">\n                  <li><strong>Below 3%:</strong> Generally considered low yield</li>\n                  <li><strong>3-5%:</strong> Average yield in expensive areas like London</li>\n                  <li><strong>5-7%:</strong> Good yield for most UK locations</li>\n                  <li><strong>Above 7%:</strong> Excellent yield, but check location quality</li>\n                </ul>\n                \n                <div className=\"mt-4 text-sm text-muted-foreground\">\n                  <p>Remember to include all expenses when calculating net yield:</p>\n                  <ul className=\"list-disc pl-5 mt-2\">\n                    <li>Management fees</li>\n                    <li>Maintenance costs</li>\n                    <li>Insurance</li>\n                    <li>Service charges</li>\n                    <li>Void periods</li>\n                  </ul>\n                </div>\n              </CardContent>\n            </Card>\n          </div>\n        </div>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default YieldCalculator; ","import React, { useState } from 'react';\nimport { Card, CardContent, CardHeader, CardTitle } from \"../../components/ui/card\";\nimport { Input } from \"../../components/ui/input\";\nimport { Label } from \"../../components/ui/label\";\nimport { Button } from \"../../components/ui/button\";\nimport { Slider } from \"../../components/ui/slider\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"../../components/ui/select\";\nimport { CalculatorIcon, PoundSterling, TrendingUp, BadgePercent } from \"lucide-react\";\n\nconst ROICalculator = () => {\n  const [purchasePrice, setPurchasePrice] = useState(250000);\n  const [renovationCost, setRenovationCost] = useState(25000);\n  const [stampDuty, setStampDuty] = useState(2500);\n  const [otherCosts, setOtherCosts] = useState(3000);\n  const [monthlyRent, setMonthlyRent] = useState(1200);\n  const [annualExpenses, setAnnualExpenses] = useState(2400);\n  const [holdingPeriod, setHoldingPeriod] = useState(5);\n  const [annualAppreciation, setAnnualAppreciation] = useState(3);\n  const [financingMethod, setFinancingMethod] = useState(\"cash\");\n  const [mortgageDeposit, setMortgageDeposit] = useState(62500); // 25% of purchase price\n  const [interestRate, setInterestRate] = useState(4.5);\n  const [mortgageTerm, setMortgageTerm] = useState(25);\n  \n  const [results, setResults] = useState<{\n    totalInvestment: number,\n    cashFlow: number,\n    cashOnCashReturn: number,\n    estimatedSalePrice: number,\n    totalProfit: number,\n    totalROI: number,\n    annualizedROI: number\n  } | null>(null);\n\n  const calculateROI = () => {\n    // Calculate total initial investment\n    const totalInvestment = financingMethod === \"cash\" \n      ? purchasePrice + renovationCost + stampDuty + otherCosts\n      : mortgageDeposit + renovationCost + stampDuty + otherCosts;\n    \n    // Calculate annual cash flow\n    const annualRent = monthlyRent * 12;\n    let annualMortgagePayments = 0;\n    \n    if (financingMethod === \"mortgage\") {\n      const loanAmount = purchasePrice - mortgageDeposit;\n      const monthlyInterestRate = interestRate / 100 / 12;\n      const numberOfPayments = mortgageTerm * 12;\n      \n      // Calculate monthly mortgage payment\n      const x = Math.pow(1 + monthlyInterestRate, numberOfPayments);\n      const monthlyPayment = (loanAmount * x * monthlyInterestRate) / (x - 1);\n      \n      annualMortgagePayments = monthlyPayment * 12;\n    }\n    \n    const annualCashFlow = annualRent - annualExpenses - annualMortgagePayments;\n    \n    // Calculate cash-on-cash return (annual cash flow / total investment)\n    const cashOnCashReturn = (annualCashFlow / totalInvestment) * 100;\n    \n    // Calculate future property value with appreciation\n    const estimatedSalePrice = purchasePrice * Math.pow(1 + (annualAppreciation / 100), holdingPeriod);\n    \n    // Calculate outstanding mortgage (if applicable)\n    let outstandingMortgage = 0;\n    if (financingMethod === \"mortgage\") {\n      const loanAmount = purchasePrice - mortgageDeposit;\n      const monthlyInterestRate = interestRate / 100 / 12;\n      const numberOfPayments = mortgageTerm * 12;\n      const monthlyPayment = (loanAmount * Math.pow(1 + monthlyInterestRate, numberOfPayments) * monthlyInterestRate) / (Math.pow(1 + monthlyInterestRate, numberOfPayments) - 1);\n      \n      // Calculate remaining balance after holding period\n      let balance = loanAmount;\n      for (let i = 0; i < holdingPeriod * 12; i++) {\n        const interestPayment = balance * monthlyInterestRate;\n        const principalPayment = monthlyPayment - interestPayment;\n        balance -= principalPayment;\n      }\n      \n      outstandingMortgage = Math.max(0, balance);\n    }\n    \n    // Calculate total profit\n    const totalCashFlow = annualCashFlow * holdingPeriod;\n    const equityGain = estimatedSalePrice - purchasePrice - outstandingMortgage;\n    const totalProfit = totalCashFlow + equityGain;\n    \n    // Calculate total ROI (total profit / total investment)\n    const totalROI = (totalProfit / totalInvestment) * 100;\n    \n    // Calculate annualized ROI\n    const annualizedROI = Math.pow(1 + (totalROI / 100), 1 / holdingPeriod) - 1;\n    \n    setResults({\n      totalInvestment,\n      cashFlow: annualCashFlow,\n      cashOnCashReturn,\n      estimatedSalePrice,\n      totalProfit,\n      totalROI,\n      annualizedROI: annualizedROI * 100\n    });\n  };\n\n  return (\n    <Card className=\"w-full\">\n      <CardHeader>\n        <CardTitle className=\"flex items-center text-xl font-semibold\">\n          <TrendingUp className=\"mr-2 h-5 w-5\" />\n          Return on Investment (ROI) Calculator\n        </CardTitle>\n      </CardHeader>\n      <CardContent>\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n          <div className=\"space-y-4\">\n            <h3 className=\"text-lg font-medium\">Property Details</h3>\n            \n            <div className=\"space-y-2\">\n              <Label htmlFor=\"purchase-price\">Purchase Price</Label>\n              <div className=\"flex\">\n                <span className=\"flex items-center bg-muted px-3 rounded-l-md\">£</span>\n                <Input\n                  id=\"purchase-price\"\n                  type=\"number\"\n                  value={purchasePrice}\n                  onChange={(e) => setPurchasePrice(Number(e.target.value))}\n                  className=\"rounded-l-none\"\n                />\n              </div>\n            </div>\n            \n            <div className=\"space-y-2\">\n              <Label htmlFor=\"renovation-cost\">Renovation Cost</Label>\n              <div className=\"flex\">\n                <span className=\"flex items-center bg-muted px-3 rounded-l-md\">£</span>\n                <Input\n                  id=\"renovation-cost\"\n                  type=\"number\"\n                  value={renovationCost}\n                  onChange={(e) => setRenovationCost(Number(e.target.value))}\n                  className=\"rounded-l-none\"\n                />\n              </div>\n            </div>\n            \n            <div className=\"space-y-2\">\n              <Label htmlFor=\"stamp-duty\">Stamp Duty</Label>\n              <div className=\"flex\">\n                <span className=\"flex items-center bg-muted px-3 rounded-l-md\">£</span>\n                <Input\n                  id=\"stamp-duty\"\n                  type=\"number\"\n                  value={stampDuty}\n                  onChange={(e) => setStampDuty(Number(e.target.value))}\n                  className=\"rounded-l-none\"\n                />\n              </div>\n            </div>\n            \n            <div className=\"space-y-2\">\n              <Label htmlFor=\"other-costs\">Other Costs (Legal, Survey, etc.)</Label>\n              <div className=\"flex\">\n                <span className=\"flex items-center bg-muted px-3 rounded-l-md\">£</span>\n                <Input\n                  id=\"other-costs\"\n                  type=\"number\"\n                  value={otherCosts}\n                  onChange={(e) => setOtherCosts(Number(e.target.value))}\n                  className=\"rounded-l-none\"\n                />\n              </div>\n            </div>\n            \n            <h3 className=\"text-lg font-medium pt-4\">Rental Income & Expenses</h3>\n            \n            <div className=\"space-y-2\">\n              <Label htmlFor=\"monthly-rent\">Monthly Rent</Label>\n              <div className=\"flex\">\n                <span className=\"flex items-center bg-muted px-3 rounded-l-md\">£</span>\n                <Input\n                  id=\"monthly-rent\"\n                  type=\"number\"\n                  value={monthlyRent}\n                  onChange={(e) => setMonthlyRent(Number(e.target.value))}\n                  className=\"rounded-l-none\"\n                />\n              </div>\n            </div>\n            \n            <div className=\"space-y-2\">\n              <Label htmlFor=\"annual-expenses\">Annual Expenses</Label>\n              <div className=\"flex\">\n                <span className=\"flex items-center bg-muted px-3 rounded-l-md\">£</span>\n                <Input\n                  id=\"annual-expenses\"\n                  type=\"number\"\n                  value={annualExpenses}\n                  onChange={(e) => setAnnualExpenses(Number(e.target.value))}\n                  className=\"rounded-l-none\"\n                />\n              </div>\n            </div>\n            \n            <h3 className=\"text-lg font-medium pt-4\">Investment Details</h3>\n            \n            <div className=\"space-y-2\">\n              <Label htmlFor=\"financing-method\">Financing Method</Label>\n              <Select \n                defaultValue={financingMethod}\n                onValueChange={(value) => setFinancingMethod(value)}\n              >\n                <SelectTrigger id=\"financing-method\">\n                  <SelectValue placeholder=\"Select financing method\" />\n                </SelectTrigger>\n                <SelectContent>\n                  <SelectItem value=\"cash\">Cash Purchase</SelectItem>\n                  <SelectItem value=\"mortgage\">Mortgage</SelectItem>\n                </SelectContent>\n              </Select>\n            </div>\n            \n            {financingMethod === \"mortgage\" && (\n              <>\n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"mortgage-deposit\">Mortgage Deposit</Label>\n                  <div className=\"flex\">\n                    <span className=\"flex items-center bg-muted px-3 rounded-l-md\">£</span>\n                    <Input\n                      id=\"mortgage-deposit\"\n                      type=\"number\"\n                      value={mortgageDeposit}\n                      onChange={(e) => setMortgageDeposit(Number(e.target.value))}\n                      className=\"rounded-l-none\"\n                    />\n                  </div>\n                  <div className=\"text-xs text-muted-foreground mt-1\">\n                    {((mortgageDeposit / purchasePrice) * 100).toFixed(1)}% of purchase price\n                  </div>\n                </div>\n                \n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"interest-rate\">Interest Rate (%)</Label>\n                  <Input\n                    id=\"interest-rate\"\n                    type=\"number\"\n                    value={interestRate}\n                    onChange={(e) => setInterestRate(Number(e.target.value))}\n                    step={0.1}\n                  />\n                </div>\n                \n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"mortgage-term\">Mortgage Term (years)</Label>\n                  <Input\n                    id=\"mortgage-term\"\n                    type=\"number\"\n                    value={mortgageTerm}\n                    onChange={(e) => setMortgageTerm(Number(e.target.value))}\n                  />\n                </div>\n              </>\n            )}\n            \n            <div className=\"space-y-2\">\n              <Label htmlFor=\"holding-period\">Investment Holding Period (years)</Label>\n              <Input\n                id=\"holding-period\"\n                type=\"number\"\n                value={holdingPeriod}\n                onChange={(e) => setHoldingPeriod(Number(e.target.value))}\n              />\n            </div>\n            \n            <div className=\"space-y-2\">\n              <Label htmlFor=\"annual-appreciation\">Annual Property Appreciation (%)</Label>\n              <Input\n                id=\"annual-appreciation\"\n                type=\"number\"\n                value={annualAppreciation}\n                onChange={(e) => setAnnualAppreciation(Number(e.target.value))}\n                step={0.1}\n              />\n            </div>\n            \n            <Button \n              onClick={calculateROI} \n              className=\"w-full mt-4\"\n            >\n              Calculate ROI\n            </Button>\n          </div>\n          \n          <div className=\"space-y-6\">\n            {results && (\n              <div className=\"rounded-lg border p-6 shadow-sm\">\n                <h3 className=\"text-lg font-medium\">ROI Summary</h3>\n                \n                <div className=\"mt-4 space-y-4\">\n                  <div className=\"grid grid-cols-2 gap-2\">\n                    <div className=\"text-muted-foreground\">Total Investment:</div>\n                    <div className=\"text-right font-medium\">£{results.totalInvestment.toLocaleString()}</div>\n                  </div>\n                  \n                  <div className=\"grid grid-cols-2 gap-2\">\n                    <div className=\"text-muted-foreground\">Annual Cash Flow:</div>\n                    <div className=\"text-right font-medium\">£{results.cashFlow.toLocaleString()}</div>\n                  </div>\n                  \n                  <div className=\"grid grid-cols-2 gap-2\">\n                    <div className=\"text-muted-foreground\">Cash-on-Cash Return:</div>\n                    <div className=\"text-right font-medium\">{results.cashOnCashReturn.toFixed(2)}%</div>\n                  </div>\n                  \n                  <div className=\"grid grid-cols-2 gap-2 pt-4 border-t\">\n                    <div className=\"text-muted-foreground\">Estimated Sale Price:</div>\n                    <div className=\"text-right font-medium\">£{results.estimatedSalePrice.toLocaleString()}</div>\n                  </div>\n                  \n                  <div className=\"grid grid-cols-2 gap-2\">\n                    <div className=\"text-muted-foreground\">Total Profit:</div>\n                    <div className=\"text-right font-medium\">£{results.totalProfit.toLocaleString()}</div>\n                  </div>\n                  \n                  <div className=\"grid grid-cols-2 gap-2 pt-4 border-t font-bold\">\n                    <div>Total ROI:</div>\n                    <div className=\"text-right\">{results.totalROI.toFixed(2)}%</div>\n                  </div>\n                  \n                  <div className=\"grid grid-cols-2 gap-2 font-bold\">\n                    <div>Annualized ROI:</div>\n                    <div className=\"text-right\">{results.annualizedROI.toFixed(2)}%</div>\n                  </div>\n                </div>\n              </div>\n            )}\n            \n            <Card>\n              <CardContent className=\"pt-6\">\n                <h3 className=\"text-lg font-medium mb-2\">ROI Explained</h3>\n                <ul className=\"space-y-2 text-sm text-muted-foreground list-disc pl-5\">\n                  <li><strong>Cash-on-Cash Return:</strong> Annual cash flow divided by your initial investment.</li>\n                  <li><strong>Total ROI:</strong> Total profit (cash flow + equity gain) as a percentage of your investment.</li>\n                  <li><strong>Annualized ROI:</strong> The yearly rate of return that would give you the total ROI over the holding period.</li>\n                </ul>\n                \n                <div className=\"mt-4 text-sm text-muted-foreground\">\n                  <p>For buy-to-let investments, aim for:</p>\n                  <ul className=\"list-disc pl-5 mt-2\">\n                    <li>Cash-on-Cash Return: 5-8%</li>\n                    <li>Total ROI: 40%+ over 5 years</li>\n                    <li>Annualized ROI: 7%+</li>\n                  </ul>\n                </div>\n              </CardContent>\n            </Card>\n          </div>\n        </div>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default ROICalculator; ","import React, { useState } from 'react';\nimport { Card, CardContent, CardHeader, CardTitle } from \"../../components/ui/card\";\nimport { Input } from \"../../components/ui/input\";\nimport { Label } from \"../../components/ui/label\";\nimport { Button } from \"../../components/ui/button\";\nimport { Slider } from \"../../components/ui/slider\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"../../components/ui/select\";\nimport { CalculatorIcon, PoundSterling, Home, ShieldCheck } from \"lucide-react\";\n\nconst AffordabilityCalculator = () => {\n  const [annualIncome, setAnnualIncome] = useState(60000);\n  const [additionalIncome, setAdditionalIncome] = useState(0);\n  const [deposit, setDeposit] = useState(40000);\n  const [monthlyDebts, setMonthlyDebts] = useState(500);\n  const [interestRate, setInterestRate] = useState(4.5);\n  const [mortgageTerm, setMortgageTerm] = useState(25);\n  const [loanToIncomeMultiplier, setLoanToIncomeMultiplier] = useState(4.5);\n  \n  const [results, setResults] = useState<{\n    maxMortgage: number,\n    maxPropertyPrice: number,\n    monthlyPayment: number,\n    affordabilityRatio: number,\n    stressTestedPayment: number,\n  } | null>(null);\n\n  const calculateAffordability = () => {\n    // Calculate max mortgage based on income multiples\n    const totalIncome = annualIncome + additionalIncome;\n    const maxMortgage = totalIncome * loanToIncomeMultiplier;\n    \n    // Calculate max property price\n    const maxPropertyPrice = maxMortgage + deposit;\n    \n    // Calculate expected monthly payment\n    const monthlyInterestRate = interestRate / 100 / 12;\n    const numberOfPayments = mortgageTerm * 12;\n    \n    // Calculate monthly payment using the mortgage formula\n    const x = Math.pow(1 + monthlyInterestRate, numberOfPayments);\n    const monthlyPayment = (maxMortgage * x * monthlyInterestRate) / (x - 1);\n    \n    // Calculate affordability ratio (monthly payment as % of monthly income)\n    const monthlyIncome = totalIncome / 12;\n    const affordabilityRatio = (monthlyPayment / monthlyIncome) * 100;\n    \n    // Calculate stress-tested payment (at interest rate + 3%)\n    const stressTestRate = (interestRate + 3) / 100 / 12;\n    const stressX = Math.pow(1 + stressTestRate, numberOfPayments);\n    const stressTestedPayment = (maxMortgage * stressX * stressTestRate) / (stressX - 1);\n    \n    setResults({\n      maxMortgage,\n      maxPropertyPrice,\n      monthlyPayment,\n      affordabilityRatio,\n      stressTestedPayment,\n    });\n  };\n\n  return (\n    <Card className=\"w-full\">\n      <CardHeader>\n        <CardTitle className=\"flex items-center text-xl font-semibold\">\n          <ShieldCheck className=\"mr-2 h-5 w-5\" />\n          Mortgage Affordability Calculator\n        </CardTitle>\n      </CardHeader>\n      <CardContent>\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n          <div className=\"space-y-4\">\n            <h3 className=\"text-lg font-medium\">Income Details</h3>\n            \n            <div className=\"space-y-2\">\n              <div className=\"flex justify-between\">\n                <Label htmlFor=\"annual-income\">Your Annual Income</Label>\n                <span className=\"text-sm text-muted-foreground\">£{annualIncome.toLocaleString()}</span>\n              </div>\n              <div className=\"flex gap-2\">\n                <PoundSterling className=\"h-5 w-5 text-muted-foreground\" />\n                <Slider\n                  id=\"annual-income\"\n                  min={10000}\n                  max={200000}\n                  step={1000}\n                  defaultValue={[annualIncome]}\n                  onValueChange={(value) => setAnnualIncome(value[0])}\n                />\n              </div>\n              <Input\n                type=\"number\"\n                value={annualIncome}\n                onChange={(e) => setAnnualIncome(Number(e.target.value))}\n                className=\"mt-2\"\n              />\n            </div>\n            \n            <div className=\"space-y-2\">\n              <Label htmlFor=\"additional-income\">Additional Annual Income (e.g., partner)</Label>\n              <div className=\"flex\">\n                <span className=\"flex items-center bg-muted px-3 rounded-l-md\">£</span>\n                <Input\n                  id=\"additional-income\"\n                  type=\"number\"\n                  value={additionalIncome}\n                  onChange={(e) => setAdditionalIncome(Number(e.target.value))}\n                  className=\"rounded-l-none\"\n                />\n              </div>\n            </div>\n            \n            <div className=\"space-y-2\">\n              <div className=\"flex justify-between\">\n                <Label htmlFor=\"deposit\">Deposit Available</Label>\n                <span className=\"text-sm text-muted-foreground\">£{deposit.toLocaleString()}</span>\n              </div>\n              <div className=\"flex gap-2\">\n                <PoundSterling className=\"h-5 w-5 text-muted-foreground\" />\n                <Slider\n                  id=\"deposit\"\n                  min={0}\n                  max={200000}\n                  step={5000}\n                  defaultValue={[deposit]}\n                  onValueChange={(value) => setDeposit(value[0])}\n                />\n              </div>\n              <Input\n                type=\"number\"\n                value={deposit}\n                onChange={(e) => setDeposit(Number(e.target.value))}\n                className=\"mt-2\"\n              />\n            </div>\n            \n            <div className=\"space-y-2\">\n              <Label htmlFor=\"monthly-debts\">Monthly Debt Payments</Label>\n              <div className=\"flex\">\n                <span className=\"flex items-center bg-muted px-3 rounded-l-md\">£</span>\n                <Input\n                  id=\"monthly-debts\"\n                  type=\"number\"\n                  value={monthlyDebts}\n                  onChange={(e) => setMonthlyDebts(Number(e.target.value))}\n                  className=\"rounded-l-none\"\n                />\n              </div>\n              <div className=\"text-xs text-muted-foreground mt-1\">\n                Include credit cards, loans, car finance, etc.\n              </div>\n            </div>\n            \n            <h3 className=\"text-lg font-medium pt-4\">Mortgage Details</h3>\n            \n            <div className=\"space-y-2\">\n              <div className=\"flex justify-between\">\n                <Label htmlFor=\"interest-rate\">Interest Rate (%)</Label>\n                <span className=\"text-sm text-muted-foreground\">{interestRate}%</span>\n              </div>\n              <div className=\"flex gap-2\">\n                <Slider\n                  id=\"interest-rate\"\n                  min={1}\n                  max={10}\n                  step={0.1}\n                  defaultValue={[interestRate]}\n                  onValueChange={(value) => setInterestRate(value[0])}\n                />\n              </div>\n              <Input\n                type=\"number\"\n                value={interestRate}\n                onChange={(e) => setInterestRate(Number(e.target.value))}\n                className=\"mt-2\"\n                step={0.1}\n              />\n            </div>\n            \n            <div className=\"space-y-2\">\n              <div className=\"flex justify-between\">\n                <Label htmlFor=\"mortgage-term\">Mortgage Term (years)</Label>\n                <span className=\"text-sm text-muted-foreground\">{mortgageTerm} years</span>\n              </div>\n              <div className=\"flex gap-2\">\n                <Slider\n                  id=\"mortgage-term\"\n                  min={5}\n                  max={40}\n                  step={1}\n                  defaultValue={[mortgageTerm]}\n                  onValueChange={(value) => setMortgageTerm(value[0])}\n                />\n              </div>\n              <Input\n                type=\"number\"\n                value={mortgageTerm}\n                onChange={(e) => setMortgageTerm(Number(e.target.value))}\n                className=\"mt-2\"\n              />\n            </div>\n            \n            <div className=\"space-y-2\">\n              <Label htmlFor=\"loan-to-income\">Loan to Income Multiple</Label>\n              <Select \n                defaultValue={loanToIncomeMultiplier.toString()}\n                onValueChange={(value) => setLoanToIncomeMultiplier(Number(value))}\n              >\n                <SelectTrigger id=\"loan-to-income\">\n                  <SelectValue placeholder=\"Select loan to income multiple\" />\n                </SelectTrigger>\n                <SelectContent>\n                  <SelectItem value=\"4\">4.0x income</SelectItem>\n                  <SelectItem value=\"4.5\">4.5x income</SelectItem>\n                  <SelectItem value=\"5\">5.0x income</SelectItem>\n                  <SelectItem value=\"5.5\">5.5x income</SelectItem>\n                  <SelectItem value=\"6\">6.0x income</SelectItem>\n                </SelectContent>\n              </Select>\n              <div className=\"text-xs text-muted-foreground mt-1\">\n                Lenders typically offer between 4-6x your annual income\n              </div>\n            </div>\n            \n            <Button \n              onClick={calculateAffordability} \n              className=\"w-full mt-4\"\n            >\n              Calculate Affordability\n            </Button>\n          </div>\n          \n          <div className=\"space-y-6\">\n            {results && (\n              <div className=\"rounded-lg border p-6 shadow-sm\">\n                <h3 className=\"text-lg font-medium\">Affordability Results</h3>\n                \n                <div className=\"mt-4 space-y-4\">\n                  <div className=\"flex flex-col items-center py-4 border-b\">\n                    <div className=\"text-muted-foreground text-sm\">Maximum Property Price</div>\n                    <div className=\"text-3xl font-bold mt-1\">£{results.maxPropertyPrice.toLocaleString()}</div>\n                  </div>\n                  \n                  <div className=\"grid grid-cols-2 gap-2\">\n                    <div className=\"text-muted-foreground\">Maximum Mortgage:</div>\n                    <div className=\"text-right font-medium\">£{results.maxMortgage.toLocaleString()}</div>\n                  </div>\n                  \n                  <div className=\"grid grid-cols-2 gap-2\">\n                    <div className=\"text-muted-foreground\">Monthly Payment:</div>\n                    <div className=\"text-right font-medium\">£{results.monthlyPayment.toFixed(2)}</div>\n                  </div>\n                  \n                  <div className=\"grid grid-cols-2 gap-2\">\n                    <div className=\"text-muted-foreground\">Affordability Ratio:</div>\n                    <div className=\"text-right font-medium\">\n                      {results.affordabilityRatio.toFixed(1)}%\n                      <span className={`ml-2 px-2 py-0.5 text-xs rounded-full ${results.affordabilityRatio <= 35 ? 'bg-green-100 text-green-800' : results.affordabilityRatio <= 45 ? 'bg-yellow-100 text-yellow-800' : 'bg-red-100 text-red-800'}`}>\n                        {results.affordabilityRatio <= 35 ? 'Good' : results.affordabilityRatio <= 45 ? 'Moderate' : 'High'}\n                      </span>\n                    </div>\n                  </div>\n                  \n                  <div className=\"grid grid-cols-2 gap-2 pt-4 border-t\">\n                    <div className=\"text-muted-foreground\">Stress Tested Payment:</div>\n                    <div className=\"text-right font-medium\">£{results.stressTestedPayment.toFixed(2)}</div>\n                    <div className=\"col-span-2 text-xs text-muted-foreground\">\n                      (Monthly payment if rates increase by 3%)\n                    </div>\n                  </div>\n                </div>\n              </div>\n            )}\n            \n            <Card>\n              <CardContent className=\"pt-6\">\n                <h3 className=\"text-lg font-medium mb-2\">Lender Requirements</h3>\n                <ul className=\"space-y-2 text-sm text-muted-foreground list-disc pl-5\">\n                  <li><strong>Affordability Ratio:</strong> Most lenders prefer this to be below 35% of your gross monthly income.</li>\n                  <li><strong>Debt-to-Income Ratio:</strong> Your total debt payments (including mortgage) should ideally be below 45% of income.</li>\n                  <li><strong>Stress Testing:</strong> Lenders will check if you can afford payments if interest rates rise by 3%.</li>\n                  <li><strong>Deposit:</strong> Higher deposits (15%+) typically secure better interest rates.</li>\n                </ul>\n                \n                <div className=\"mt-4 text-sm text-muted-foreground\">\n                  <p className=\"font-medium\">Additional costs to consider:</p>\n                  <ul className=\"list-disc pl-5 mt-2\">\n                    <li>Stamp Duty Land Tax</li>\n                    <li>Legal fees (typically £1,000-£1,500)</li>\n                    <li>Surveyor fees (£400-£1,500)</li>\n                    <li>Mortgage arrangement fees (£0-£2,000)</li>\n                    <li>Moving costs</li>\n                  </ul>\n                </div>\n              </CardContent>\n            </Card>\n          </div>\n        </div>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default AffordabilityCalculator; ","import React, { useEffect } from 'react';\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"../components/ui/tabs\";\nimport MortgageCalculator from \"../components/calculators/MortgageCalculator\";\nimport StampDutyCalculator from \"../components/calculators/StampDutyCalculator\";\nimport YieldCalculator from \"../components/calculators/YieldCalculator\";\nimport ROICalculator from \"../components/calculators/ROICalculator\";\nimport AffordabilityCalculator from \"../components/calculators/AffordabilityCalculator\";\nimport HeroSection from \"../components/HeroSection\";\n\n// Add any other imports you might need\n\nconst Calculators = () => {\n  // For debugging - check if HeroSection is being initialized\n  useEffect(() => {\n    console.log(\"Calculators page mounted - HeroSection should render\");\n  }, []);\n\n  return (\n    <div className=\"flex flex-col min-h-screen\">\n      {/* Hero Section - ensure it's at the top and visible */}\n      <div className=\"w-full\">\n        <HeroSection\n          title=\"Property Investment Calculators\"\n          subtitle=\"Powerful tools to analyze investments, calculate mortgage payments, and estimate potential returns\"\n          showSearch={false}\n          showStats={false}\n          height=\"h-[400px]\"\n        />\n      </div>\n      \n      {/* Main Content - add some margin to ensure it's not overlapping with the hero */}\n      <div className=\"container mx-auto px-4 py-12 mt-6\">\n        <Tabs defaultValue=\"mortgage\" className=\"w-full\">\n          <TabsList className=\"w-full mb-8\">\n            <div className=\"grid w-full grid-cols-1 sm:grid-cols-3 md:grid-cols-5 gap-2\">\n              <TabsTrigger value=\"mortgage\" className=\"w-full\">Mortgage</TabsTrigger>\n              <TabsTrigger value=\"stampduty\" className=\"w-full\">Stamp Duty</TabsTrigger>\n              <TabsTrigger value=\"yield\" className=\"w-full\">Rental Yield</TabsTrigger>\n              <TabsTrigger value=\"roi\" className=\"w-full\">ROI</TabsTrigger>\n              <TabsTrigger value=\"affordability\" className=\"w-full\">Affordability</TabsTrigger>\n            </div>\n          </TabsList>\n          \n          <TabsContent value=\"mortgage\" className=\"mt-6\">\n            <MortgageCalculator />\n          </TabsContent>\n          \n          <TabsContent value=\"stampduty\" className=\"mt-6\">\n            <StampDutyCalculator />\n          </TabsContent>\n          \n          <TabsContent value=\"yield\" className=\"mt-6\">\n            <YieldCalculator />\n          </TabsContent>\n          \n          <TabsContent value=\"roi\" className=\"mt-6\">\n            <ROICalculator />\n          </TabsContent>\n          \n          <TabsContent value=\"affordability\" className=\"mt-6\">\n            <AffordabilityCalculator />\n          </TabsContent>\n        </Tabs>\n      </div>\n    </div>\n  );\n};\n\nexport default Calculators; ","import React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { Layout } from './Layout';\nimport { PageTransition } from './ui/page-transition';\nimport { Button } from './ui/button';\nimport { \n  Calendar, \n  User, \n  Tag, \n  ArrowLeft, \n  Share2, \n  Bookmark,\n  Download,\n  FileText, \n  PenSquare\n} from 'lucide-react';\nimport { formatDate } from '../lib/utils';\nimport { useAuth } from '../lib/auth';\nimport { SubscriptionModal } from './SubscriptionModal';\n\n// Mock report data - this would be fetched from an API in a real application\nconst reportData = [\n  {\n    id: 1,\n    title: \"UK Property Market Outlook 2024\",\n    slug: \"uk-property-market-outlook-2024\",\n    summary: \"Comprehensive analysis of the UK property market trends, investment opportunities, and forecasts for 2024.\",\n    content: `\n      <h2>Executive Summary</h2>\n      <p>The UK property market in 2024 continues to demonstrate resilience despite economic challenges. This report provides a comprehensive analysis of current trends, regional variations, and forecasts for the remainder of the year.</p>\n      \n      <h2>Market Overview</h2>\n      <p>UK house prices have shown moderate growth of 2.3% year-on-year, with significant regional variations. The market has stabilized following the volatility of previous years, with transaction volumes returning to pre-pandemic levels.</p>\n      \n      <h3>Key Findings</h3>\n      <ul>\n        <li>Average UK house price stands at £289,950 as of May 2024</li>\n        <li>Northern regions continue to outperform London and the South East</li>\n        <li>First-time buyer activity has increased by 7% compared to 2023</li>\n        <li>Rental yields remain robust at national average of 5.5%</li>\n      </ul>\n      \n      <h2>Regional Analysis</h2>\n      <p>The North West remains the strongest performing region with annual price growth of 4.8%. Liverpool and Manchester continue to lead with strong rental yields exceeding 7% in some areas. London has shown minimal growth at 0.2%, though prime central areas have begun to recover.</p>\n      \n      <h2>Investment Opportunities</h2>\n      <p>Based on our analysis, we identify several key opportunity areas for property investors:</p>\n      <ol>\n        <li>Northern city regeneration zones, particularly in Leeds and Sheffield</li>\n        <li>Commuter belt towns with improved transport links</li>\n        <li>University cities with strong student rental demand</li>\n        <li>Coastal locations with growing demand from remote workers</li>\n      </ol>\n      \n      <h2>Forecast and Recommendations</h2>\n      <p>We project continued moderate growth of 3-4% nationally for the remainder of 2024, with the potential for stronger performance in regional hotspots. Interest rates are expected to stabilize, potentially decreasing in Q4, which may stimulate additional market activity.</p>\n      \n      <p>For investors, we recommend focusing on areas with strong fundamentals: employment growth, infrastructure improvements, and demographic advantages. Diversification across regions and property types remains advisable in the current market.</p>\n    `,\n    date: \"2024-05-15\",\n    author: \"Property Analysis Team\",\n    authorBio: \"Our Property Analysis Team consists of economists, data scientists, and real estate professionals with decades of combined experience in the UK property market.\",\n    category: \"Market Analysis\",\n    readTime: \"12 min read\",\n    isPremium: true,\n    relatedReports: [2, 3],\n    coverImage: \"https://images.unsplash.com/photo-1564013799919-ab600027ffc6?ixid=MnwxMjA3fDB8MHxzZWFyY2h8MXx8aG91c2V8ZW58MHx8MHx8&ixlib=rb-1.2.1&w=1000&q=80\"\n  },\n  {\n    id: 2,\n    title: \"Regional Investment Hotspots\",\n    slug: \"regional-investment-hotspots\",\n    summary: \"Detailed report on emerging regional investment opportunities across the UK, with focus on yields and growth potential.\",\n    content: `\n      <h2>Executive Summary</h2>\n      <p>This report identifies and analyzes emerging investment hotspots across UK regions, focusing on areas with strong yield potential and capital growth prospects.</p>\n      \n      <h2>Methodology</h2>\n      <p>Our analysis combines economic data, infrastructure developments, demographic trends, and rental yield calculations to identify areas with the strongest investment potential.</p>\n      \n      <h2>Top Investment Locations</h2>\n      <h3>1. Liverpool - Merseyside</h3>\n      <p>Liverpool continues to offer some of the highest rental yields in the UK, averaging 7.2%. Regeneration projects and growing employment opportunities make this a prime investment location.</p>\n      \n      <h3>2. Manchester - Greater Manchester</h3>\n      <p>With significant job creation in technology and media sectors, Manchester maintains strong rental demand and price growth potential. Average yields stand at 6.7%.</p>\n      \n      <h3>3. Leeds - West Yorkshire</h3>\n      <p>Substantial infrastructure investment and a growing financial sector support Leeds' position as a key northern investment hub, with yields averaging 6.1%.</p>\n      \n      <h3>4. Birmingham - West Midlands</h3>\n      <p>The ongoing HS2 development and city center regeneration continue to boost Birmingham's investment appeal, with rental yields of 5.5%.</p>\n      \n      <h3>5. Glasgow - Scotland</h3>\n      <p>Offering a compelling combination of affordable property prices and strong rental demand, Glasgow presents excellent value for investors with yields around 5.8%.</p>\n      \n      <h2>Emerging Areas to Watch</h2>\n      <p>Besides established hotspots, we've identified several emerging areas showing strong investment potential:</p>\n      <ul>\n        <li>Sheffield - South Yorkshire</li>\n        <li>Nottingham - East Midlands</li>\n        <li>Preston - Lancashire</li>\n        <li>Swansea - Wales</li>\n      </ul>\n      \n      <h2>Conclusion and Outlook</h2>\n      <p>Regional cities continue to offer superior yield potential compared to London and the South East. The leveling up agenda and infrastructure improvements are likely to sustain this trend, making northern and midland cities particularly attractive for investors focused on rental returns.</p>\n    `,\n    date: \"2024-04-22\",\n    author: \"Investment Research Division\",\n    authorBio: \"The Investment Research Division specializes in analyzing property investment trends and identifying high-potential opportunities across the UK and international markets.\",\n    category: \"Investment\",\n    readTime: \"15 min read\",\n    isPremium: true,\n    relatedReports: [1, 3],\n    coverImage: \"https://images.unsplash.com/photo-1560518883-ce09059eeffa?ixid=MnwxMjA3fDB8MHxzZWFyY2h8MXx8cHJvcGVydHl8ZW58MHx8MHx8&ixlib=rb-1.2.1&w=1000&q=80\"\n  },\n  {\n    id: 3,\n    title: \"First-Time Buyer Guide 2024\",\n    slug: \"first-time-buyer-guide-2024\",\n    summary: \"Essential information and advice for first-time buyers navigating the property market in 2024.\",\n    content: `\n      <h2>Introduction</h2>\n      <p>Buying your first home is both exciting and challenging. This guide provides first-time buyers with essential information and practical advice for navigating the property market in 2024.</p>\n      \n      <h2>Current Market Conditions for First-Time Buyers</h2>\n      <p>The 2024 market presents a mixed picture for first-time buyers. While price growth has moderated to 2.3% nationally, affordability remains challenging in many areas. However, various government schemes and competitive mortgage products designed specifically for first-time buyers offer valuable support.</p>\n      \n      <h2>Financial Preparation</h2>\n      <h3>Saving for a Deposit</h3>\n      <p>The average first-time buyer deposit currently stands at £53,000, though this varies significantly by region. We recommend:</p>\n      <ul>\n        <li>Setting up a dedicated savings account</li>\n        <li>Considering a Lifetime ISA to benefit from government bonuses</li>\n        <li>Exploring family support options including gifted deposits</li>\n      </ul>\n      \n      <h3>Mortgage Options</h3>\n      <p>Several mortgage products cater specifically to first-time buyers:</p>\n      <ul>\n        <li>95% LTV mortgages with government guarantees</li>\n        <li>Longer-term mortgages (up to 35 years) to improve affordability</li>\n        <li>Joint borrower sole proprietor mortgages for family assistance</li>\n        <li>Green mortgages offering preferential rates for energy-efficient properties</li>\n      </ul>\n      \n      <h2>Government Schemes</h2>\n      <p>Several programs exist to help first-time buyers:</p>\n      <ul>\n        <li>First Homes scheme - discounted properties for local first-time buyers</li>\n        <li>Shared Ownership - buy a portion of a property and pay rent on the remainder</li>\n        <li>Help to Build - support for self-builders and custom home projects</li>\n      </ul>\n      \n      <h2>The Buying Process</h2>\n      <ol>\n        <li>Establish your budget and secure a mortgage in principle</li>\n        <li>Research areas and property types within your price range</li>\n        <li>View properties and make an offer</li>\n        <li>Instruct a solicitor and arrange surveys</li>\n        <li>Exchange contracts and complete the purchase</li>\n      </ol>\n      \n      <h2>Common Pitfalls to Avoid</h2>\n      <p>First-time buyers should be aware of these common mistakes:</p>\n      <ul>\n        <li>Overlooking additional costs such as stamp duty, legal fees, and moving expenses</li>\n        <li>Neglecting to research the local area thoroughly</li>\n        <li>Skipping professional surveys to save money</li>\n        <li>Stretching finances too thin without maintaining a financial cushion</li>\n      </ul>\n      \n      <h2>Conclusion</h2>\n      <p>While the process of buying your first home can seem daunting, careful preparation and the right support can make it manageable. Current market conditions offer a balanced environment for first-time buyers, with various support mechanisms available to help you take that important first step onto the property ladder.</p>\n    `,\n    date: \"2024-03-10\",\n    author: \"Homebuyer Advisory Team\",\n    authorBio: \"Our Homebuyer Advisory Team specializes in providing practical guidance to first-time buyers and those navigating the property market.\",\n    category: \"Guides\",\n    readTime: \"10 min read\",\n    isPremium: false,\n    relatedReports: [1, 2],\n    coverImage: \"https://images.unsplash.com/photo-1582268611958-ebfd161ef9cf?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxzZWFyY2h8MXx8aG9tZSUyMGtleXN8ZW58MHx8MHx8&w=1000&q=80\"\n  }\n];\n\nconst ReportDetailPage: React.FC = () => {\n  const { slug } = useParams<{ slug: string }>();\n  const { user, profile } = useAuth();\n  const navigate = useNavigate();\n  const [report, setReport] = useState<any | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [isSubscriptionModalOpen, setIsSubscriptionModalOpen] = useState(false);\n  const [relatedReports, setRelatedReports] = useState<any[]>([]);\n  \n  const isSubscriber = profile?.subscription_tier !== \"free\";\n\n  useEffect(() => {\n    // Simulate API call to fetch the report\n    const fetchReport = async () => {\n      setLoading(true);\n      try {\n        // In a real app, this would be an API call\n        setTimeout(() => {\n          const foundReport = reportData.find(r => r.slug === slug);\n          setReport(foundReport || null);\n          \n          // Get related reports\n          if (foundReport?.relatedReports) {\n            const related = reportData.filter(r => \n              foundReport.relatedReports.includes(r.id) && r.id !== foundReport.id\n            );\n            setRelatedReports(related);\n          }\n          \n          setLoading(false);\n        }, 800);\n      } catch (error) {\n        console.error(\"Error fetching report:\", error);\n        setLoading(false);\n      }\n    };\n    \n    if (slug) {\n      fetchReport();\n    }\n  }, [slug]);\n\n  if (loading) {\n    return (\n      <Layout>\n        <PageTransition>\n          <div className=\"container mx-auto px-4 py-8\">\n            <div className=\"max-w-3xl mx-auto\">\n              <div className=\"animate-pulse\">\n                <div className=\"h-8 bg-muted rounded w-3/4 mb-4\"></div>\n                <div className=\"h-4 bg-muted rounded w-1/4 mb-8\"></div>\n                <div className=\"h-64 bg-muted rounded mb-6\"></div>\n                <div className=\"space-y-3\">\n                  <div className=\"h-4 bg-muted rounded\"></div>\n                  <div className=\"h-4 bg-muted rounded\"></div>\n                  <div className=\"h-4 bg-muted rounded w-5/6\"></div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </PageTransition>\n      </Layout>\n    );\n  }\n\n  if (!report) {\n    return (\n      <Layout>\n        <PageTransition>\n          <div className=\"container mx-auto px-4 py-8\">\n            <div className=\"max-w-3xl mx-auto text-center\">\n              <FileText className=\"h-16 w-16 mx-auto text-muted-foreground mb-4\" />\n              <h2 className=\"text-2xl font-bold mb-2\">Report Not Found</h2>\n              <p className=\"text-muted-foreground mb-6\">\n                The report you're looking for doesn't exist or has been removed.\n              </p>\n              <Button onClick={() => navigate('/research')}>\n                Return to Research\n              </Button>\n            </div>\n          </div>\n        </PageTransition>\n      </Layout>\n    );\n  }\n\n  // Check if premium content is accessible\n  const canAccessContent = !report.isPremium || isSubscriber;\n\n  return (\n    <Layout>\n      <PageTransition>\n        <div className=\"container mx-auto px-4 py-8\">\n          <div className=\"max-w-3xl mx-auto\">\n            <Button \n              variant=\"outline\" \n              size=\"sm\" \n              className=\"mb-6\" \n              onClick={() => navigate('/research')}\n            >\n              <ArrowLeft className=\"h-4 w-4 mr-2\" />\n              Back to Research\n            </Button>\n\n            <div className=\"mb-8\">\n              <h1 className=\"text-3xl sm:text-4xl font-bold mb-4\">{report.title}</h1>\n              \n              <div className=\"flex flex-wrap gap-3 mb-6\">\n                <div className=\"flex items-center text-sm text-muted-foreground\">\n                  <Calendar className=\"h-4 w-4 mr-1\" />\n                  {formatDate(new Date(report.date))}\n                </div>\n                <div className=\"flex items-center text-sm text-muted-foreground\">\n                  <User className=\"h-4 w-4 mr-1\" />\n                  {report.author}\n                </div>\n                <div className=\"flex items-center text-sm text-muted-foreground\">\n                  <Tag className=\"h-4 w-4 mr-1\" />\n                  {report.category}\n                </div>\n                <div className=\"flex items-center text-sm text-muted-foreground\">\n                  <FileText className=\"h-4 w-4 mr-1\" />\n                  {report.readTime}\n                </div>\n              </div>\n              \n              <div className=\"relative aspect-[16/9] rounded-lg overflow-hidden mb-8\">\n                <img \n                  src={report.coverImage} \n                  alt={report.title} \n                  className=\"w-full h-full object-cover\"\n                />\n              </div>\n              \n              <div className=\"text-lg mb-6\">\n                <p className=\"font-medium\">{report.summary}</p>\n              </div>\n              \n              {canAccessContent ? (\n                <>\n                  <div \n                    className=\"prose max-w-none\" \n                    dangerouslySetInnerHTML={{ __html: report.content }}\n                  />\n                  \n                  <div className=\"flex justify-between items-center mt-12 pt-6 border-t\">\n                    <Button variant=\"outline\" onClick={() => window.print()}>\n                      <Download className=\"h-4 w-4 mr-2\" />\n                      Download PDF\n                    </Button>\n                    <div className=\"flex space-x-2\">\n                      <Button variant=\"outline\" size=\"icon\">\n                        <Share2 className=\"h-4 w-4\" />\n                      </Button>\n                      <Button variant=\"outline\" size=\"icon\">\n                        <Bookmark className=\"h-4 w-4\" />\n                      </Button>\n                    </div>\n                  </div>\n                </>\n              ) : (\n                <div className=\"bg-muted p-8 rounded-lg text-center my-12\">\n                  <PenSquare className=\"h-12 w-12 mx-auto text-primary mb-4\" />\n                  <h3 className=\"text-xl font-semibold mb-2\">Premium Content</h3>\n                  <p className=\"text-muted-foreground mb-6 max-w-md mx-auto\">\n                    This research report is available exclusively to Pro and Premium subscribers.\n                  </p>\n                  <Button onClick={() => setIsSubscriptionModalOpen(true)}>\n                    Upgrade to Access\n                  </Button>\n                </div>\n              )}\n            </div>\n\n            {/* Author section */}\n            <div className=\"border-t border-b py-6 my-8\">\n              <h3 className=\"font-semibold mb-2\">About the Author</h3>\n              <p className=\"text-sm text-muted-foreground\">{report.authorBio}</p>\n            </div>\n            \n            {/* Related reports */}\n            {relatedReports.length > 0 && (\n              <div className=\"my-8\">\n                <h3 className=\"text-xl font-semibold mb-4\">Related Reports</h3>\n                <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-4\">\n                  {relatedReports.map((relatedReport) => (\n                    <div \n                      key={relatedReport.id} \n                      className=\"border rounded-lg p-4 hover:border-primary transition-colors cursor-pointer\"\n                      onClick={() => navigate(`/research/reports/${relatedReport.slug}`)}\n                    >\n                      <h4 className=\"font-medium mb-2\">{relatedReport.title}</h4>\n                      <p className=\"text-sm text-muted-foreground mb-2 line-clamp-2\">\n                        {relatedReport.summary}\n                      </p>\n                      <div className=\"flex items-center text-xs text-muted-foreground\">\n                        <Calendar className=\"h-3 w-3 mr-1\" />\n                        {formatDate(new Date(relatedReport.date))}\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            )}\n          </div>\n        </div>\n      </PageTransition>\n      \n      <SubscriptionModal\n        isOpen={isSubscriptionModalOpen}\n        onClose={() => setIsSubscriptionModalOpen(false)}\n        currentUser={user}\n        userProfile={profile}\n      />\n    </Layout>\n  );\n};\n\nexport default ReportDetailPage; ","import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { z } from 'zod';\nimport { useForm } from 'react-hook-form';\nimport { zodResolver } from '@hookform/resolvers/zod';\nimport { Button } from './ui/button';\nimport { Input } from './ui/input';\nimport { Label } from './ui/label';\nimport { useToast } from './ui/use-toast';\nimport { Card } from './ui/card';\nimport { supabase } from '../lib/supabase';\nimport { useAuth } from '../lib/auth';\nimport { ChevronRight, ArrowRight, Mail, ShieldCheck, Zap } from 'lucide-react';\n\n// Validation schema for the email form\nconst formSchema = z.object({\n  email: z.string().email({ message: 'Please enter a valid email address' }),\n});\n\ntype FormValues = z.infer<typeof formSchema>;\n\nexport default function WaitlistPage() {\n  const { toast } = useToast();\n  const navigate = useNavigate();\n  const auth = useAuth(); // Get the full auth object\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [isSubmitted, setIsSubmitted] = useState(false);\n  const [showDevAuth, setShowDevAuth] = useState(false);\n  const [loginEmail, setLoginEmail] = useState('');\n  const [loginPassword, setLoginPassword] = useState('');\n  const [isLoggingIn, setIsLoggingIn] = useState(false);\n\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm<FormValues>({\n    resolver: zodResolver(formSchema),\n  });\n\n  const onSubmit = async (data: FormValues) => {\n    setIsSubmitting(true);\n    \n    try {\n      // Store the email in Supabase waitlist table\n      const { error } = await supabase\n        .from('waitlist')\n        .insert([\n          { email: data.email, signed_up_at: new Date().toISOString() }\n        ]);\n        \n      if (error) {\n        if (error.code === '23505') { // Unique constraint violation\n          toast({\n            title: \"You're already on the waitlist\",\n            description: \"We already have your email on our waitlist. We'll notify you when you're invited to the alpha.\",\n            variant: \"default\",\n          });\n        } else {\n          console.error('Error submitting to waitlist:', error);\n          toast({\n            title: \"Submission error\",\n            description: \"There was a problem adding you to the waitlist. Please try again.\",\n            variant: \"destructive\",\n          });\n        }\n      } else {\n        setIsSubmitted(true);\n        toast({\n          title: \"You're on the list!\",\n          description: \"Thanks for joining our waitlist. We'll notify you when you're invited to the alpha.\",\n          variant: \"default\",\n        });\n      }\n    } catch (error) {\n      console.error('Submission error:', error);\n      toast({\n        title: \"Submission error\",\n        description: \"There was a problem adding you to the waitlist. Please try again.\",\n        variant: \"destructive\",\n      });\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  // Handle email login\n  const handleEmailLogin = async (e: React.FormEvent) => {\n    e.preventDefault();\n    \n    if (!loginEmail || !loginPassword) {\n      toast({\n        title: \"Missing information\",\n        description: \"Please enter both email and password.\",\n        variant: \"destructive\",\n      });\n      return;\n    }\n    \n    try {\n      setIsLoggingIn(true);\n      \n      // Direct Supabase auth login with persist session option\n      const { data, error } = await supabase.auth.signInWithPassword({\n        email: loginEmail,\n        password: loginPassword,\n        options: {\n          // These options help ensure the session persists properly\n          persistSession: true\n        }\n      });\n      \n      if (error) throw error;\n      \n      toast({\n        title: \"Signed in successfully\",\n        description: \"Welcome to VGE Alpha.\",\n        variant: \"default\",\n      });\n      \n      // Store a login flag in localStorage\n      localStorage.setItem('vge_user_authenticated', 'true');\n      localStorage.setItem('vge_auth_timestamp', Date.now().toString());\n      \n      // Ensure the session was created properly\n      console.log(\"Login success, session established:\", !!data.session);\n      \n      // Completely reload the application rather than just navigating\n      // This forces a clean auth state reload\n      window.location.href = '/';\n    } catch (error: any) {\n      console.error('Sign in error:', error);\n      toast({\n        title: \"Authentication error\",\n        description: error.message || \"There was a problem signing in. Please try again.\",\n        variant: \"destructive\",\n      });\n    } finally {\n      setIsLoggingIn(false);\n    }\n  };\n\n  // Handle Google login\n  const handleGoogleLogin = async () => {\n    try {\n      // Use direct Supabase auth\n      const { error } = await supabase.auth.signInWithOAuth({\n        provider: 'google',\n        options: {\n          redirectTo: window.location.origin + '/auth/callback',\n          persistSession: true\n        }\n      });\n      \n      if (error) throw error;\n      \n      // The OAuth callback will handle the redirect\n    } catch (error) {\n      console.error('Google sign-in error:', error);\n      toast({\n        title: \"Authentication error\",\n        description: \"There was a problem signing in with Google. Please try again.\",\n        variant: \"destructive\",\n      });\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen bg-background flex flex-col\">\n      {/* Header */}\n      <header className=\"border-b border-border py-4 px-6\">\n        <div className=\"container mx-auto flex justify-between items-center\">\n          <div className=\"flex items-center\">\n            {/* Use the logo from the rest of the app */}\n            <div className=\"h-8 mr-2\">\n              {/* App Logo - Using a simple text logo as a fallback */}\n              <img \n                src=\"/logo.svg\" \n                alt=\"VGE Alpha\" \n                className=\"h-full\"\n                onError={(e) => {\n                  // If logo fails to load, fall back to text\n                  const target = e.target as HTMLImageElement;\n                  target.style.display = 'none';\n                  target.parentElement!.innerHTML += `<span class=\"font-bold text-2xl text-primary\">VGE Alpha</span>`;\n                }}\n              />\n            </div>\n          </div>\n          <Button \n            variant=\"ghost\" \n            onClick={() => setShowDevAuth(!showDevAuth)} \n            size=\"sm\"\n          >\n            {showDevAuth ? 'Hide Developer Access' : 'Developer Access'}\n          </Button>\n        </div>\n      </header>\n\n      {/* Main Content */}\n      <main className=\"flex-grow container mx-auto px-4 py-10 flex flex-col items-center justify-center\">\n        <div className=\"w-full max-w-5xl grid grid-cols-1 md:grid-cols-2 gap-10 items-start\">\n          {/* Left Column - Main Content */}\n          <div className=\"space-y-6\">\n            <div className=\"space-y-4\">\n              <h1 className=\"text-3xl md:text-4xl font-bold text-foreground leading-tight\">\n                Property Investment Analytics Platform\n              </h1>\n              <p className=\"text-lg text-muted-foreground\">\n                Discover high-yield investment properties, analyze market trends, and make data-driven decisions.\n              </p>\n            </div>\n            \n            <div className=\"space-y-6\">\n              <Card className=\"p-6 border-muted shadow-sm\">\n                <h2 className=\"text-xl font-semibold mb-4 text-foreground\">\n                  {isSubmitted ? 'Thanks for joining our waitlist!' : 'Join our waitlist'}\n                </h2>\n                \n                {!isSubmitted ? (\n                  <form onSubmit={handleSubmit(onSubmit)} className=\"space-y-4\">\n                    <div className=\"space-y-2\">\n                      <Label htmlFor=\"email\">Email Address</Label>\n                      <div className=\"relative\">\n                        <Mail className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-muted-foreground h-4 w-4\" />\n                        <Input\n                          id=\"email\"\n                          placeholder=\"you@example.com\"\n                          className=\"pl-10\"\n                          autoComplete=\"email\"\n                          {...register('email')}\n                        />\n                      </div>\n                      {errors.email && (\n                        <p className=\"text-sm text-destructive\">{errors.email.message}</p>\n                      )}\n                    </div>\n                    \n                    <Button\n                      type=\"submit\"\n                      className=\"w-full\"\n                      disabled={isSubmitting}\n                    >\n                      {isSubmitting ? 'Submitting...' : 'Join Waitlist'}\n                      <ChevronRight className=\"ml-2 h-4 w-4\" />\n                    </Button>\n                    \n                    <p className=\"text-xs text-muted-foreground text-center mt-2\">\n                      We'll notify you when you're invited to our alpha release.\n                    </p>\n                  </form>\n                ) : (\n                  <div className=\"text-center space-y-4\">\n                    <div className=\"mx-auto w-16 h-16 bg-primary/10 rounded-full flex items-center justify-center\">\n                      <ShieldCheck className=\"h-8 w-8 text-primary\" />\n                    </div>\n                    <p className=\"text-muted-foreground\">\n                      We've added your email to our waitlist. We'll notify you when you're invited to try out our platform.\n                    </p>\n                  </div>\n                )}\n              </Card>\n              \n              {showDevAuth && (\n                <Card className=\"p-6 border-muted bg-muted/30 shadow-sm\">\n                  <h2 className=\"text-xl font-semibold mb-4 text-foreground flex items-center\">\n                    <Zap className=\"mr-2 h-5 w-5 text-yellow-500\" />\n                    Developer Access\n                  </h2>\n                  \n                  <form onSubmit={handleEmailLogin} className=\"space-y-4\">\n                    <div className=\"space-y-2\">\n                      <Label htmlFor=\"loginEmail\">Email</Label>\n                      <Input\n                        id=\"loginEmail\"\n                        type=\"email\"\n                        placeholder=\"developer@vgealpha.com\"\n                        autoComplete=\"email\"\n                        value={loginEmail}\n                        onChange={(e) => setLoginEmail(e.target.value)}\n                        required\n                      />\n                    </div>\n                    \n                    <div className=\"space-y-2\">\n                      <Label htmlFor=\"loginPassword\">Password</Label>\n                      <Input\n                        id=\"loginPassword\"\n                        type=\"password\"\n                        placeholder=\"••••••••\"\n                        autoComplete=\"current-password\"\n                        value={loginPassword}\n                        onChange={(e) => setLoginPassword(e.target.value)}\n                        required\n                      />\n                    </div>\n                    \n                    <Button\n                      type=\"submit\"\n                      className=\"w-full\"\n                      disabled={isLoggingIn}\n                    >\n                      {isLoggingIn ? 'Signing in...' : 'Sign in with Email'}\n                    </Button>\n                  </form>\n                  \n\n                </Card>\n              )}\n            </div>\n            \n            {/* Features section for mobile - will only show on small screens */}\n            <div className=\"md:hidden mt-10\">\n              <Card className=\"p-6 border-muted\">\n                <h3 className=\"text-lg font-semibold text-foreground mb-4\">Platform Features</h3>\n                <div className=\"space-y-4\">\n                  <FeatureItem \n                    title=\"Property Analytics\"\n                    description=\"Comprehensive analysis of potential investments\"\n                    color=\"bg-blue-500\"\n                  />\n                  \n                  <FeatureItem \n                    title=\"Market Trends\"\n                    description=\"Up-to-date information on property market changes\"\n                    color=\"bg-green-500\"\n                  />\n                  \n                  <FeatureItem \n                    title=\"Investment ROI\"\n                    description=\"Calculate potential returns on property investments\"\n                    color=\"bg-purple-500\"\n                  />\n                  \n                  <FeatureItem \n                    title=\"AI Recommendations\"\n                    description=\"Smart suggestions based on your investment criteria\"\n                    color=\"bg-orange-500\"\n                  />\n                </div>\n              </Card>\n            </div>\n          </div>\n          \n          {/* Right Column - Features (desktop only) */}\n          <div className=\"hidden md:block\">\n            <div className=\"relative rounded-lg overflow-hidden border border-border shadow-md\">\n              <div className=\"aspect-video bg-muted p-6 flex flex-col justify-center\">\n                <h3 className=\"text-xl font-semibold text-foreground mb-4\">Features</h3>\n                \n                <div className=\"space-y-4\">\n                  <FeatureItem \n                    title=\"Property Analytics\"\n                    description=\"Comprehensive analysis of potential investments\"\n                    color=\"bg-blue-500\"\n                  />\n                  \n                  <FeatureItem \n                    title=\"Market Trends\"\n                    description=\"Up-to-date information on property market changes\"\n                    color=\"bg-green-500\"\n                  />\n                  \n                  <FeatureItem \n                    title=\"Investment ROI\"\n                    description=\"Calculate potential returns on property investments\"\n                    color=\"bg-purple-500\"\n                  />\n                  \n                  <FeatureItem \n                    title=\"AI Recommendations\"\n                    description=\"Smart suggestions based on your investment criteria\"\n                    color=\"bg-orange-500\"\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </main>\n    </div>\n  );\n}\n\n// Feature Item component for the features list\nfunction FeatureItem({ title, description, color }: { title: string; description: string; color: string }) {\n  return (\n    <div className=\"flex items-start space-x-3\">\n      <div className={`${color} h-5 w-1 rounded-full mt-1`} />\n      <div>\n        <h4 className=\"font-medium text-foreground\">{title}</h4>\n        <p className=\"text-sm text-muted-foreground\">{description}</p>\n      </div>\n    </div>\n  );\n} ","import { useState, useEffect } from 'react';\nimport { supabase } from '../lib/supabase';\nimport { useAuth } from '../lib/auth';\nimport { Tables } from '../types/supabase';\n\nexport type ReportRequest = Tables<'report_requests'>;\ntype ReportRequestWithUser = ReportRequest & {\n  profiles: {\n    full_name: string | null;\n    email: string | null;\n  } | null;\n};\n\nexport const useReportRequests = () => {\n  const { user } = useAuth();\n  const [loading, setLoading] = useState(true);\n  const [reports, setReports] = useState<ReportRequestWithUser[]>([]);\n  const [error, setError] = useState<string | null>(null);\n\n  const fetchReportRequests = async () => {\n    if (!user) return;\n    \n    try {\n      setLoading(true);\n      setError(null);\n      \n      // First, try to fetch using the simple .eq approach\n      const { data, error } = await supabase\n        .from('report_requests')\n        .select('*')\n        .eq('user_id', user.id)\n        .order('created_at', { ascending: false });\n      \n      if (error) throw error;\n      \n      // Then, get profile info separately and combine\n      const { data: profileData, error: profileError } = await supabase\n        .from('profiles')\n        .select('id, full_name, email')\n        .eq('id', user.id)\n        .single();\n        \n      if (profileError) {\n        console.warn('Error fetching profile data:', profileError);\n      }\n      \n      // Combine the data\n      const reportsWithProfiles = data.map(report => ({\n        ...report,\n        profiles: profileData ? {\n          full_name: profileData.full_name,\n          email: profileData.email\n        } : null\n      }));\n      \n      setReports(reportsWithProfiles);\n    } catch (err: any) {\n      console.error('Error fetching report requests:', err);\n      setError(err.message || 'Failed to load report requests');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const createReportRequest = async (title: string, description: string) => {\n    if (!user) return null;\n    \n    try {\n      setLoading(true);\n      setError(null);\n      \n      const { data, error } = await supabase\n        .from('report_requests')\n        .insert([\n          { \n            user_id: user.id,\n            title,\n            description\n          }\n        ])\n        .select('*')\n        .single();\n      \n      if (error) throw error;\n      \n      // Refresh the list\n      await fetchReportRequests();\n      \n      return data;\n    } catch (err: any) {\n      console.error('Error creating report request:', err);\n      setError(err.message || 'Failed to create report request');\n      return null;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const downloadReport = async (reportId: string) => {\n    try {\n      setLoading(true);\n      setError(null);\n      \n      // First get the report details to get the file URL\n      const { data: report, error: reportError } = await supabase\n        .from('report_requests')\n        .select('file_url, file_name')\n        .eq('id', reportId)\n        .eq('user_id', user?.id)\n        .single();\n      \n      if (reportError) throw reportError;\n      \n      if (!report?.file_url) {\n        throw new Error('No file is available for download');\n      }\n      \n      // Create a link element and trigger download\n      const link = document.createElement('a');\n      link.href = report.file_url;\n      link.download = report.file_name || 'report.pdf';\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n      \n      return true;\n    } catch (err: any) {\n      console.error('Error downloading report:', err);\n      setError(err.message || 'Failed to download report');\n      return false;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // For admin functionality - get all reports \n  const getAllReportRequests = async () => {\n    if (!user) return [];\n    \n    try {\n      setLoading(true);\n      setError(null);\n      \n      // First get all reports\n      const { data, error } = await supabase\n        .from('report_requests')\n        .select('*')\n        .order('created_at', { ascending: false });\n      \n      if (error) throw error;\n      \n      // Then get all profiles to join manually\n      const { data: profilesData, error: profilesError } = await supabase\n        .from('profiles')\n        .select('id, full_name, email');\n        \n      if (profilesError) {\n        console.warn('Error fetching profiles data:', profilesError);\n      }\n      \n      // Create a map of profiles by id for quick lookup\n      const profilesMap = (profilesData || []).reduce((map, profile) => {\n        if (profile.id) {\n          map[profile.id] = profile;\n        }\n        return map;\n      }, {} as Record<string, typeof profilesData[0]>);\n      \n      // Join reports with profiles\n      const reportsWithProfiles = data.map(report => ({\n        ...report,\n        profiles: report.user_id && profilesMap[report.user_id] \n          ? {\n              full_name: profilesMap[report.user_id].full_name,\n              email: profilesMap[report.user_id].email\n            }\n          : null\n      }));\n      \n      return reportsWithProfiles;\n    } catch (err: any) {\n      console.error('Error fetching all report requests:', err);\n      setError(err.message || 'Failed to load all report requests');\n      return [];\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // For admin functionality - update report status\n  const updateReportStatus = async (reportId: string, status: ReportRequest['status'], notes?: string) => {\n    try {\n      setLoading(true);\n      setError(null);\n      \n      const updates: any = { status };\n      \n      if (notes) {\n        updates.notes = notes;\n      }\n      \n      if (status === 'completed') {\n        updates.completed_at = new Date().toISOString();\n      }\n      \n      const { error } = await supabase\n        .from('report_requests')\n        .update(updates)\n        .eq('id', reportId);\n      \n      if (error) throw error;\n      \n      // Refresh the list\n      await fetchReportRequests();\n      \n      return true;\n    } catch (err: any) {\n      console.error('Error updating report status:', err);\n      setError(err.message || 'Failed to update report status');\n      return false;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Upload file to Supabase storage and link it to the report\n  const uploadReportFile = async (reportId: string, file: File) => {\n    if (!user) return false;\n    \n    try {\n      setLoading(true);\n      setError(null);\n      \n      // Create a unique file path\n      const fileExt = file.name.split('.').pop();\n      const fileName = `${reportId}-${Date.now()}.${fileExt}`;\n      const filePath = `${user.id}/${fileName}`;\n      \n      // Upload to Supabase storage\n      const { error: uploadError } = await supabase.storage\n        .from('report_files')\n        .upload(filePath, file, {\n          cacheControl: '3600',\n          upsert: true\n        });\n      \n      if (uploadError) throw uploadError;\n      \n      // Get public URL\n      const { data: { publicUrl } } = supabase.storage\n        .from('report_files')\n        .getPublicUrl(filePath);\n      \n      // Update the report record with the file URL\n      const { error: updateError } = await supabase\n        .from('report_requests')\n        .update({\n          file_url: publicUrl,\n          file_name: file.name,\n          status: 'completed',\n          completed_at: new Date().toISOString()\n        })\n        .eq('id', reportId);\n      \n      if (updateError) throw updateError;\n      \n      // Refresh the list\n      await fetchReportRequests();\n      \n      return true;\n    } catch (err: any) {\n      console.error('Error uploading report file:', err);\n      setError(err.message || 'Failed to upload report file');\n      return false;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Load reports when the component mounts or user changes\n  useEffect(() => {\n    if (user) {\n      fetchReportRequests();\n    }\n  }, [user]);\n\n  return {\n    reports,\n    loading,\n    error,\n    fetchReportRequests,\n    createReportRequest,\n    downloadReport,\n    getAllReportRequests,\n    updateReportStatus,\n    uploadReportFile\n  };\n}; ","import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n))\nTable.displayName = \"Table\"\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableFooter.displayName = \"TableFooter\"\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nTableRow.displayName = \"TableRow\"\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-10 px-2 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0 [&>[role=checkbox]]:translate-y-[2px]\",\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\n      \"p-2 align-middle [&:has([role=checkbox])]:pr-0 [&>[role=checkbox]]:translate-y-[2px]\",\n      className\n    )}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nTableCaption.displayName = \"TableCaption\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n","import * as React from \"react\"\nimport * as AlertDialogPrimitive from \"@radix-ui/react-alert-dialog\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nconst AlertDialog = AlertDialogPrimitive.Root\n\nconst AlertDialogTrigger = AlertDialogPrimitive.Trigger\n\nconst AlertDialogPortal = AlertDialogPrimitive.Portal\n\nconst AlertDialogOverlay = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nAlertDialogOverlay.displayName = AlertDialogPrimitive.Overlay.displayName\n\nconst AlertDialogContent = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPortal>\n    <AlertDialogOverlay />\n    <AlertDialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    />\n  </AlertDialogPortal>\n))\nAlertDialogContent.displayName = AlertDialogPrimitive.Content.displayName\n\nconst AlertDialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogHeader.displayName = \"AlertDialogHeader\"\n\nconst AlertDialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogFooter.displayName = \"AlertDialogFooter\"\n\nconst AlertDialogTitle = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold\", className)}\n    {...props}\n  />\n))\nAlertDialogTitle.displayName = AlertDialogPrimitive.Title.displayName\n\nconst AlertDialogDescription = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nAlertDialogDescription.displayName =\n  AlertDialogPrimitive.Description.displayName\n\nconst AlertDialogAction = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Action>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Action>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Action\n    ref={ref}\n    className={cn(buttonVariants(), className)}\n    {...props}\n  />\n))\nAlertDialogAction.displayName = AlertDialogPrimitive.Action.displayName\n\nconst AlertDialogCancel = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Cancel>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Cancel>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Cancel\n    ref={ref}\n    className={cn(\n      buttonVariants({ variant: \"outline\" }),\n      \"mt-2 sm:mt-0\",\n      className\n    )}\n    {...props}\n  />\n))\nAlertDialogCancel.displayName = AlertDialogPrimitive.Cancel.displayName\n\nexport {\n  AlertDialog,\n  AlertDialogPortal,\n  AlertDialogOverlay,\n  AlertDialogTrigger,\n  AlertDialogContent,\n  AlertDialogHeader,\n  AlertDialogFooter,\n  AlertDialogTitle,\n  AlertDialogDescription,\n  AlertDialogAction,\n  AlertDialogCancel,\n}\n","import * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport {\n  Controller,\n  ControllerProps,\n  FieldPath,\n  FieldValues,\n  FormProvider,\n  useFormContext,\n} from \"react-hook-form\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Label } from \"@/components/ui/label\"\n\nconst Form = FormProvider\n\ntype FormFieldContextValue<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n> = {\n  name: TName\n}\n\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\n  {} as FormFieldContextValue\n)\n\nconst FormField = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n>({\n  ...props\n}: ControllerProps<TFieldValues, TName>) => {\n  return (\n    <FormFieldContext.Provider value={{ name: props.name }}>\n      <Controller {...props} />\n    </FormFieldContext.Provider>\n  )\n}\n\nconst useFormField = () => {\n  const fieldContext = React.useContext(FormFieldContext)\n  const itemContext = React.useContext(FormItemContext)\n  const { getFieldState, formState } = useFormContext()\n\n  const fieldState = getFieldState(fieldContext.name, formState)\n\n  if (!fieldContext) {\n    throw new Error(\"useFormField should be used within <FormField>\")\n  }\n\n  const { id } = itemContext\n\n  return {\n    id,\n    name: fieldContext.name,\n    formItemId: `${id}-form-item`,\n    formDescriptionId: `${id}-form-item-description`,\n    formMessageId: `${id}-form-item-message`,\n    ...fieldState,\n  }\n}\n\ntype FormItemContextValue = {\n  id: string\n}\n\nconst FormItemContext = React.createContext<FormItemContextValue>(\n  {} as FormItemContextValue\n)\n\nconst FormItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const id = React.useId()\n\n  return (\n    <FormItemContext.Provider value={{ id }}>\n      <div ref={ref} className={cn(\"space-y-2\", className)} {...props} />\n    </FormItemContext.Provider>\n  )\n})\nFormItem.displayName = \"FormItem\"\n\nconst FormLabel = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  const { error, formItemId } = useFormField()\n\n  return (\n    <Label\n      ref={ref}\n      className={cn(error && \"text-destructive\", className)}\n      htmlFor={formItemId}\n      {...props}\n    />\n  )\n})\nFormLabel.displayName = \"FormLabel\"\n\nconst FormControl = React.forwardRef<\n  React.ElementRef<typeof Slot>,\n  React.ComponentPropsWithoutRef<typeof Slot>\n>(({ ...props }, ref) => {\n  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()\n\n  return (\n    <Slot\n      ref={ref}\n      id={formItemId}\n      aria-describedby={\n        !error\n          ? `${formDescriptionId}`\n          : `${formDescriptionId} ${formMessageId}`\n      }\n      aria-invalid={!!error}\n      {...props}\n    />\n  )\n})\nFormControl.displayName = \"FormControl\"\n\nconst FormDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => {\n  const { formDescriptionId } = useFormField()\n\n  return (\n    <p\n      ref={ref}\n      id={formDescriptionId}\n      className={cn(\"text-[0.8rem] text-muted-foreground\", className)}\n      {...props}\n    />\n  )\n})\nFormDescription.displayName = \"FormDescription\"\n\nconst FormMessage = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, children, ...props }, ref) => {\n  const { error, formMessageId } = useFormField()\n  const body = error ? String(error?.message) : children\n\n  if (!body) {\n    return null\n  }\n\n  return (\n    <p\n      ref={ref}\n      id={formMessageId}\n      className={cn(\"text-[0.8rem] font-medium text-destructive\", className)}\n      {...props}\n    >\n      {body}\n    </p>\n  )\n})\nFormMessage.displayName = \"FormMessage\"\n\nexport {\n  useFormField,\n  Form,\n  FormItem,\n  FormLabel,\n  FormControl,\n  FormDescription,\n  FormMessage,\n  FormField,\n}\n","import React, { useState } from 'react';\n// import { Helmet } from 'react-helmet';  // We'll remove this line temporarily until the package is installed\nimport { useAuth } from '../lib/auth';\nimport { useReportRequests, ReportRequest } from '../hooks/useReportRequests';\nimport { \n  Card, \n  CardContent, \n  CardDescription, \n  CardFooter, \n  CardHeader, \n  CardTitle \n} from '../components/ui/card';\nimport { Button } from '../components/ui/button';\nimport { Input } from '../components/ui/input';\nimport { Textarea } from '../components/ui/textarea';\nimport { \n  Dialog, \n  DialogContent, \n  DialogDescription, \n  DialogFooter, \n  DialogHeader, \n  DialogTitle, \n  DialogTrigger \n} from '../components/ui/dialog';\nimport { \n  Table, \n  TableBody, \n  TableCaption, \n  TableCell, \n  TableHead, \n  TableHeader, \n  TableRow \n} from '../components/ui/table';\nimport { \n  AlertDialog,\n  AlertDialogAction,\n  AlertDialogCancel,\n  AlertDialogContent,\n  AlertDialogDescription,\n  AlertDialogFooter,\n  AlertDialogHeader,\n  AlertDialogTitle,\n  AlertDialogTrigger,\n} from '../components/ui/alert-dialog';\nimport { \n  Form, \n  FormControl, \n  FormDescription, \n  FormField, \n  FormItem, \n  FormLabel, \n  FormMessage \n} from '../components/ui/form';\nimport { useToast } from '../components/ui/use-toast';\nimport { \n  Clock, \n  Download, \n  FileText, \n  CheckCircle2, \n  AlertCircle, \n  Loader2, \n  PlusCircle \n} from 'lucide-react';\nimport { formatDistanceToNow } from 'date-fns';\nimport { z } from 'zod';\nimport { useForm } from 'react-hook-form';\nimport { zodResolver } from '@hookform/resolvers/zod';\nimport { Badge } from '../components/ui/badge';\n\n// Form schema for creating a new report request\nconst reportRequestSchema = z.object({\n  title: z.string().min(3, \"Title must be at least 3 characters\").max(100, \"Title cannot exceed 100 characters\"),\n  description: z.string().min(10, \"Description must be at least 10 characters\").max(2000, \"Description cannot exceed 2000 characters\"),\n});\n\ntype ReportRequestFormValues = z.infer<typeof reportRequestSchema>;\n\nexport default function ResearchAndReports() {\n  const { user, profile } = useAuth();\n  const { \n    reports, \n    loading, \n    error, \n    createReportRequest, \n    downloadReport,\n    fetchReportRequests \n  } = useReportRequests();\n  const [isRequestDialogOpen, setIsRequestDialogOpen] = useState(false);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const { toast } = useToast();\n\n  // Initialize form with react-hook-form and zod validation\n  const form = useForm<ReportRequestFormValues>({\n    resolver: zodResolver(reportRequestSchema),\n    defaultValues: {\n      title: '',\n      description: '',\n    },\n  });\n\n  const onSubmit = async (data: ReportRequestFormValues) => {\n    if (!user) {\n      toast({\n        title: \"Authentication required\",\n        description: \"You must be logged in to request a report.\",\n        variant: \"destructive\",\n      });\n      return;\n    }\n\n    try {\n      setIsSubmitting(true);\n      \n      const result = await createReportRequest(data.title, data.description);\n      \n      if (result) {\n        toast({\n          title: \"Report request submitted\",\n          description: \"Your research report request has been submitted successfully.\",\n        });\n        \n        form.reset();\n        setIsRequestDialogOpen(false);\n      } else {\n        throw new Error(\"Failed to create report request\");\n      }\n    } catch (err: any) {\n      toast({\n        title: \"Error submitting request\",\n        description: err.message || \"There was a problem submitting your request. Please try again.\",\n        variant: \"destructive\",\n      });\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  const handleDownloadReport = async (reportId: string) => {\n    try {\n      const success = await downloadReport(reportId);\n      \n      if (!success) {\n        toast({\n          title: \"Download failed\",\n          description: \"The report file couldn't be downloaded. Please try again later.\",\n          variant: \"destructive\",\n        });\n      }\n    } catch (err: any) {\n      toast({\n        title: \"Error downloading report\",\n        description: err.message || \"There was a problem downloading the report. Please try again.\",\n        variant: \"destructive\",\n      });\n    }\n  };\n\n  // Function to get badge color based on status\n  const getStatusBadge = (status: ReportRequest['status']) => {\n    switch (status) {\n      case 'completed':\n        return <Badge className=\"bg-green-500\">Completed</Badge>;\n      case 'in_progress':\n        return <Badge className=\"bg-blue-500\">In Progress</Badge>;\n      case 'rejected':\n        return <Badge className=\"bg-red-500\">Rejected</Badge>;\n      case 'pending':\n      default:\n        return <Badge className=\"bg-yellow-500\">Pending</Badge>;\n    }\n  };\n\n  // Render a message if the user is not logged in\n  if (!user) {\n    return (\n      <div className=\"container mx-auto py-10\">\n        <Card>\n          <CardHeader>\n            <CardTitle>Research & Reports</CardTitle>\n            <CardDescription>\n              You need to be logged in to access research reports.\n            </CardDescription>\n          </CardHeader>\n          <CardContent>\n            <p>Please log in or create an account to request and view property research reports.</p>\n          </CardContent>\n        </Card>\n      </div>\n    );\n  }\n\n  return (\n    <>\n      {/* <Helmet>\n        <title>Research & Reports | VGE Alpha</title>\n        <meta name=\"description\" content=\"Request and download custom property market research reports for your investment analysis.\" />\n      </Helmet> */}\n\n      <div className=\"container mx-auto py-10 space-y-8\">\n        <div className=\"flex flex-col md:flex-row justify-between items-start md:items-center gap-4\">\n          <div>\n            <h1 className=\"text-3xl font-bold\">Research & Reports</h1>\n            <p className=\"text-muted-foreground mt-1\">\n              Request custom research reports for your property investment analysis\n            </p>\n          </div>\n          \n          <Dialog open={isRequestDialogOpen} onOpenChange={setIsRequestDialogOpen}>\n            <DialogTrigger asChild>\n              <Button className=\"flex items-center gap-2\">\n                <PlusCircle size={16} />\n                <span>Request New Report</span>\n              </Button>\n            </DialogTrigger>\n            <DialogContent className=\"sm:max-w-[500px]\">\n              <DialogHeader>\n                <DialogTitle>Request a Research Report</DialogTitle>\n                <DialogDescription>\n                  Provide details about the research report you need for your property investment analysis.\n                </DialogDescription>\n              </DialogHeader>\n              \n              <Form {...form}>\n                <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-4\">\n                  <FormField\n                    control={form.control}\n                    name=\"title\"\n                    render={({ field }) => (\n                      <FormItem>\n                        <FormLabel>Report Title</FormLabel>\n                        <FormControl>\n                          <Input \n                            placeholder=\"e.g., Manchester Rental Market Analysis\" \n                            {...field} \n                          />\n                        </FormControl>\n                        <FormDescription>\n                          A clear title describing the report you need\n                        </FormDescription>\n                        <FormMessage />\n                      </FormItem>\n                    )}\n                  />\n                  \n                  <FormField\n                    control={form.control}\n                    name=\"description\"\n                    render={({ field }) => (\n                      <FormItem>\n                        <FormLabel>Description</FormLabel>\n                        <FormControl>\n                          <Textarea \n                            placeholder=\"Please describe in detail what information you need in this report...\"\n                            className=\"min-h-[120px]\"\n                            {...field}\n                          />\n                        </FormControl>\n                        <FormDescription>\n                          Be specific about the property types, locations, and metrics you want analyzed\n                        </FormDescription>\n                        <FormMessage />\n                      </FormItem>\n                    )}\n                  />\n\n                  <DialogFooter>\n                    <Button \n                      type=\"button\" \n                      variant=\"outline\" \n                      onClick={() => setIsRequestDialogOpen(false)}\n                    >\n                      Cancel\n                    </Button>\n                    <Button \n                      type=\"submit\" \n                      disabled={isSubmitting}\n                    >\n                      {isSubmitting ? (\n                        <>\n                          <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />\n                          Submitting...\n                        </>\n                      ) : (\n                        'Submit Request'\n                      )}\n                    </Button>\n                  </DialogFooter>\n                </form>\n              </Form>\n            </DialogContent>\n          </Dialog>\n        </div>\n\n        {/* Main content */}\n        <Card>\n          <CardHeader>\n            <CardTitle>Your Report Requests</CardTitle>\n            <CardDescription>\n              View the status of your research report requests\n            </CardDescription>\n          </CardHeader>\n          <CardContent>\n            {loading ? (\n              <div className=\"flex justify-center items-center py-10\">\n                <Loader2 className=\"h-8 w-8 animate-spin text-primary\" />\n              </div>\n            ) : error ? (\n              <div className=\"text-center py-10 text-red-600\">\n                <AlertCircle className=\"h-8 w-8 mx-auto mb-2\" />\n                <p>{error}</p>\n              </div>\n            ) : reports.length === 0 ? (\n              <div className=\"text-center py-10 text-muted-foreground\">\n                <FileText className=\"h-12 w-12 mx-auto mb-4 opacity-30\" />\n                <p className=\"text-lg font-medium\">No report requests yet</p>\n                <p className=\"mt-1\">Request your first research report to get started</p>\n              </div>\n            ) : (\n              <Table>\n                <TableCaption>List of your report requests</TableCaption>\n                <TableHeader>\n                  <TableRow>\n                    <TableHead>Title</TableHead>\n                    <TableHead>Requested</TableHead>\n                    <TableHead>Status</TableHead>\n                    <TableHead className=\"text-right\">Actions</TableHead>\n                  </TableRow>\n                </TableHeader>\n                <TableBody>\n                  {reports.map((report) => (\n                    <TableRow key={report.id}>\n                      <TableCell className=\"font-medium max-w-[280px] truncate\">\n                        {report.title}\n                      </TableCell>\n                      <TableCell className=\"text-muted-foreground\">\n                        <div className=\"flex items-center gap-1\">\n                          <Clock size={14} />\n                          <span>\n                            {formatDistanceToNow(new Date(report.created_at), { addSuffix: true })}\n                          </span>\n                        </div>\n                      </TableCell>\n                      <TableCell>\n                        {getStatusBadge(report.status)}\n                      </TableCell>\n                      <TableCell className=\"text-right\">\n                        <div className=\"flex justify-end gap-2\">\n                          <AlertDialog>\n                            <AlertDialogTrigger asChild>\n                              <Button size=\"sm\" variant=\"outline\">\n                                Details\n                              </Button>\n                            </AlertDialogTrigger>\n                            <AlertDialogContent>\n                              <AlertDialogHeader>\n                                <AlertDialogTitle>{report.title}</AlertDialogTitle>\n                                <AlertDialogDescription>\n                                  <div className=\"space-y-4 mt-2\">\n                                    <div>\n                                      <p className=\"text-sm font-semibold\">Status: {report.status}</p>\n                                      <p className=\"text-sm text-muted-foreground\">\n                                        Requested: {new Date(report.created_at).toLocaleDateString()}, {new Date(report.created_at).toLocaleTimeString()}\n                                      </p>\n                                      {report.completed_at && (\n                                        <p className=\"text-sm text-muted-foreground\">\n                                          Completed: {new Date(report.completed_at).toLocaleDateString()}, {new Date(report.completed_at).toLocaleTimeString()}\n                                        </p>\n                                      )}\n                                    </div>\n                                    \n                                    <div>\n                                      <p className=\"text-sm font-semibold\">Description:</p>\n                                      <p className=\"text-sm whitespace-pre-line\">{report.description}</p>\n                                    </div>\n                                    \n                                    {report.notes && (\n                                      <div>\n                                        <p className=\"text-sm font-semibold\">Admin Notes:</p>\n                                        <p className=\"text-sm whitespace-pre-line\">{report.notes}</p>\n                                      </div>\n                                    )}\n                                  </div>\n                                </AlertDialogDescription>\n                              </AlertDialogHeader>\n                              <AlertDialogFooter>\n                                <AlertDialogCancel>Close</AlertDialogCancel>\n                                {report.status === 'completed' && report.file_url && (\n                                  <AlertDialogAction asChild>\n                                    <Button onClick={() => handleDownloadReport(report.id)}>\n                                      <Download className=\"mr-2 h-4 w-4\" />\n                                      Download Report\n                                    </Button>\n                                  </AlertDialogAction>\n                                )}\n                              </AlertDialogFooter>\n                            </AlertDialogContent>\n                          </AlertDialog>\n                          \n                          {report.status === 'completed' && report.file_url && (\n                            <Button \n                              size=\"sm\" \n                              onClick={() => handleDownloadReport(report.id)}\n                            >\n                              <Download className=\"mr-2 h-4 w-4\" />\n                              Download\n                            </Button>\n                          )}\n                        </div>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            )}\n          </CardContent>\n        </Card>\n        \n        {/* Information about report types */}\n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n          <Card>\n            <CardHeader>\n              <CardTitle className=\"text-lg flex items-center\">\n                <FileText className=\"h-5 w-5 mr-2 text-primary\" />\n                Market Analysis\n              </CardTitle>\n            </CardHeader>\n            <CardContent>\n              <p className=\"text-sm text-muted-foreground\">\n                Comprehensive analysis of property markets in specific locations, including price trends, rental yields, and growth forecasts.\n              </p>\n            </CardContent>\n          </Card>\n          \n          <Card>\n            <CardHeader>\n              <CardTitle className=\"text-lg flex items-center\">\n                <FileText className=\"h-5 w-5 mr-2 text-primary\" />\n                Investment Comparison\n              </CardTitle>\n            </CardHeader>\n            <CardContent>\n              <p className=\"text-sm text-muted-foreground\">\n                Detailed comparison of investment potential across different property types and locations to help you make informed decisions.\n              </p>\n            </CardContent>\n          </Card>\n          \n          <Card>\n            <CardHeader>\n              <CardTitle className=\"text-lg flex items-center\">\n                <FileText className=\"h-5 w-5 mr-2 text-primary\" />\n                Custom Research\n              </CardTitle>\n            </CardHeader>\n            <CardContent>\n              <p className=\"text-sm text-muted-foreground\">\n                Tailored research based on your specific investment criteria, including demographic analysis, regulatory insights, and more.\n              </p>\n            </CardContent>\n          </Card>\n        </div>\n      </div>\n    </>\n  );\n} ","import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useAuth } from '../lib/auth';\nimport { useReportRequests, ReportRequest } from '../hooks/useReportRequests';\nimport { \n  Card, \n  CardContent, \n  CardDescription, \n  CardHeader, \n  CardTitle \n} from '../components/ui/card';\nimport { Button } from '../components/ui/button';\nimport { Textarea } from '../components/ui/textarea';\nimport { \n  Dialog, \n  DialogContent, \n  DialogDescription, \n  DialogFooter, \n  DialogHeader, \n  DialogTitle \n} from '../components/ui/dialog';\nimport { \n  Table, \n  TableBody, \n  TableCaption, \n  TableCell, \n  TableHead, \n  TableHeader, \n  TableRow \n} from '../components/ui/table';\nimport { \n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from '../components/ui/select';\nimport { \n  AlertDialog,\n  AlertDialogAction,\n  AlertDialogCancel,\n  AlertDialogContent,\n  AlertDialogDescription,\n  AlertDialogFooter,\n  AlertDialogHeader,\n  AlertDialogTitle,\n  AlertDialogTrigger,\n} from '../components/ui/alert-dialog';\nimport { useToast } from '../components/ui/use-toast';\nimport { \n  Clock, \n  Upload, \n  FileText, \n  User, \n  AlertCircle, \n  Loader2, \n  Filter\n} from 'lucide-react';\nimport { formatDistanceToNow } from 'date-fns';\nimport { Badge } from '../components/ui/badge';\n\n// Define a type that extends ReportRequest to include the user profiles\ntype ReportRequestWithProfiles = ReportRequest & {\n  profiles?: {\n    full_name: string | null;\n    email: string | null;\n  } | null;\n};\n\nexport default function AdminReports() {\n  const { user, profile } = useAuth();\n  const navigate = useNavigate();\n  const { toast } = useToast();\n  \n  const { \n    loading, \n    error, \n    getAllReportRequests,\n    updateReportStatus,\n    uploadReportFile\n  } = useReportRequests();\n  \n  const [reports, setReports] = useState<ReportRequestWithProfiles[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [selectedReport, setSelectedReport] = useState<ReportRequestWithProfiles | null>(null);\n  const [statusFilter, setStatusFilter] = useState<ReportRequest['status'] | 'all'>('all');\n  const [updateDialogOpen, setUpdateDialogOpen] = useState(false);\n  const [uploadDialogOpen, setUploadDialogOpen] = useState(false);\n  const [selectedFile, setSelectedFile] = useState<File | null>(null);\n  const [notes, setNotes] = useState('');\n  const [newStatus, setNewStatus] = useState<ReportRequest['status']>('pending');\n\n  // Check if user is admin\n  useEffect(() => {\n    if (user && profile) {\n      const isAdmin = profile.role === 'admin' || user.app_metadata?.role === 'admin';\n      if (!isAdmin) {\n        toast({\n          title: \"Access denied\",\n          description: \"You need admin privileges to access this page.\",\n          variant: \"destructive\",\n        });\n        navigate('/');\n      }\n    }\n  }, [user, profile, navigate, toast]);\n\n  // Load all report requests\n  useEffect(() => {\n    const loadReports = async () => {\n      const isAdmin = profile?.role === 'admin' || user?.app_metadata?.role === 'admin';\n      if (user && isAdmin) {\n        setIsLoading(true);\n        const allReports = await getAllReportRequests();\n        setReports(allReports);\n        setIsLoading(false);\n      }\n    };\n    \n    loadReports();\n  }, [user, profile, getAllReportRequests]);\n\n  // Handle status change\n  const handleStatusChange = async () => {\n    if (!selectedReport) return;\n    \n    try {\n      const success = await updateReportStatus(selectedReport.id, newStatus, notes);\n      \n      if (success) {\n        toast({\n          title: \"Status updated\",\n          description: `Report status has been updated to ${newStatus}.`,\n        });\n        \n        // Refresh reports list\n        const allReports = await getAllReportRequests();\n        setReports(allReports);\n        \n        setUpdateDialogOpen(false);\n        setNotes('');\n      } else {\n        throw new Error(\"Failed to update status\");\n      }\n    } catch (err: any) {\n      toast({\n        title: \"Error updating status\",\n        description: err.message || \"There was a problem updating the report status.\",\n        variant: \"destructive\",\n      });\n    }\n  };\n\n  // Handle file upload\n  const handleFileUpload = async () => {\n    if (!selectedReport || !selectedFile) return;\n    \n    try {\n      const success = await uploadReportFile(selectedReport.id, selectedFile);\n      \n      if (success) {\n        toast({\n          title: \"File uploaded\",\n          description: \"The report file has been uploaded successfully.\",\n        });\n        \n        // Refresh reports list\n        const allReports = await getAllReportRequests();\n        setReports(allReports);\n        \n        setUploadDialogOpen(false);\n        setSelectedFile(null);\n      } else {\n        throw new Error(\"Failed to upload file\");\n      }\n    } catch (err: any) {\n      toast({\n        title: \"Error uploading file\",\n        description: err.message || \"There was a problem uploading the report file.\",\n        variant: \"destructive\",\n      });\n    }\n  };\n\n  // Function to get badge color based on status\n  const getStatusBadge = (status: ReportRequest['status']) => {\n    switch (status) {\n      case 'completed':\n        return <Badge className=\"bg-green-500\">Completed</Badge>;\n      case 'in_progress':\n        return <Badge className=\"bg-blue-500\">In Progress</Badge>;\n      case 'rejected':\n        return <Badge className=\"bg-red-500\">Rejected</Badge>;\n      case 'pending':\n      default:\n        return <Badge className=\"bg-yellow-500\">Pending</Badge>;\n    }\n  };\n\n  // Filter reports based on status\n  const filteredReports = statusFilter === 'all' \n    ? reports \n    : reports.filter(report => report.status === statusFilter);\n\n  // Render a message if the user is not an admin\n  if (!user || (profile?.role !== 'admin' && user.app_metadata?.role !== 'admin')) {\n    return (\n      <div className=\"container mx-auto py-10\">\n        <Card>\n          <CardHeader>\n            <CardTitle>Admin Reports Dashboard</CardTitle>\n            <CardDescription>\n              You need admin privileges to access this page.\n            </CardDescription>\n          </CardHeader>\n          <CardContent>\n            <p>Please log in with an admin account to manage report requests.</p>\n          </CardContent>\n        </Card>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"container mx-auto py-10 space-y-8\">\n      <div className=\"flex flex-col md:flex-row justify-between items-start md:items-center gap-4\">\n        <div>\n          <h1 className=\"text-3xl font-bold\">Report Requests Management</h1>\n          <p className=\"text-muted-foreground mt-1\">\n            Manage and process user research report requests\n          </p>\n        </div>\n        \n        <div className=\"flex items-center gap-2\">\n          <Filter size={16} className=\"text-muted-foreground\" />\n          <Select value={statusFilter} onValueChange={(value: any) => setStatusFilter(value)}>\n            <SelectTrigger className=\"w-[180px]\">\n              <SelectValue placeholder=\"Filter by status\" />\n            </SelectTrigger>\n            <SelectContent>\n              <SelectItem value=\"all\">All Requests</SelectItem>\n              <SelectItem value=\"pending\">Pending</SelectItem>\n              <SelectItem value=\"in_progress\">In Progress</SelectItem>\n              <SelectItem value=\"completed\">Completed</SelectItem>\n              <SelectItem value=\"rejected\">Rejected</SelectItem>\n            </SelectContent>\n          </Select>\n        </div>\n      </div>\n\n      {/* Main content */}\n      <Card>\n        <CardHeader>\n          <CardTitle>Report Requests</CardTitle>\n          <CardDescription>\n            Manage user research report requests\n          </CardDescription>\n        </CardHeader>\n        <CardContent>\n          {isLoading ? (\n            <div className=\"flex justify-center items-center py-10\">\n              <Loader2 className=\"h-8 w-8 animate-spin text-primary\" />\n            </div>\n          ) : error ? (\n            <div className=\"text-center py-10 text-red-600\">\n              <AlertCircle className=\"h-8 w-8 mx-auto mb-2\" />\n              <p>{error}</p>\n            </div>\n          ) : filteredReports.length === 0 ? (\n            <div className=\"text-center py-10 text-muted-foreground\">\n              <FileText className=\"h-12 w-12 mx-auto mb-4 opacity-30\" />\n              <p className=\"text-lg font-medium\">No report requests found</p>\n              <p className=\"mt-1\">There are no report requests matching your filter criteria</p>\n            </div>\n          ) : (\n            <Table>\n              <TableCaption>List of report requests</TableCaption>\n              <TableHeader>\n                <TableRow>\n                  <TableHead>Title</TableHead>\n                  <TableHead>Requested By</TableHead>\n                  <TableHead>Requested</TableHead>\n                  <TableHead>Status</TableHead>\n                  <TableHead className=\"text-right\">Actions</TableHead>\n                </TableRow>\n              </TableHeader>\n              <TableBody>\n                {filteredReports.map((report) => (\n                  <TableRow key={report.id}>\n                    <TableCell className=\"font-medium max-w-[280px] truncate\">\n                      {report.title}\n                    </TableCell>\n                    <TableCell>\n                      <div className=\"flex items-center gap-1\">\n                        <User size={14} />\n                        <span>\n                          {report.profiles?.full_name || report.profiles?.email || 'Unknown user'}\n                        </span>\n                      </div>\n                    </TableCell>\n                    <TableCell className=\"text-muted-foreground\">\n                      <div className=\"flex items-center gap-1\">\n                        <Clock size={14} />\n                        <span>\n                          {formatDistanceToNow(new Date(report.created_at), { addSuffix: true })}\n                        </span>\n                      </div>\n                    </TableCell>\n                    <TableCell>\n                      {getStatusBadge(report.status)}\n                    </TableCell>\n                    <TableCell className=\"text-right\">\n                      <div className=\"flex justify-end gap-2\">\n                        <AlertDialog>\n                          <AlertDialogTrigger asChild>\n                            <Button size=\"sm\" variant=\"outline\">\n                              Details\n                            </Button>\n                          </AlertDialogTrigger>\n                          <AlertDialogContent>\n                            <AlertDialogHeader>\n                              <AlertDialogTitle>{report.title}</AlertDialogTitle>\n                              <AlertDialogDescription>\n                                <div className=\"space-y-4 mt-2\">\n                                  <div>\n                                    <p className=\"text-sm font-semibold\">Status: {report.status}</p>\n                                    <p className=\"text-sm text-muted-foreground\">\n                                      Requested: {new Date(report.created_at).toLocaleDateString()}, {new Date(report.created_at).toLocaleTimeString()}\n                                    </p>\n                                    {report.completed_at && (\n                                      <p className=\"text-sm text-muted-foreground\">\n                                        Completed: {new Date(report.completed_at).toLocaleDateString()}, {new Date(report.completed_at).toLocaleTimeString()}\n                                      </p>\n                                    )}\n                                  </div>\n                                  \n                                  <div>\n                                    <p className=\"text-sm font-semibold\">User:</p>\n                                    <p className=\"text-sm\">\n                                      {report.profiles?.full_name || 'No name'} ({report.profiles?.email || 'No email'})\n                                    </p>\n                                  </div>\n                                  \n                                  <div>\n                                    <p className=\"text-sm font-semibold\">Description:</p>\n                                    <p className=\"text-sm whitespace-pre-line\">{report.description}</p>\n                                  </div>\n                                  \n                                  {report.notes && (\n                                    <div>\n                                      <p className=\"text-sm font-semibold\">Admin Notes:</p>\n                                      <p className=\"text-sm whitespace-pre-line\">{report.notes}</p>\n                                    </div>\n                                  )}\n                                  \n                                  {report.file_url && (\n                                    <div>\n                                      <p className=\"text-sm font-semibold\">File:</p>\n                                      <p className=\"text-sm\">\n                                        <a \n                                          href={report.file_url} \n                                          target=\"_blank\" \n                                          rel=\"noopener noreferrer\"\n                                          className=\"text-blue-500 hover:underline\"\n                                        >\n                                          {report.file_name || 'View uploaded file'}\n                                        </a>\n                                      </p>\n                                    </div>\n                                  )}\n                                </div>\n                              </AlertDialogDescription>\n                            </AlertDialogHeader>\n                            <AlertDialogFooter>\n                              <AlertDialogCancel>Close</AlertDialogCancel>\n                            </AlertDialogFooter>\n                          </AlertDialogContent>\n                        </AlertDialog>\n                        \n                        <Button \n                          size=\"sm\" \n                          variant=\"outline\"\n                          onClick={() => {\n                            setSelectedReport(report);\n                            setNewStatus(report.status);\n                            setNotes(report.notes || '');\n                            setUpdateDialogOpen(true);\n                          }}\n                        >\n                          Update Status\n                        </Button>\n                        \n                        <Button \n                          size=\"sm\"\n                          onClick={() => {\n                            setSelectedReport(report);\n                            setUploadDialogOpen(true);\n                          }}\n                        >\n                          <Upload className=\"mr-2 h-4 w-4\" />\n                          Upload File\n                        </Button>\n                      </div>\n                    </TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          )}\n        </CardContent>\n      </Card>\n      \n      {/* Update Status Dialog */}\n      <Dialog open={updateDialogOpen} onOpenChange={setUpdateDialogOpen}>\n        <DialogContent className=\"sm:max-w-[500px]\">\n          <DialogHeader>\n            <DialogTitle>Update Report Status</DialogTitle>\n            <DialogDescription>\n              Update the status of the report request and add notes.\n            </DialogDescription>\n          </DialogHeader>\n          \n          <div className=\"space-y-4\">\n            <div>\n              <label className=\"block text-sm font-medium mb-1\">\n                Report Title\n              </label>\n              <p className=\"text-sm text-muted-foreground\">\n                {selectedReport?.title}\n              </p>\n            </div>\n            \n            <div>\n              <label className=\"block text-sm font-medium mb-1\">\n                Current Status\n              </label>\n              <p className=\"text-sm text-muted-foreground\">\n                {selectedReport?.status}\n              </p>\n            </div>\n            \n            <div>\n              <label className=\"block text-sm font-medium mb-1\">\n                New Status\n              </label>\n              <Select value={newStatus} onValueChange={(value: any) => setNewStatus(value)}>\n                <SelectTrigger className=\"w-full\">\n                  <SelectValue placeholder=\"Select new status\" />\n                </SelectTrigger>\n                <SelectContent>\n                  <SelectItem value=\"pending\">Pending</SelectItem>\n                  <SelectItem value=\"in_progress\">In Progress</SelectItem>\n                  <SelectItem value=\"completed\">Completed</SelectItem>\n                  <SelectItem value=\"rejected\">Rejected</SelectItem>\n                </SelectContent>\n              </Select>\n            </div>\n            \n            <div>\n              <label className=\"block text-sm font-medium mb-1\">\n                Admin Notes\n              </label>\n              <Textarea\n                value={notes}\n                onChange={(e) => setNotes(e.target.value)}\n                placeholder=\"Add notes about the report status, progress, or any additional information...\"\n                className=\"min-h-[100px]\"\n              />\n            </div>\n          </div>\n          \n          <DialogFooter>\n            <Button \n              type=\"button\" \n              variant=\"outline\" \n              onClick={() => setUpdateDialogOpen(false)}\n            >\n              Cancel\n            </Button>\n            <Button \n              type=\"button\"\n              onClick={handleStatusChange}\n            >\n              Update Status\n            </Button>\n          </DialogFooter>\n        </DialogContent>\n      </Dialog>\n      \n      {/* Upload File Dialog */}\n      <Dialog open={uploadDialogOpen} onOpenChange={setUploadDialogOpen}>\n        <DialogContent className=\"sm:max-w-[500px]\">\n          <DialogHeader>\n            <DialogTitle>Upload Report File</DialogTitle>\n            <DialogDescription>\n              Upload a file for the requested report.\n            </DialogDescription>\n          </DialogHeader>\n          \n          <div className=\"space-y-4\">\n            <div>\n              <label className=\"block text-sm font-medium mb-1\">\n                Report Title\n              </label>\n              <p className=\"text-sm text-muted-foreground\">\n                {selectedReport?.title}\n              </p>\n            </div>\n            \n            <div>\n              <label className=\"block text-sm font-medium mb-1\">\n                File\n              </label>\n              <div className=\"mt-2\">\n                <input\n                  type=\"file\"\n                  className=\"block w-full text-sm text-gray-500\n                    file:mr-4 file:py-2 file:px-4\n                    file:rounded-md file:border-0\n                    file:text-sm file:font-semibold\n                    file:bg-primary file:text-white\n                    hover:file:bg-primary/90\"\n                  onChange={(e) => {\n                    if (e.target.files && e.target.files[0]) {\n                      setSelectedFile(e.target.files[0]);\n                    }\n                  }}\n                />\n              </div>\n              <p className=\"text-xs text-muted-foreground mt-1\">\n                Supported file types: PDF, DOCX, XLSX, PNG, JPG\n              </p>\n            </div>\n            \n            {selectedFile && (\n              <div>\n                <p className=\"text-sm font-medium\">Selected file:</p>\n                <p className=\"text-sm text-muted-foreground\">\n                  {selectedFile.name} ({(selectedFile.size / 1024 / 1024).toFixed(2)} MB)\n                </p>\n              </div>\n            )}\n            \n            <p className=\"text-sm text-muted-foreground\">\n              Uploading a file will automatically set the report status to \"completed\".\n            </p>\n          </div>\n          \n          <DialogFooter>\n            <Button \n              type=\"button\" \n              variant=\"outline\" \n              onClick={() => setUploadDialogOpen(false)}\n            >\n              Cancel\n            </Button>\n            <Button \n              type=\"button\"\n              onClick={handleFileUpload}\n              disabled={!selectedFile}\n            >\n              Upload File\n            </Button>\n          </DialogFooter>\n        </DialogContent>\n      </Dialog>\n    </div>\n  );\n} ","import { supabase } from './supabase';\n\n// Get the API key from environment variables with a fallback\nconst SCRAPER_API_KEY = import.meta.env.VITE_SCRAPER_API_KEY || '162910ce5fe80080edef0fe026506f0e';\nconst SCRAPER_API_URL = 'https://api.scraperapi.com/scrape';\nconst CACHE_TTL_HOURS = 12; // Cache duration in hours\n\n// Add logging for ScraperAPI key to help with debugging\nconsole.log('ScraperAPI key status:', SCRAPER_API_KEY ? (SCRAPER_API_KEY === '162910ce5fe80080edef0fe026506f0e' ? 'Using default key' : 'Using custom key') : 'No key');\n\n// Type definitions\nexport interface RightmoveProperty {\n  id: string;\n  address: string;\n  postcode: string;\n  price: number;\n  date_listed?: string;\n  property_type: string;\n  bedrooms: number;\n  bathrooms?: number;\n  description: string;\n  image_urls: string[];\n  main_image_url: string;\n  agent: {\n    name: string;\n    phone?: string;\n    logo_url?: string;\n  };\n  tenure?: string;\n  new_build: boolean;\n  floor_area?: {\n    size: number;\n    unit: string;\n  };\n  latitude?: number;\n  longitude?: number;\n  is_active: boolean;\n  rightmove_url: string;\n  features?: string[];\n}\n\nexport interface SearchFilters {\n  location: string;\n  minPrice?: number;\n  maxPrice?: number;\n  minBeds?: number;\n  maxBeds?: number;\n  propertyType?: string;\n  radius?: number;\n  page?: number;\n  limit?: number;\n}\n\nexport interface SearchResponse {\n  properties: RightmoveProperty[];\n  total: number;\n  page: number;\n  totalPages: number;\n}\n\n// Helper to check if a cached result is valid\nconst isCacheValid = (createdAt: string, ttlHours = CACHE_TTL_HOURS): boolean => {\n  const cacheTime = new Date(createdAt).getTime();\n  const currentTime = new Date().getTime();\n  const ttlMillis = ttlHours * 60 * 60 * 1000;\n  return currentTime - cacheTime < ttlMillis;\n};\n\n// Helper to create a DOMParser safely for both browser and Node environments\nconst createDOMParser = (html: string): Document => {\n  // Create a DOM parser to parse the HTML string\n  try {\n    const parser = new DOMParser();\n    return parser.parseFromString(html, 'text/html');\n  } catch (error) {\n    console.error('Error creating DOMParser:', error);\n    throw new Error('Failed to parse HTML: DOMParser not available');\n  }\n};\n\n// Helper to extract property details from Rightmove HTML\nconst extractPropertyDetails = (html: string, url: string): RightmoveProperty | null => {\n  try {\n    const doc = createDOMParser(html);\n    \n    // Extract property ID from URL or meta tags\n    const propertyId = url.match(/property-(\\d+)/)?.[1] || '';\n    \n    // Extract address\n    const addressElem = doc.querySelector('address.property-header-address');\n    const address = addressElem ? addressElem.textContent?.trim() || '' : '';\n    \n    // Extract postcode - typically the last part of the address\n    const postcodeMatch = address.match(/([A-Z]{1,2}[0-9][0-9A-Z]?)\\s*([0-9][A-Z]{2})/i);\n    const postcode = postcodeMatch ? postcodeMatch[0] : '';\n    \n    // Extract price\n    const priceElem = doc.querySelector('.price-text');\n    const priceText = priceElem ? priceElem.textContent || '' : '';\n    const priceMatch = priceText.match(/[£$]?([\\d,]+)/);\n    const price = priceMatch ? parseInt(priceMatch[1].replace(/,/g, '')) : 0;\n    \n    // Extract property type and bedrooms\n    const propertyTypeElem = doc.querySelector('[data-testid=\"property-type\"]');\n    const propertyType = propertyTypeElem ? propertyTypeElem.textContent?.trim() || 'Unknown' : 'Unknown';\n    \n    // Extract number of bedrooms\n    const bedroomsElem = doc.querySelector('[data-testid=\"beds\"]');\n    const bedroomsText = bedroomsElem ? bedroomsElem.textContent || '' : '';\n    const bedrooms = bedroomsText ? parseInt(bedroomsText) : 0;\n    \n    // Extract bathrooms\n    const bathroomsElem = doc.querySelector('[data-testid=\"baths\"]');\n    const bathroomsText = bathroomsElem ? bathroomsElem.textContent || '' : '';\n    const bathrooms = bathroomsText ? parseInt(bathroomsText) : undefined;\n    \n    // Extract description\n    const descriptionElem = doc.querySelector('.property-description');\n    const description = descriptionElem ? descriptionElem.textContent?.trim() || '' : '';\n    \n    // Extract main image URL\n    const mainImageMeta = doc.querySelector('meta[itemprop=\"image\"]');\n    const mainImageUrl = mainImageMeta ? mainImageMeta.getAttribute('content') || '' : '';\n    \n    // Extract all image URLs\n    const imageUrls: string[] = [];\n    const imageMetaTags = doc.querySelectorAll('meta[itemprop=\"contentUrl\"]');\n    imageMetaTags.forEach(tag => {\n      const url = tag.getAttribute('content');\n      if (url) imageUrls.push(url);\n    });\n    \n    // If meta tags don't have images, try looking for image elements with data-src or src\n    if (imageUrls.length === 0) {\n      const imageElements = doc.querySelectorAll('.property-image img, .Gallery img');\n      imageElements.forEach(img => {\n        const url = img.getAttribute('data-src') || img.getAttribute('src');\n        if (url && !imageUrls.includes(url)) {\n          imageUrls.push(url);\n        }\n      });\n    }\n    \n    // Extract agent info\n    const agentNameElem = doc.querySelector('.agent-name');\n    const agentName = agentNameElem ? agentNameElem.textContent?.trim() || 'Unknown Agent' : 'Unknown Agent';\n    \n    const agentPhoneElem = doc.querySelector('.agent-phone');\n    const agentPhone = agentPhoneElem ? agentPhoneElem.textContent?.trim() : undefined;\n    \n    const agentLogoElem = doc.querySelector('.agent-logo img');\n    const agentLogoUrl = agentLogoElem ? agentLogoElem.getAttribute('src') || undefined : undefined;\n    \n    // Extract new build status\n    const newBuildElem = doc.querySelector('.new-home-flag');\n    const isNewBuild = !!newBuildElem || /new build|newly built/i.test(propertyType);\n    \n    // Extract features\n    const featureElems = doc.querySelectorAll('.property-features li');\n    const features: string[] = [];\n    featureElems.forEach(elem => {\n      const feature = elem.textContent?.trim();\n      if (feature) features.push(feature);\n    });\n    \n    // Create property object\n    const property: RightmoveProperty = {\n      id: propertyId,\n      address,\n      postcode,\n      price,\n      property_type: propertyType,\n      bedrooms,\n      bathrooms,\n      description,\n      image_urls: imageUrls,\n      main_image_url: mainImageUrl || (imageUrls.length > 0 ? imageUrls[0] : ''),\n      agent: {\n        name: agentName,\n        phone: agentPhone,\n        logo_url: agentLogoUrl\n      },\n      new_build: isNewBuild,\n      is_active: true,\n      rightmove_url: url,\n      features\n    };\n    \n    return property;\n  } catch (error) {\n    console.error('Error extracting property details:', error);\n    return null;\n  }\n};\n\n// Set up the scraper_cache table if it doesn't exist\nexport const ensureScraperCacheTableExists = async (): Promise<boolean> => {\n  try {\n    console.log('Checking if scraper_cache table exists using simplified approach...');\n    \n    // Try the most direct approach first - can we count records in the table?\n    const { data: countData, error: countError } = await supabase\n      .from('scraper_cache')\n      .select('*', { count: 'exact', head: true });\n      \n    // If we can get a count without error, the table exists\n    if (!countError) {\n      console.log('✅ scraper_cache table exists - count check successful');\n      return true;\n    }\n    \n    console.log('Count check failed:', countError);\n    \n    // Try to insert a test record as a fallback check\n    const testKey = `test-existence-${Date.now()}`;\n    const { error: insertError } = await supabase\n      .from('scraper_cache')\n      .insert({ \n        key: testKey, \n        data: { test: true },\n        created_at: new Date().toISOString()\n      });\n      \n    if (!insertError) {\n      console.log('✅ Successfully verified scraper_cache table exists via insert test!');\n      return true;\n    }\n    \n    console.error('Insert test failed:', insertError);\n    console.error('The scraper_cache table does not appear to be accessible');\n    \n    // Table doesn't exist or isn't accessible, so return false\n    return false;\n  } catch (error) {\n    console.error('Error in ensureScraperCacheTableExists:', error);\n    return false;\n  }\n};\n\n// Function to test if the ScraperAPI key is valid by making a simple request\nconst testScraperAPIKey = async (): Promise<{success: boolean, message: string, status?: number}> => {\n  try {\n    console.log('Testing ScraperAPI key...');\n    // Try to scrape a simple website\n    const testUrl = 'https://www.example.com';\n    const scraperApiUrl = `${SCRAPER_API_URL}?api_key=${SCRAPER_API_KEY}&url=${encodeURIComponent(testUrl)}`;\n    \n    const response = await fetch(scraperApiUrl);\n    const success = response.ok;\n    const status = response.status;\n    \n    let message = success \n      ? 'Valid API key' \n      : `Invalid API key (Status: ${status} - ${response.statusText})`;\n      \n    // Specific error handling for common status codes\n    if (status === 401) {\n      message = 'Unauthorized: Your ScraperAPI key is invalid or expired';\n    } else if (status === 403) {\n      message = 'Forbidden: Your ScraperAPI account may be suspended';\n    } else if (status === 404) {\n      message = 'Not Found: Your ScraperAPI key is invalid or the API endpoint has changed';\n    } else if (status === 429) {\n      message = 'Too Many Requests: You have exceeded your ScraperAPI plan limits';\n    }\n    \n    console.log('ScraperAPI key test result:', message);\n    return { success, message, status };\n  } catch (error) {\n    console.error('Error testing ScraperAPI key:', error);\n    return { \n      success: false, \n      message: `Connection error: ${error instanceof Error ? error.message : String(error)}`\n    };\n  }\n};\n\n// Check if the API key is valid and log a warning if it's not\nexport const validateScraperAPIKey = async (): Promise<boolean> => {\n  // Skip validation if we're using the mock data flag\n  if (import.meta.env.VITE_USE_MOCK_DATA === 'true') {\n    console.log('Using mock data, skipping API key validation');\n    return true;\n  }\n  \n  const result = await testScraperAPIKey();\n  \n  if (!result.success) {\n    console.error(`⚠️ INVALID SCRAPER API KEY: ${result.message}`);\n    console.error('Get a valid key at https://www.scraperapi.com/ and set it in .env.local as VITE_SCRAPER_API_KEY');\n    return false;\n  }\n  \n  return true;\n};\n\n// Helper function to check if we're using the default API key\nexport const isUsingDefaultAPIKey = (): boolean => {\n  return SCRAPER_API_KEY === '162910ce5fe80080edef0fe026506f0e';\n};\n\n// Initialize the scraper on import\n(() => {\n  console.log('Initializing Rightmove scraper...');\n  console.log('Mock data mode:', import.meta.env.VITE_USE_MOCK_DATA === 'true' ? 'ENABLED' : 'DISABLED');\n  \n  // Check if we have an API key\n  if (isUsingDefaultAPIKey()) {\n    console.warn('Using default ScraperAPI key. This key is NOT VALID. Please get your own key at www.scraperapi.com');\n    console.warn('Set your key in .env.local file as VITE_SCRAPER_API_KEY=your_key_here');\n  }\n  \n  // Validate the API key in the background\n  validateScraperAPIKey().then(isValid => {\n    if (!isValid && import.meta.env.VITE_USE_MOCK_DATA !== 'true') {\n      console.error('ScraperAPI key validation failed. Property searches will not work.');\n    }\n  });\n  \n  // Ensure the cache table exists (don't await - let it run in background)\n  ensureScraperCacheTableExists().then(exists => {\n    if (!exists && import.meta.env.VITE_USE_MOCK_DATA !== 'true') {\n      console.warn('Scraper cache table does not exist. This may affect performance.');\n    }\n  });\n})();\n\n// Get a cached result or fetch fresh data\nconst getCachedOrFresh = async <T>(\n  key: string,\n  fetchFn: () => Promise<T>,\n  ttlHours = CACHE_TTL_HOURS\n): Promise<T> => {\n  try {\n    // Ensure the cache table exists\n    const tableExists = await ensureScraperCacheTableExists();\n    if (!tableExists) {\n      console.warn('Cache table does not exist, fetching fresh data');\n      return await fetchFn();\n    }\n    \n    // Check cache first\n    const { data: cachedResult, error: cacheError } = await supabase\n      .from('scraper_cache')\n      .select('*')\n      .eq('key', key)\n      .maybeSingle();\n\n    if (cacheError) {\n      console.error('Error checking cache:', cacheError);\n      return await fetchFn();\n    }\n\n    if (cachedResult && isCacheValid(cachedResult.created_at, ttlHours)) {\n      console.log(`Using cached data for ${key}`);\n      return cachedResult.data as T;\n    }\n\n    // If not in cache or expired, fetch fresh data\n    console.log(`Fetching fresh data for ${key}`);\n    const freshData = await fetchFn();\n\n    // Store in cache\n    const { error } = await supabase\n      .from('scraper_cache')\n      .upsert(\n        { \n          key, \n          data: freshData,\n          created_at: new Date().toISOString()\n        },\n        { onConflict: 'key' }\n      );\n\n    if (error) {\n      console.error('Error storing data in cache:', error);\n    }\n\n    return freshData;\n  } catch (error) {\n    console.error('Error in getCachedOrFresh:', error);\n    // If cache fails, try to fetch fresh data anyway\n    return await fetchFn();\n  }\n};\n\n// Mock data function for testing or when the API is unavailable\nconst getMockPropertyData = (filters: SearchFilters): SearchResponse => {\n  console.error('⚠️ USING MOCK PROPERTY DATA - NOT REAL RIGHTMOVE DATA ⚠️');\n  console.error('This is happening because of an error or the scraper_cache table is not set up correctly');\n  \n  const mockProperties: RightmoveProperty[] = Array(12).fill(0).map((_, index) => ({\n    id: `mock-${index}`,\n    address: `📌 MOCK DATA: ${index + 1} Mock Street, ${filters.location || 'London'}`,\n    postcode: 'SW1A 1AA',\n    price: 250000 + (index * 50000),\n    property_type: ['Flat', 'Terraced', 'Semi-Detached', 'Detached'][index % 4],\n    bedrooms: 1 + (index % 5),\n    bathrooms: 1 + (index % 3),\n    description: `⚠️ MOCK DATA: This is not real Rightmove data. This is a placeholder ${index + 1} bedroom property in ${filters.location || 'London'} with modern amenities.`,\n    image_urls: [`https://placehold.co/800x600?text=MOCK+${index + 1}`],\n    main_image_url: `https://placehold.co/800x600?text=MOCK+${index + 1}`,\n    agent: {\n      name: 'Mock Estate Agents (Not Real)',\n      phone: '01234 567890',\n      logo_url: 'https://placehold.co/200x100?text=Mock+Agent'\n    },\n    new_build: index % 3 === 0,\n    is_active: true,\n    rightmove_url: `https://www.rightmove.co.uk/properties/mock-${index}`,\n    features: ['Mock Garden', 'Mock Parking', 'Mock Double Glazing', 'Mock Central Heating']\n  }));\n  \n  return {\n    properties: mockProperties,\n    total: 48,\n    page: filters.page || 1,\n    totalPages: 4\n  };\n};\n\n// Function to provide a direct fetch fallback if ScraperAPI fails\nconst directFetch = async (url: string): Promise<string> => {\n  console.log('Attempting direct fetch as fallback...');\n  try {\n    const response = await fetch(url, {\n      headers: {\n        'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36',\n        'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8',\n        'Accept-Language': 'en-US,en;q=0.5',\n        'Referer': 'https://www.google.com/'\n      }\n    });\n    \n    if (!response.ok) {\n      throw new Error(`Direct fetch failed: ${response.status} ${response.statusText}`);\n    }\n    \n    return await response.text();\n  } catch (error) {\n    console.error('Direct fetch fallback failed:', error);\n    throw error;\n  }\n};\n\n// Main scraper function for Rightmove search\nexport const searchRightmoveProperties = async (filters: SearchFilters): Promise<SearchResponse> => {\n  const { location, minPrice, maxPrice, minBeds, maxBeds, propertyType, radius = 1, page = 1 } = filters;\n  \n  // Validate location\n  if (!location) {\n    throw new Error('Location is required for property search');\n  }\n  \n  // Clean location input - remove any cache-busting parameters\n  const cleanLocation = location.replace(/\\?_bypass_cache=\\d+/, '');\n  \n  // Construct cache key based on search parameters\n  const cacheKey = `rightmove:search:${cleanLocation}:${minPrice || ''}:${maxPrice || ''}:${minBeds || ''}:${maxBeds || ''}:${propertyType || ''}:${radius}:${page}`;\n  \n  return getCachedOrFresh(\n    cacheKey,\n    async () => {\n      try {\n        // Log the environment variables for debugging\n        console.log('ENV VITE_USE_MOCK_DATA [raw]:', import.meta.env.VITE_USE_MOCK_DATA);\n        \n        // COMPLETELY DISABLE MOCK DATA FOR TESTING\n        // =======================================\n        // Even if VITE_USE_MOCK_DATA is true, we won't use mock data to verify our API works\n        console.log('TESTING MODE: MOCK DATA COMPLETELY DISABLED REGARDLESS OF ENVIRONMENT SETTINGS');\n\n        // Validate API key before making requests\n        if (isUsingDefaultAPIKey()) {\n          throw new Error(\n            'Default ScraperAPI key detected. This key is not valid. Please get your own key at www.scraperapi.com and set it in .env.local'\n          );\n        }\n\n        // Test the ScraperAPI key to provide better error messages\n        const apiKeyTest = await testScraperAPIKey();\n        if (!apiKeyTest.success) {\n          throw new Error(`ScraperAPI key validation failed: ${apiKeyTest.message}`);\n        }\n        \n        // We'll try multiple URL formats in sequence until one works\n        // Format 1: The most reliable format - using keywords in the simplest form\n        const simpleSearchUrl = `https://www.rightmove.co.uk/property-for-sale/find.html?searchType=SALE&keywords=${encodeURIComponent(cleanLocation)}`;\n        \n        // Format 2: With more parameters\n        const detailedSearchUrl = `https://www.rightmove.co.uk/property-for-sale/find.html?searchType=SALE&keywords=${encodeURIComponent(cleanLocation)}${minPrice ? `&minPrice=${minPrice}` : ''}${maxPrice ? `&maxPrice=${maxPrice}` : ''}${minBeds ? `&minBedrooms=${minBeds}` : ''}${maxBeds ? `&maxBedrooms=${maxBeds}` : ''}${propertyType ? `&propertyTypes=${propertyType}` : ''}&radius=${radius}&includeSSTC=false&page=${page}`;\n\n        // Format 3: Using locationIdentifier format (less reliable)\n        const locationSearchUrl = `https://www.rightmove.co.uk/property-for-sale/find.html?searchType=SALE&locationIdentifier=REGION%5E${encodeURIComponent(cleanLocation)}${minPrice ? `&minPrice=${minPrice}` : ''}${maxPrice ? `&maxPrice=${maxPrice}` : ''}${minBeds ? `&minBedrooms=${minBeds}` : ''}${maxBeds ? `&maxBedrooms=${maxBeds}` : ''}${propertyType ? `&propertyTypes=${propertyType}` : ''}&radius=${radius}&includeSSTC=false&page=${page}`;\n        \n        console.log('Trying three search URL formats:');\n        console.log('Format 1 (Simple):', simpleSearchUrl);\n        console.log('Format 2 (Detailed):', detailedSearchUrl);\n        console.log('Format 3 (Location ID):', locationSearchUrl);\n        \n        // Start with the most reliable URL format\n        let urlToUse = simpleSearchUrl;\n        \n        // Additional parameters for ScraperAPI to improve reliability\n        const scraperParams = {\n          api_key: SCRAPER_API_KEY,\n          url: encodeURIComponent(urlToUse),\n          render: 'true',\n          country_code: 'uk',\n          keep_headers: 'true',\n          premium: 'true' // Use premium proxies for better success rate\n        };\n        \n        // Build the ScraperAPI URL with parameters\n        const scraperApiUrl = `${SCRAPER_API_URL}?${Object.entries(scraperParams)\n          .map(([key, value]) => `${key}=${value}`)\n          .join('&')}`;\n        \n        console.log('Making request to ScraperAPI...');\n        \n        // Try each URL format in sequence until one works\n        let html = '';\n        let response = null;\n        let success = false;\n        let attemptCount = 0;\n        let lastError = null;\n        const urlFormats = [simpleSearchUrl, detailedSearchUrl, locationSearchUrl];\n        \n        while (!success && attemptCount < urlFormats.length) {\n          try {\n            const currentUrl = urlFormats[attemptCount];\n            console.log(`Attempt ${attemptCount + 1}: Trying URL: ${currentUrl}`);\n            \n            // Update the URL in the params\n            scraperParams.url = encodeURIComponent(currentUrl);\n            \n            // Rebuild the ScraperAPI URL with new search URL\n            const currentScraperUrl = `${SCRAPER_API_URL}?${Object.entries(scraperParams)\n              .map(([key, value]) => `${key}=${value}`)\n              .join('&')}`;\n            \n            response = await fetch(currentScraperUrl);\n            \n            if (!response.ok) {\n              // Check for API key related errors specifically\n              if (response.status === 401 || response.status === 403 || response.status === 404) {\n                throw new Error(`ScraperAPI key error: ${response.status} ${response.statusText}. Please get a valid API key from www.scraperapi.com`);\n              }\n              \n              throw new Error(`Failed with status: ${response.status} ${response.statusText}`);\n            }\n            \n            html = await response.text();\n            \n            // Check if we got a meaningful response\n            if (html.length < 1000) {\n              throw new Error('Received too short response');\n            }\n            \n            // Check if there are property cards in the response\n            const doc = createDOMParser(html);\n            const propertyCards = doc.querySelectorAll('.propertyCard, .l-searchResult');\n            \n            if (propertyCards.length === 0) {\n              throw new Error('No property cards found');\n            }\n            \n            // If we got here, the request was successful\n            success = true;\n            console.log(`Success with URL format ${attemptCount + 1}!`);\n            \n          } catch (error) {\n            console.error(`Attempt ${attemptCount + 1} failed:`, error);\n            lastError = error;\n            attemptCount++;\n            \n            // If this is an API key error, fail immediately\n            if (error instanceof Error && \n                (error.message.includes('ScraperAPI key error') || \n                 error.message.includes('API key validation failed'))) {\n              break;\n            }\n            \n            // If this was the last attempt, rethrow the error\n            if (attemptCount >= urlFormats.length) {\n              throw new Error(`All URL formats failed. Last error: ${error.message}`);\n            }\n          }\n        }\n        \n        if (!success) {\n          if (lastError && lastError.message.includes('API key')) {\n            throw lastError;\n          }\n          throw new Error('All URL formats failed to return valid results');\n        }\n        \n        // We now have a successful response in 'html'\n        console.log('Received HTML response of length:', html.length);\n        \n        // Parse HTML to extract property listings\n        const doc = createDOMParser(html);\n        \n        // Find all property cards/results\n        const propertyCards = doc.querySelectorAll('.propertyCard, .l-searchResult');\n        console.log('Found property cards:', propertyCards.length);\n        \n        // Extract properties\n        const properties: RightmoveProperty[] = [];\n        \n        propertyCards.forEach((card, index) => {\n          try {\n            // Extract property details from the card\n            const propertyLinkElem = card.querySelector('.propertyCard-link, .propertyCard-img-link, a[data-test=\"property-details\"]');\n            const propertyUrl = propertyLinkElem?.getAttribute('href') || '';\n            const fullPropertyUrl = propertyUrl.startsWith('http') ? propertyUrl : `https://www.rightmove.co.uk${propertyUrl}`;\n            \n            // Extract property ID from URL\n            const propertyIdMatch = fullPropertyUrl.match(/property-(\\d+)/);\n            const propertyId = propertyIdMatch ? propertyIdMatch[1] : `rm-${Date.now()}-${Math.random().toString(36).substring(2, 9)}`;\n            \n            // Extract address\n            const addressElem = card.querySelector('.propertyCard-address, .propertyCard-title, [data-test=\"address-title\"]');\n            const address = addressElem ? addressElem.textContent?.trim() || '' : '';\n            \n            // Extract postcode - typically the last part of the address\n            const postcodeMatch = address.match(/([A-Z]{1,2}[0-9][0-9A-Z]?)\\s*([0-9][A-Z]{2})/i);\n            const postcode = postcodeMatch ? postcodeMatch[0] : '';\n            \n            // Extract price\n            const priceElem = card.querySelector('.propertyCard-priceValue, .propertyCard-price, [data-test=\"property-price\"]');\n            const priceText = priceElem ? priceElem.textContent || '' : '';\n            const priceMatch = priceText.match(/[£$]?([\\d,]+)/);\n            const price = priceMatch ? parseInt(priceMatch[1].replace(/,/g, '')) : 0;\n            \n            // Extract property type and bedrooms\n            const infoElem = card.querySelector('.propertyCard-details, .propertyCard-description, [data-test=\"property-description\"]');\n            const infoText = infoElem ? infoElem.textContent || '' : '';\n            \n            // Try to extract property type\n            let propertyType = 'Unknown';\n            const typeMatches = [\n              /\\b(flat|apartment)\\b/i,\n              /\\b(terraced|terrace)\\b/i,\n              /\\b(semi-detached|semi detached)\\b/i,\n              /\\b(detached)\\b/i,\n              /\\b(bungalow)\\b/i,\n              /\\b(house)\\b/i\n            ];\n            \n            for (const pattern of typeMatches) {\n              const match = infoText.match(pattern);\n              if (match) {\n                propertyType = match[1].charAt(0).toUpperCase() + match[1].slice(1);\n                break;\n              }\n            }\n            \n            // Extract bedrooms\n            const bedroomsMatch = infoText.match(/(\\d+)\\s*bed/i);\n            const bedrooms = bedroomsMatch ? parseInt(bedroomsMatch[1]) : 1;\n            \n            // Extract bathrooms\n            const bathroomsMatch = infoText.match(/(\\d+)\\s*bath/i);\n            const bathrooms = bathroomsMatch ? parseInt(bathroomsMatch[1]) : undefined;\n            \n            // Extract main image\n            const imgElem = card.querySelector('.propertyCard-img img, .propertyCard-image img, [data-test=\"property-image\"] img');\n            const imgSrc = imgElem?.getAttribute('src') || imgElem?.getAttribute('data-src') || '';\n            \n            // Extract agent info\n            const agentElem = card.querySelector('.propertyCard-branchLogo img, .propertyCard-agent img, [data-test=\"agent-logo\"] img');\n            const agentName = agentElem?.getAttribute('alt') || 'Unknown';\n            const agentLogoUrl = agentElem?.getAttribute('src') || undefined;\n            \n            // Check for new build\n            const isNewBuild = card.textContent?.includes('New build') || card.textContent?.includes('New home') || false;\n            \n            // Create property object\n            const property: RightmoveProperty = {\n              id: propertyId,\n              address,\n              postcode,\n              price,\n              property_type: propertyType,\n              bedrooms,\n              bathrooms,\n              description: infoText.trim(),\n              image_urls: imgSrc ? [imgSrc] : [],\n              main_image_url: imgSrc,\n              agent: {\n                name: agentName,\n                logo_url: agentLogoUrl\n              },\n              new_build: isNewBuild,\n              is_active: true,\n              rightmove_url: fullPropertyUrl\n            };\n            \n            properties.push(property);\n          } catch (err) {\n            console.error(`Error parsing property card ${index}:`, err);\n          }\n        });\n        \n        // Extract pagination info\n        const paginationText = doc.querySelector('.searchHeader-resultCount, [data-test=\"total-results\"]')?.textContent || '';\n        const totalMatch = paginationText.match(/of\\s+(\\d+)|(\\d+)\\s+results/i);\n        const total = totalMatch ? parseInt(totalMatch[1] || totalMatch[2]) : properties.length;\n        const totalPages = Math.ceil(total / 24); // Rightmove shows 24 properties per page\n        \n        return {\n          properties,\n          total,\n          page,\n          totalPages\n        };\n      } catch (error) {\n        console.error('Error in searchRightmoveProperties:', error);\n        \n        // COMPLETELY DISABLE MOCK DATA EVEN IN ERROR CASES\n        // Forward the error to be handled by the caller\n        throw error;\n      }\n    }\n  );\n};\n\n// Get detailed property data from a Rightmove property URL\nexport const getPropertyDetails = async (propertyId: string): Promise<RightmoveProperty | null> => {\n  if (!propertyId) {\n    throw new Error('Property ID is required');\n  }\n  \n  const cacheKey = `rightmove:property:${propertyId}`;\n  \n  return getCachedOrFresh(\n    cacheKey,\n    async () => {\n      try {\n        // If it has \"mock-\" prefix, it's a mock property ID\n        if (propertyId.startsWith('mock-') && import.meta.env.VITE_USE_MOCK_DATA === 'true') {\n          console.log('Mock property ID detected, using mock property details');\n          return {\n            id: propertyId,\n            address: '123 Mock Street, London',\n            postcode: 'SW1A 1AA',\n            price: 500000,\n            property_type: 'Detached',\n            bedrooms: 3,\n            bathrooms: 2,\n            description: 'A beautiful mock property for testing',\n            image_urls: ['https://via.placeholder.com/800x600.png?text=Property'],\n            main_image_url: 'https://via.placeholder.com/800x600.png?text=Property',\n            agent: {\n              name: 'Mock Estate Agents',\n              phone: '01234 567890',\n              logo_url: 'https://via.placeholder.com/200x100.png?text=Agent+Logo'\n            },\n            new_build: false,\n            is_active: true,\n            rightmove_url: `https://www.rightmove.co.uk/properties/${propertyId}`,\n            features: ['Garden', 'Parking', 'Double Glazing', 'Central Heating']\n          };\n        }\n        \n        // Format with and without the trailing slash - Rightmove accepts both\n        const rightmoveUrl = `https://www.rightmove.co.uk/properties/${propertyId}`;\n        \n        // Additional parameters for ScraperAPI to improve reliability\n        const scraperParams = {\n          api_key: SCRAPER_API_KEY,\n          url: encodeURIComponent(rightmoveUrl),\n          render: 'true',\n          country_code: 'uk',\n          keep_headers: 'true',\n          premium: 'true' // Use premium proxies for better success rate\n        };\n        \n        // Build the ScraperAPI URL with parameters\n        const scraperApiUrl = `${SCRAPER_API_URL}?${Object.entries(scraperParams)\n          .map(([key, value]) => `${key}=${value}`)\n          .join('&')}`;\n        \n        console.log('Fetching property details from:', rightmoveUrl);\n        console.log('ScraperAPI URL:', scraperApiUrl);\n        \n        const response = await fetch(scraperApiUrl);\n        \n        if (!response.ok) {\n          throw new Error(`Failed to fetch property details: ${response.status} ${response.statusText}`);\n        }\n        \n        const html = await response.text();\n        console.log('Received property details HTML of length:', html.length);\n        \n        if (html.length < 1000) {\n          console.warn('Suspiciously short property details HTML received');\n          console.log('HTML content preview:', html.substring(0, 500));\n          \n          if (html.includes('rate limit') || html.includes('too many requests')) {\n            throw new Error('Rate limited by ScraperAPI. Please try again later.');\n          }\n        }\n        \n        const property = extractPropertyDetails(html, rightmoveUrl);\n        \n        if (!property) {\n          throw new Error('Failed to extract property details from HTML');\n        }\n        \n        return property;\n      } catch (error) {\n        console.error('Error in getPropertyDetails:', error);\n        \n        // Don't use mock data in error cases - let the error propagate\n        throw error;\n      }\n    }\n  );\n};\n\n// Check if a property is still active on Rightmove\nexport const checkPropertyActiveStatus = async (propertyId: string): Promise<boolean> => {\n  try {\n    // Only use mock mode if explicitly enabled\n    if (import.meta.env.VITE_USE_MOCK_DATA === 'true') {\n      console.log('Using mock active status because VITE_USE_MOCK_DATA=true');\n      return true; // Always return active in mock mode\n    }\n    \n    const rightmoveUrl = `https://www.rightmove.co.uk/properties/${propertyId}`;\n    const scraperApiUrl = `${SCRAPER_API_URL}?api_key=${SCRAPER_API_KEY}&url=${encodeURIComponent(rightmoveUrl)}&render=true`;\n    \n    const response = await fetch(scraperApiUrl);\n    \n    if (!response.ok) {\n      throw new Error(`Failed to fetch property status: ${response.status} ${response.statusText}`);\n    }\n    \n    const html = await response.text();\n    \n    // Property is inactive if the page contains certain text\n    const isInactive = html.includes('This property has been removed by the agent') || \n                      html.includes('This property is no longer available') ||\n                      html.includes('has now been sold subject to contract');\n    \n    // Update the cache if the property is inactive\n    if (isInactive) {\n      try {\n        // Update property cache entry directly\n        await supabase.rpc('mark_property_inactive', { property_id: propertyId });\n        console.log(`Marked property ${propertyId} as inactive`);\n      } catch (err) {\n        console.error('Failed to update property active status in cache:', err);\n      }\n    }\n    \n    return !isInactive;\n  } catch (error) {\n    console.error('Error checking property active status:', error);\n    // Don't assume inactive, throw the error to be handled by the caller\n    throw error;\n  }\n};\n\n// Purge expired cache entries\nexport const purgeExpiredCache = async (): Promise<number> => {\n  try {\n    const { data, error } = await supabase.rpc('purge_expired_cache');\n    \n    if (error) {\n      throw error;\n    }\n    \n    return data || 0;\n  } catch (error) {\n    console.error('Error purging expired cache:', error);\n    return 0;\n  }\n}; ","import { supabase } from './supabase';\nimport { checkPropertyActiveStatus, purgeExpiredCache } from './rightmoveScraper';\n\n// Check if listings are still active\nexport const checkActiveListings = async () => {\n  try {\n    // Get property IDs from cache to check (limit to 50 at a time to avoid overwhelming ScraperAPI)\n    const { data: cachedProperties, error } = await supabase\n      .from('scraper_cache')\n      .select('key')\n      .like('key', 'rightmove:property:%')\n      .eq('is_active', true)\n      .limit(50);\n    \n    if (error) {\n      throw error;\n    }\n    \n    if (!cachedProperties || cachedProperties.length === 0) {\n      console.log('No properties to check');\n      return 0;\n    }\n    \n    console.log(`Checking active status for ${cachedProperties.length} properties`);\n    \n    // Process each property\n    let inactiveCount = 0;\n    \n    for (const cachedProperty of cachedProperties) {\n      // Extract property ID from the key\n      const propertyId = cachedProperty.key.replace('rightmove:property:', '');\n      \n      // Check if property is still active\n      const isActive = await checkPropertyActiveStatus(propertyId);\n      \n      if (!isActive) {\n        inactiveCount++;\n      }\n      \n      // Introduce a small delay to avoid rate limiting\n      await new Promise(resolve => setTimeout(resolve, 500));\n    }\n    \n    console.log(`Found ${inactiveCount} inactive properties`);\n    return inactiveCount;\n  } catch (error) {\n    console.error('Error checking active listings:', error);\n    return 0;\n  }\n};\n\n// Clean up expired cache entries\nexport const cleanupExpiredCache = async () => {\n  try {\n    const deletedCount = await purgeExpiredCache();\n    console.log(`Purged ${deletedCount} expired cache entries`);\n    return deletedCount;\n  } catch (error) {\n    console.error('Error cleaning up expired cache:', error);\n    return 0;\n  }\n};\n\n// Main function to run all background jobs\nexport const runBackgroundJobs = async () => {\n  console.log('Running background jobs...');\n  \n  // First, purge expired cache\n  await cleanupExpiredCache();\n  \n  // Then check active listings\n  await checkActiveListings();\n  \n  console.log('Background jobs completed');\n};\n\n// Function to set up background jobs to run periodically\nexport const setupBackgroundJobs = () => {\n  // Run initially after a short delay\n  setTimeout(() => runBackgroundJobs(), 30000);\n  \n  // Then run every 24 hours\n  setInterval(() => runBackgroundJobs(), 24 * 60 * 60 * 1000);\n  \n  console.log('Background jobs scheduled');\n}; ","import { Suspense, useEffect, useState } from \"react\";\nimport { Routes, Route, Navigate, useLocation, useParams, useNavigate } from \"react-router-dom\";\nimport { Toaster } from \"./components/ui/toaster\";\nimport { AuthProvider, useAuth } from \"./lib/auth\";\nimport { Loading } from \"./components/ui/loading\";\nimport { ProgressBar } from \"./components/ui/progress-bar\";\nimport Header from './components/Header';\nimport Home from \"./components/home\";\nimport Dashboard from \"./components/Dashboard\";\nimport PricingPage from \"./components/PricingPage\";\nimport SubscriptionSuccess from \"./components/SubscriptionSuccess\";\nimport SubscriptionCancel from \"./components/SubscriptionCancel\";\nimport AccountSettings from \"./components/AccountSettings\";\nimport NotFound from \"./components/NotFound\";\nimport MarketInsightsPage from \"./components/MarketInsightsPage\";\nimport MarketTrendsPage from \"./components/MarketTrendsPage\";\nimport { ArticlePage } from \"./components/ArticlePage\";\nimport ResearchPage from \"./components/ResearchPage\";\nimport BlogPage from \"./components/BlogPage\";\nimport HelpSupportPage from \"./components/HelpSupportPage\";\nimport { ChatBot } from \"./components/ChatBot\";\nimport AuthCallback from \"./components/AuthCallback\";\nimport PropertyManagementPage from \"./components/PropertyManagementPage\";\nimport InvestmentOpportunitiesPage from \"./components/InvestmentOpportunitiesPage\";\nimport AboutUsPage from \"./components/AboutUsPage\";\nimport DealsPage from \"./components/DealsPage\";\nimport Messages from \"./pages/Messages\";\nimport Listings from './pages/Listings';\nimport Calculators from \"./pages/Calculators\";\nimport ReportDetailPage from \"./components/ReportDetailPage\";\nimport WaitlistPage from \"./components/WaitlistPage\";\nimport { supabase } from \"./lib/supabase\";\nimport ResearchAndReports from \"./pages/ResearchAndReports\";\nimport AdminReports from \"./pages/AdminReports\";\nimport { setupBackgroundJobs } from './lib/backgroundJobs';\n\n// Add TypeScript declaration for import.meta.env\ndeclare global {\n  interface ImportMeta {\n    env: {\n      MODE: string;\n      VITE_SUPABASE_URL: string;\n      VITE_SUPABASE_ANON_KEY: string;\n      VITE_TEMPO?: string;\n      [key: string]: string | undefined;\n    };\n  }\n}\n\n// Add a wrapper component for ArticlePage that extracts URL parameters\nfunction ArticlePageWrapper() {\n  const { title } = useParams();\n  \n  // Provide default or placeholder values\n  return (\n    <ArticlePage \n      title={title || \"Loading...\"} \n      content=\"Content is loading...\" \n      date={new Date().toISOString().split('T')[0]} \n    />\n  );\n}\n\n// Global state to avoid excessive redirects\nlet isAuthChecking = false;\n\n// PrivateRoute component that redirects to waitlist if not authenticated\nfunction PrivateRoute({ children }: { children: React.ReactNode }) {\n  const { user, isLoading } = useAuth();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const [authConfirmed, setAuthConfirmed] = useState(false);\n  \n  useEffect(() => {\n    // Check if we have a direct sign of authentication from the waitlist page\n    const hasLocalAuth = localStorage.getItem('vge_user_authenticated') === 'true';\n    const authTimestamp = parseInt(localStorage.getItem('vge_auth_timestamp') || '0');\n    const isRecentAuth = Date.now() - authTimestamp < 1000 * 60 * 60; // Within the last hour\n    \n    // If we're already checking auth, don't duplicate the process\n    if (isAuthChecking) return;\n    \n    // Handle auth check\n    const checkAuth = async () => {\n      // Prevent multiple simultaneous checks\n      isAuthChecking = true;\n      \n      try {\n        console.log(\"Checking auth in PrivateRoute. User:\", !!user, \"Path:\", location.pathname);\n        \n        // First, check if we have a confirmed login from localStorage\n        if (hasLocalAuth && isRecentAuth) {\n          console.log(\"Local auth confirmed from waitlist login\");\n          setAuthConfirmed(true);\n          isAuthChecking = false;\n          return;\n        }\n        \n        // Next, check the auth state from the context\n        if (!isLoading) {\n          if (user) {\n            console.log(\"Auth confirmed from user context\");\n            setAuthConfirmed(true);\n          } else if (location.pathname !== '/waitlist') {\n            console.log(\"No auth, redirecting to waitlist\");\n            navigate('/waitlist', { replace: true });\n          }\n        }\n      } catch (error) {\n        console.error(\"Error in PrivateRoute auth check:\", error);\n      } finally {\n        isAuthChecking = false;\n      }\n    };\n    \n    checkAuth();\n  }, [user, isLoading, navigate, location.pathname]);\n  \n  // If we're still checking auth and don't have confirmation yet, show loading\n  if ((isLoading || !authConfirmed) && !user) {\n    return <Loading />;\n  }\n  \n  // If we're confirmed or have a user, show content\n  if (authConfirmed || user) {\n    return <>{children}</>;\n  }\n  \n  // Default: don't show content. The redirect will happen in the useEffect\n  return null;\n}\n\n// Wrap the main content in a component to use hooks\nfunction AppContent() {\n  const [isLoading, setIsLoading] = useState(true);\n  const location = useLocation();\n  const { user, profile, signOut, refreshProfile } = useAuth();\n  const [isDevelopment, setIsDevelopment] = useState(true); // Flag to control waitlist bypass\n  const navigate = useNavigate();\n\n  // Improved auth check that runs only once on initial load\n  useEffect(() => {\n    let isMounted = true;\n    \n    // Skip auth check for waitlist and auth callback pages\n    if (location.pathname === '/waitlist' || location.pathname === '/auth/callback') {\n      return;\n    }\n    \n    const checkInitialAuth = async () => {\n      try {\n        console.log(\"Performing initial auth check\");\n        const { data } = await supabase.auth.getSession();\n        \n        if (isMounted) {\n          console.log(\"Initial auth check result:\", !!data.session);\n          \n          // If no session and not already on waitlist, redirect\n          if (!data.session && location.pathname !== '/waitlist') {\n            navigate('/waitlist', { replace: true });\n          }\n        }\n      } catch (error) {\n        console.error(\"Error in initial auth check:\", error);\n      }\n    };\n    \n    checkInitialAuth();\n    \n    return () => {\n      isMounted = false;\n    };\n  }, []);  // Empty dependency array = only runs once on mount\n\n  // Log auth state for debugging\n  useEffect(() => {\n    if (user) {\n      console.log(\"Auth state in App: User is authenticated\");\n      \n      // Store auth state in localStorage as an additional check\n      localStorage.setItem('vge_user_authenticated', 'true');\n      localStorage.setItem('vge_auth_timestamp', Date.now().toString());\n      \n      // Use refreshProfile to ensure we have latest auth state\n      if (refreshProfile) {\n        refreshProfile();\n      }\n    } else {\n      console.log(\"Auth state in App: User is not authenticated\");\n    }\n  }, [refreshProfile, user]);\n\n  useEffect(() => {\n    const handleStart = () => setIsLoading(true);\n    const handleStop = () => setIsLoading(false);\n\n    handleStart();\n    const timer = setTimeout(handleStop, 100);\n\n    return () => clearTimeout(timer);\n  }, [location.pathname]);\n\n  useEffect(() => {\n    document.documentElement.classList.remove(\"dark\");\n  }, []);\n\n  useEffect(() => {\n    // Set up background jobs for property listings when in production\n    if (import.meta.env.PROD) {\n      setupBackgroundJobs();\n    }\n  }, []);\n\n  return (\n    <div className=\"min-h-screen bg-background\">\n      {location.pathname !== '/waitlist' && (\n        <Header \n          isAuthenticated={!!user}\n          userProfile={profile || undefined}\n          onSignIn={() => {\n            // This will be handled by the Header component\n          }}\n          onSignUp={() => {\n            // This will be handled by the Header component\n          }}\n          onSignOut={() => {\n            // Clear local auth state\n            localStorage.removeItem('vge_user_authenticated');\n            localStorage.removeItem('vge_auth_timestamp');\n            \n            // Call the real signOut function\n            if (signOut) signOut();\n          }}\n        />\n      )}\n      <main>\n        <Routes>\n          {/* Public waitlist route */}\n          <Route path=\"/waitlist\" element={<WaitlistPage />} />\n          \n          {/* Auth callback must be public */}\n          <Route path=\"/auth/callback\" element={<AuthCallback />} />\n          \n          {/* Protected routes that require authentication */}\n          <Route path=\"/\" element={\n            <PrivateRoute>\n              <Home />\n            </PrivateRoute>\n          } />\n          <Route path=\"/listings\" element={\n            <PrivateRoute>\n              <Listings />\n            </PrivateRoute>\n          } />\n          <Route path=\"/deals\" element={\n            <PrivateRoute>\n              <DealsPage />\n            </PrivateRoute>\n          } />\n          <Route path=\"/trends\" element={\n            <PrivateRoute>\n              <MarketTrendsPage />\n            </PrivateRoute>\n          } />\n          <Route path=\"/insights\" element={\n            <PrivateRoute>\n              <MarketInsightsPage />\n            </PrivateRoute>\n          } />\n          <Route path=\"/calculators\" element={\n            <PrivateRoute>\n              <Calculators />\n            </PrivateRoute>\n          } />\n          <Route path=\"/profile\" element={\n            <PrivateRoute>\n              <AccountSettings />\n            </PrivateRoute>\n          } />\n          <Route path=\"/login\" element={<Navigate to=\"/\" replace />} />\n          <Route path=\"/dashboard\" element={\n            <PrivateRoute>\n              <Dashboard />\n            </PrivateRoute>\n          } />\n          <Route path=\"/pricing\" element={\n            <PrivateRoute>\n              <PricingPage />\n            </PrivateRoute>\n          } />\n          <Route path=\"/subscription/success\" element={\n            <PrivateRoute>\n              <SubscriptionSuccess />\n            </PrivateRoute>\n          } />\n          <Route path=\"/subscription/cancel\" element={\n            <PrivateRoute>\n              <SubscriptionCancel />\n            </PrivateRoute>\n          } />\n          <Route path=\"/account\" element={\n            <PrivateRoute>\n              <AccountSettings />\n            </PrivateRoute>\n          } />\n          <Route path=\"/research\" element={\n            <PrivateRoute>\n              <ResearchPage />\n            </PrivateRoute>\n          } />\n          <Route path=\"/research/reports/:slug\" element={\n            <PrivateRoute>\n              <ReportDetailPage />\n            </PrivateRoute>\n          } />\n          <Route path=\"/blog\" element={\n            <PrivateRoute>\n              <BlogPage />\n            </PrivateRoute>\n          } />\n          <Route path=\"/article/:title\" element={\n            <PrivateRoute>\n              <ArticlePageWrapper />\n            </PrivateRoute>\n          } />\n          <Route path=\"/blog/:slug\" element={\n            <PrivateRoute>\n              <ArticlePageWrapper />\n            </PrivateRoute>\n          } />\n          <Route path=\"/help\" element={\n            <PrivateRoute>\n              <HelpSupportPage />\n            </PrivateRoute>\n          } />\n          <Route path=\"/property-management\" element={\n            <PrivateRoute>\n              <PropertyManagementPage />\n            </PrivateRoute>\n          } />\n          <Route path=\"/investment-opportunities\" element={\n            <PrivateRoute>\n              <InvestmentOpportunitiesPage />\n            </PrivateRoute>\n          } />\n          <Route path=\"/about-us\" element={\n            <PrivateRoute>\n              <AboutUsPage />\n            </PrivateRoute>\n          } />\n          <Route path=\"/messages\" element={\n            <PrivateRoute>\n              <Messages />\n            </PrivateRoute>\n          } />\n          <Route path=\"/research-reports\" element={\n            <PrivateRoute>\n              <ResearchAndReports />\n            </PrivateRoute>\n          } />\n          <Route path=\"/admin/reports\" element={\n            <PrivateRoute>\n              <AdminReports />\n            </PrivateRoute>\n          } />\n          {import.meta.env.VITE_TEMPO === \"true\" && (\n            <Route path=\"/tempobook/*\" element={null} />\n          )}\n          \n          {/* Default redirect to waitlist or home */}\n          <Route path=\"\" element={<Navigate to={user ? \"/\" : \"/waitlist\"} replace />} />\n          \n          {/* 404 page */}\n          <Route path=\"*\" element={<NotFound />} />\n        </Routes>\n      </main>\n      \n      {location.pathname !== '/waitlist' && <ChatBot />}\n      <Toaster />\n      <ProgressBar isAnimating={isLoading} />\n    </div>\n  );\n}\n\n// Main App component with providers\nfunction App() {\n  return (\n    <AuthProvider>\n      <Suspense fallback={<Loading />}>\n        <AppContent />\n      </Suspense>\n    </AuthProvider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport App from \"./App.tsx\";\nimport \"./index.css\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport { TempoDevtools } from \"tempo-devtools\";\nimport { AuthProvider } from \"./lib/auth\";\nimport posthog from 'posthog-js'\nimport { QueryClient, QueryClientProvider } from '@tanstack/react-query';\n\nTempoDevtools.init();\n\nposthog.init('phc_Pg1VGdZoazG7KyDNxnUXNZZz6zPVrGNSRtFlDnlZCcA',\n    {\n        api_host: 'https://eu.i.posthog.com',\n        person_profiles: 'identified_only' // or 'always' to create profiles for anonymous users as well\n    }\n)\n\nconst queryClient = new QueryClient();\n\nReactDOM.createRoot(document.getElementById(\"root\")!).render(\n  <React.StrictMode>\n    <QueryClientProvider client={queryClient}>\n      <BrowserRouter>\n        <AuthProvider>\n          <App />\n        </AuthProvider>\n      </BrowserRouter>\n    </QueryClientProvider>\n  </React.StrictMode>,\n);\n"],"file":"assets/index-DfNeDH6F.js"}